{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { styled, t, useTruncation } from '@superset-ui/core';\nimport { Tooltip } from '../Tooltip';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst StyledTruncatedList = styled.div`\n  & > span {\n    width: 100%;\n    display: flex;\n\n    .ant-tooltip-open {\n      display: inline;\n    }\n  }\n`;\nconst StyledVisibleItems = styled.span`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  display: inline-block;\n  width: 100%;\n  vertical-align: bottom;\n`;\nconst StyledVisibleItem = styled.span`\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n`;\nconst StyledTooltipItem = styled.div`\n  .link {\n    color: ${({ theme }) => theme.colors.grayscale.light5};\n    display: block;\n    text-decoration: underline;\n  }\n`;\nconst StyledPlus = styled.span`\n  ${({ theme }) => `\n  cursor: pointer;\n  color: ${theme.colors.primary.dark1};\n  font-weight: ${theme.typography.weights.normal};\n  `}\n`;\nexport default function TruncatedList({ items, renderVisibleItem = (item) => item, renderTooltipItem = (item) => item, getKey = (item) => item, maxLinks = 20 }) {\n  const [itemsNotInTooltipRef, plusRef, elementsTruncated, hasHiddenElements] = useTruncation();\n  const nMoreItems = useMemo(() => items.length > maxLinks ? items.length - maxLinks : undefined, [items, maxLinks]);\n  const itemsNotInTooltip = useMemo(() => _jsx(StyledVisibleItems, { ref: itemsNotInTooltipRef, \"data-test\": \"crosslinks\", children:\n    items.map((item) => _jsx(StyledVisibleItem, { children:\n      renderVisibleItem(item) }, getKey(item)\n    )) }\n  ), [getKey, items, renderVisibleItem]);\n  const itemsInTooltip = useMemo(() => items.\n  slice(0, maxLinks).\n  map((item) => _jsx(StyledTooltipItem, { children:\n    renderTooltipItem(item) }, getKey(item)\n  )), [getKey, items, maxLinks, renderTooltipItem]);\n  return _jsx(StyledTruncatedList, { children:\n    _jsxs(Tooltip, { placement: \"top\", title: elementsTruncated ? _jsxs(_Fragment, { children: [\n        itemsInTooltip,\n        nMoreItems && _jsx(\"span\", { children: t('+ %s more', nMoreItems) })] }\n      ) : null, children: [\n      itemsNotInTooltip,\n      hasHiddenElements && _jsxs(StyledPlus, { ref: plusRef, children: [\"+\", elementsTruncated] })] }\n    ) }\n  );\n}__signature__(TruncatedList, \"useTruncation{[itemsNotInTooltipRef, plusRef, elementsTruncated, hasHiddenElements]}\\nuseMemo{nMoreItems}\\nuseMemo{itemsNotInTooltip}\\nuseMemo{itemsInTooltip}\", () => [useTruncation]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledTruncatedList, \"StyledTruncatedList\", \"/app/superset-frontend/src/components/TruncatedList/index.tsx\");reactHotLoader.register(StyledVisibleItems, \"StyledVisibleItems\", \"/app/superset-frontend/src/components/TruncatedList/index.tsx\");reactHotLoader.register(StyledVisibleItem, \"StyledVisibleItem\", \"/app/superset-frontend/src/components/TruncatedList/index.tsx\");reactHotLoader.register(StyledTooltipItem, \"StyledTooltipItem\", \"/app/superset-frontend/src/components/TruncatedList/index.tsx\");reactHotLoader.register(StyledPlus, \"StyledPlus\", \"/app/superset-frontend/src/components/TruncatedList/index.tsx\");reactHotLoader.register(TruncatedList, \"TruncatedList\", \"/app/superset-frontend/src/components/TruncatedList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","styled","t","useTruncation","Tooltip","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","StyledTruncatedList","div","StyledVisibleItems","span","StyledVisibleItem","StyledTooltipItem","theme","colors","grayscale","light5","StyledPlus","primary","dark1","typography","weights","normal","TruncatedList","items","renderVisibleItem","item","renderTooltipItem","getKey","maxLinks","itemsNotInTooltipRef","plusRef","elementsTruncated","hasHiddenElements","nMoreItems","length","undefined","itemsNotInTooltip","ref","children","map","itemsInTooltip","slice","placement","title","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/src/components/TruncatedList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ReactNode, Key, useMemo } from 'react';\n\nimport { styled, t, useTruncation } from '@superset-ui/core';\nimport { Tooltip } from '../Tooltip';\n\nexport type TruncatedListProps<ListItemType> = {\n  /**\n   * Array of input items of type `ListItemType`.\n   */\n  items: ListItemType[];\n\n  /**\n   * Renderer for items not overflowed into the tooltip.\n   * Required if `ListItemType` is not renderable by React.\n   */\n  renderVisibleItem?: (item: ListItemType) => ReactNode;\n\n  /**\n   * Renderer for items that are overflowed into the tooltip.\n   * Required if `ListItemType` is not renderable by React.\n   */\n  renderTooltipItem?: (item: ListItemType) => ReactNode;\n\n  /**\n   * Returns the React key for an item.\n   */\n  getKey?: (item: ListItemType) => Key;\n\n  /**\n   * The max number of links that should appear in the tooltip.\n   */\n  maxLinks?: number;\n};\n\nconst StyledTruncatedList = styled.div`\n  & > span {\n    width: 100%;\n    display: flex;\n\n    .ant-tooltip-open {\n      display: inline;\n    }\n  }\n`;\n\nconst StyledVisibleItems = styled.span`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  display: inline-block;\n  width: 100%;\n  vertical-align: bottom;\n`;\n\nconst StyledVisibleItem = styled.span`\n  &:not(:last-child)::after {\n    content: ', ';\n  }\n`;\n\nconst StyledTooltipItem = styled.div`\n  .link {\n    color: ${({ theme }) => theme.colors.grayscale.light5};\n    display: block;\n    text-decoration: underline;\n  }\n`;\n\nconst StyledPlus = styled.span`\n  ${({ theme }) => `\n  cursor: pointer;\n  color: ${theme.colors.primary.dark1};\n  font-weight: ${theme.typography.weights.normal};\n  `}\n`;\n\nexport default function TruncatedList<ListItemType>({\n  items,\n  renderVisibleItem = item => item,\n  renderTooltipItem = item => item,\n  getKey = item => item as unknown as Key,\n  maxLinks = 20,\n}: TruncatedListProps<ListItemType>) {\n  const [itemsNotInTooltipRef, plusRef, elementsTruncated, hasHiddenElements] =\n    useTruncation();\n\n  const nMoreItems = useMemo(\n    () => (items.length > maxLinks ? items.length - maxLinks : undefined),\n    [items, maxLinks],\n  );\n\n  const itemsNotInTooltip = useMemo(\n    () => (\n      <StyledVisibleItems ref={itemsNotInTooltipRef} data-test=\"crosslinks\">\n        {items.map(item => (\n          <StyledVisibleItem key={getKey(item)}>\n            {renderVisibleItem(item)}\n          </StyledVisibleItem>\n        ))}\n      </StyledVisibleItems>\n    ),\n    [getKey, items, renderVisibleItem],\n  );\n\n  const itemsInTooltip = useMemo(\n    () =>\n      items\n        .slice(0, maxLinks)\n        .map(item => (\n          <StyledTooltipItem key={getKey(item)}>\n            {renderTooltipItem(item)}\n          </StyledTooltipItem>\n        )),\n    [getKey, items, maxLinks, renderTooltipItem],\n  );\n\n  return (\n    <StyledTruncatedList>\n      <Tooltip\n        placement=\"top\"\n        title={\n          elementsTruncated ? (\n            <>\n              {itemsInTooltip}\n              {nMoreItems && <span>{t('+ %s more', nMoreItems)}</span>}\n            </>\n          ) : null\n        }\n      >\n        {itemsNotInTooltip}\n        {hasHiddenElements && (\n          <StyledPlus ref={plusRef}>+{elementsTruncated}</StyledPlus>\n        )}\n      </Tooltip>\n    </StyledTruncatedList>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}