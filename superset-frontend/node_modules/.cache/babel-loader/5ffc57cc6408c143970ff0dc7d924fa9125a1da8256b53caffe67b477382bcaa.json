{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport { AntdButton, AntdSelect } from 'src/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport Icons from 'src/components/Icons';\nimport { infoTooltip, labelMarginBottom, CredentialInfoForm } from '../styles';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nvar CredentialInfoOptions;\n(function (CredentialInfoOptions) {\n  CredentialInfoOptions[CredentialInfoOptions[\"JsonUpload\"] = 0] = \"JsonUpload\";\n  CredentialInfoOptions[CredentialInfoOptions[\"CopyPaste\"] = 1] = \"CopyPaste\";\n})(CredentialInfoOptions || (CredentialInfoOptions = {}));\n// These are the columns that are going to be added to encrypted extra, they differ in name based\n// on the engine, however we want to use the same component for each of them. Make sure to add the\n// the engine specific name here.\nexport const encryptedCredentialsMap = {\n  gsheets: 'service_account_info',\n  bigquery: 'credentials_info'\n};\nconst castStringToBoolean = (optionValue) => optionValue === 'true';var _ref = process.env.NODE_ENV === \"production\" ? { name: \"s5xdrg\", styles: \"display:flex;align-items:center\" } : { name: \"13vndg3-EncryptedField\", styles: \"display:flex;align-items:center;label:EncryptedField;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\nexport const EncryptedField = ({ changeMethods, isEditMode, db, editNewDb }) => {var _db$parameters, _db$parameters2, _db$parameters3;\n  const [uploadOption, setUploadOption] = useState(CredentialInfoOptions.JsonUpload.valueOf());\n  const [fileToUpload, setFileToUpload] = useState(null);\n  const [isPublic, setIsPublic] = useState(true);\n  const showCredentialsInfo = (db == null ? void 0 : db.engine) === 'gsheets' ? !isEditMode && !isPublic : !isEditMode;\n  const isEncrypted = isEditMode && (db == null ? void 0 : db.masked_encrypted_extra) !== '{}';\n  const encryptedField = (db == null ? void 0 : db.engine) && encryptedCredentialsMap[db.engine];\n  const encryptedValue = typeof (db == null ? void 0 : (_db$parameters = db.parameters) == null ? void 0 : _db$parameters[encryptedField]) === 'object' ?\n  JSON.stringify(db == null ? void 0 : (_db$parameters2 = db.parameters) == null ? void 0 : _db$parameters2[encryptedField]) :\n  db == null ? void 0 : (_db$parameters3 = db.parameters) == null ? void 0 : _db$parameters3[encryptedField];\n  return _jsxs(CredentialInfoForm, { children: [\n    (db == null ? void 0 : db.engine) === 'gsheets' && _jsxs(\"div\", { className: \"catalog-type-select\", children: [\n      _jsx(FormLabel, { css: (theme) => labelMarginBottom(theme), required: true, children:\n        t('Type of Google Sheets allowed') }\n      ),\n      _jsxs(AntdSelect, { style: { width: '100%' }, defaultValue: isEncrypted ? 'false' : 'true', onChange: (value) => setIsPublic(castStringToBoolean(value)), children: [\n        _jsx(AntdSelect.Option, { value: \"true\", children:\n          t('Publicly shared sheets only') }, 1\n        ),\n        _jsx(AntdSelect.Option, { value: \"false\", children:\n          t('Public and privately shared sheets') }, 2\n        )] }\n      )] }\n    ),\n    showCredentialsInfo && _jsxs(_Fragment, { children: [\n      _jsx(FormLabel, { required: true, children:\n        t('How do you want to enter service account credentials?') }\n      ),\n      _jsxs(AntdSelect, { defaultValue: uploadOption, style: { width: '100%' }, onChange: (option) => setUploadOption(option), children: [\n        _jsx(AntdSelect.Option, { value: CredentialInfoOptions.JsonUpload, children:\n          t('Upload JSON file') }\n        ),\n\n        _jsx(AntdSelect.Option, { value: CredentialInfoOptions.CopyPaste, children:\n          t('Copy and Paste JSON credentials') }\n        )] }\n      )] }\n    ),\n    uploadOption === CredentialInfoOptions.CopyPaste ||\n    isEditMode ||\n    editNewDb ? _jsxs(\"div\", { className: \"input-container\", children: [\n      _jsx(FormLabel, { required: true, children: t('Service Account') }),\n      _jsx(\"textarea\", { className: \"input-form\", name: encryptedField, value: encryptedValue, onChange: changeMethods.onParametersChange, placeholder: t('Paste content of service credentials JSON file here') }),\n      _jsx(\"span\", { className: \"label-paste\", children:\n        t('Copy and paste the entire service account .json file here') }\n      )] }\n    ) : showCredentialsInfo && _jsxs(\"div\", { className: \"input-container\", css: (theme) => infoTooltip(theme), children: [\n      _jsxs(\"div\", { css: _ref, children: [\n        _jsx(FormLabel, { required: true, children: t('Upload Credentials') }),\n        _jsx(InfoTooltip, { tooltip: t('Use the JSON file you automatically downloaded when creating your service account.'), viewBox: \"0 0 24 24\" })] }\n      ),\n\n      !fileToUpload && _jsx(AntdButton, { className: \"input-upload-btn\", onClick: () => {var _document, _document$getElementB;return (_document = document) == null ? void 0 : (_document$getElementB = _document.getElementById('selectedFile')) == null ? void 0 : _document$getElementB.click();}, children:\n        t('Choose File') }\n      ),\n      fileToUpload && _jsxs(\"div\", { className: \"input-upload-current\", children: [\n        fileToUpload,\n        _jsx(Icons.DeleteFilled, { iconSize: \"m\", onClick: () => {\n            setFileToUpload(null);\n            changeMethods.onParametersChange({\n              target: {\n                name: encryptedField,\n                value: ''\n              }\n            });\n          } })] }\n      ),\n\n      _jsx(\"input\", { id: \"selectedFile\", accept: \".json\", className: \"input-upload\", type: \"file\", onChange: async (event) => {var _file, _file2;\n          let file;\n          if (event.target.files) {\n            file = event.target.files[0];\n          }\n          setFileToUpload((_file = file) == null ? void 0 : _file.name);\n          changeMethods.onParametersChange({\n            target: {\n              type: null,\n              name: encryptedField,\n              value: await ((_file2 = file) == null ? void 0 : _file2.text()),\n              checked: false\n            }\n          });\n          document.getElementById('selectedFile').value = null;\n        } })] }\n    )] }\n  );\n};__signature__(EncryptedField, \"useState{[uploadOption, setUploadOption](CredentialInfoOptions.JsonUpload.valueOf())}\\nuseState{[fileToUpload, setFileToUpload](null)}\\nuseState{[isPublic, setIsPublic](true)}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(CredentialInfoOptions, \"CredentialInfoOptions\", \"/app/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/EncryptedField.tsx\");reactHotLoader.register(encryptedCredentialsMap, \"encryptedCredentialsMap\", \"/app/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/EncryptedField.tsx\");reactHotLoader.register(castStringToBoolean, \"castStringToBoolean\", \"/app/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/EncryptedField.tsx\");reactHotLoader.register(EncryptedField, \"EncryptedField\", \"/app/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/EncryptedField.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","t","AntdButton","AntdSelect","InfoTooltip","FormLabel","Icons","infoTooltip","labelMarginBottom","CredentialInfoForm","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CredentialInfoOptions","encryptedCredentialsMap","gsheets","bigquery","castStringToBoolean","optionValue","_ref","process","env","NODE_ENV","name","styles","map","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","EncryptedField","changeMethods","isEditMode","db","editNewDb","_db$parameters","_db$parameters2","_db$parameters3","uploadOption","setUploadOption","JsonUpload","valueOf","fileToUpload","setFileToUpload","isPublic","setIsPublic","showCredentialsInfo","engine","isEncrypted","masked_encrypted_extra","encryptedField","encryptedValue","parameters","JSON","stringify","children","className","css","theme","required","style","width","defaultValue","onChange","value","Option","option","CopyPaste","onParametersChange","placeholder","tooltip","viewBox","onClick","_document","_document$getElementB","document","getElementById","click","DeleteFilled","iconSize","target","id","accept","type","event","_file","_file2","file","files","text","checked","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/EncryptedField.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState } from 'react';\nimport { SupersetTheme, t } from '@superset-ui/core';\nimport { AntdButton, AntdSelect } from 'src/components';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport Icons from 'src/components/Icons';\nimport { FieldPropTypes } from '../../types';\nimport { infoTooltip, labelMarginBottom, CredentialInfoForm } from '../styles';\n\nenum CredentialInfoOptions {\n  JsonUpload,\n  CopyPaste,\n}\n\n// These are the columns that are going to be added to encrypted extra, they differ in name based\n// on the engine, however we want to use the same component for each of them. Make sure to add the\n// the engine specific name here.\nexport const encryptedCredentialsMap = {\n  gsheets: 'service_account_info',\n  bigquery: 'credentials_info',\n};\n\nconst castStringToBoolean = (optionValue: string) => optionValue === 'true';\n\nexport const EncryptedField = ({\n  changeMethods,\n  isEditMode,\n  db,\n  editNewDb,\n}: FieldPropTypes) => {\n  const [uploadOption, setUploadOption] = useState<number>(\n    CredentialInfoOptions.JsonUpload.valueOf(),\n  );\n  const [fileToUpload, setFileToUpload] = useState<string | null | undefined>(\n    null,\n  );\n  const [isPublic, setIsPublic] = useState<boolean>(true);\n  const showCredentialsInfo =\n    db?.engine === 'gsheets' ? !isEditMode && !isPublic : !isEditMode;\n  const isEncrypted = isEditMode && db?.masked_encrypted_extra !== '{}';\n  const encryptedField = db?.engine && encryptedCredentialsMap[db.engine];\n  const encryptedValue =\n    typeof db?.parameters?.[encryptedField] === 'object'\n      ? JSON.stringify(db?.parameters?.[encryptedField])\n      : db?.parameters?.[encryptedField];\n  return (\n    <CredentialInfoForm>\n      {db?.engine === 'gsheets' && (\n        <div className=\"catalog-type-select\">\n          <FormLabel\n            css={(theme: SupersetTheme) => labelMarginBottom(theme)}\n            required\n          >\n            {t('Type of Google Sheets allowed')}\n          </FormLabel>\n          <AntdSelect\n            style={{ width: '100%' }}\n            defaultValue={isEncrypted ? 'false' : 'true'}\n            onChange={(value: string) =>\n              setIsPublic(castStringToBoolean(value))\n            }\n          >\n            <AntdSelect.Option value=\"true\" key={1}>\n              {t('Publicly shared sheets only')}\n            </AntdSelect.Option>\n            <AntdSelect.Option value=\"false\" key={2}>\n              {t('Public and privately shared sheets')}\n            </AntdSelect.Option>\n          </AntdSelect>\n        </div>\n      )}\n      {showCredentialsInfo && (\n        <>\n          <FormLabel required>\n            {t('How do you want to enter service account credentials?')}\n          </FormLabel>\n          <AntdSelect\n            defaultValue={uploadOption}\n            style={{ width: '100%' }}\n            onChange={option => setUploadOption(option)}\n          >\n            <AntdSelect.Option value={CredentialInfoOptions.JsonUpload}>\n              {t('Upload JSON file')}\n            </AntdSelect.Option>\n\n            <AntdSelect.Option value={CredentialInfoOptions.CopyPaste}>\n              {t('Copy and Paste JSON credentials')}\n            </AntdSelect.Option>\n          </AntdSelect>\n        </>\n      )}\n      {uploadOption === CredentialInfoOptions.CopyPaste ||\n      isEditMode ||\n      editNewDb ? (\n        <div className=\"input-container\">\n          <FormLabel required>{t('Service Account')}</FormLabel>\n          <textarea\n            className=\"input-form\"\n            name={encryptedField}\n            value={encryptedValue}\n            onChange={changeMethods.onParametersChange}\n            placeholder={t(\n              'Paste content of service credentials JSON file here',\n            )}\n          />\n          <span className=\"label-paste\">\n            {t('Copy and paste the entire service account .json file here')}\n          </span>\n        </div>\n      ) : (\n        showCredentialsInfo && (\n          <div\n            className=\"input-container\"\n            css={(theme: SupersetTheme) => infoTooltip(theme)}\n          >\n            <div css={{ display: 'flex', alignItems: 'center' }}>\n              <FormLabel required>{t('Upload Credentials')}</FormLabel>\n              <InfoTooltip\n                tooltip={t(\n                  'Use the JSON file you automatically downloaded when creating your service account.',\n                )}\n                viewBox=\"0 0 24 24\"\n              />\n            </div>\n\n            {!fileToUpload && (\n              <AntdButton\n                className=\"input-upload-btn\"\n                onClick={() =>\n                  document?.getElementById('selectedFile')?.click()\n                }\n              >\n                {t('Choose File')}\n              </AntdButton>\n            )}\n            {fileToUpload && (\n              <div className=\"input-upload-current\">\n                {fileToUpload}\n                <Icons.DeleteFilled\n                  iconSize=\"m\"\n                  onClick={() => {\n                    setFileToUpload(null);\n                    changeMethods.onParametersChange({\n                      target: {\n                        name: encryptedField,\n                        value: '',\n                      },\n                    });\n                  }}\n                />\n              </div>\n            )}\n\n            <input\n              id=\"selectedFile\"\n              accept=\".json\"\n              className=\"input-upload\"\n              type=\"file\"\n              onChange={async event => {\n                let file;\n                if (event.target.files) {\n                  file = event.target.files[0];\n                }\n                setFileToUpload(file?.name);\n                changeMethods.onParametersChange({\n                  target: {\n                    type: null,\n                    name: encryptedField,\n                    value: await file?.text(),\n                    checked: false,\n                  },\n                });\n                (\n                  document.getElementById('selectedFile') as HTMLInputElement\n                ).value = null as any;\n              }}\n            />\n          </div>\n        )\n      )}\n    </CredentialInfoForm>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}