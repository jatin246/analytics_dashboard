{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { buildQueryContext, ensureIsArray, getTimeOffset, parseDttmToDate } from '@superset-ui/core';\nimport { isTimeComparison, timeCompareOperator } from '@superset-ui/chart-controls';\n\nexport default function buildQuery(formData) {\n  const { cols: groupby } = formData;\n  const queryContextA = buildQueryContext(formData, (baseQueryObject) => {var _formData$adhoc_filte, _formData$adhoc_custo, _previousCustomTimeRa, _baseQueryObject$time, _TimeRangeFilters$, _parseDttmToDate;\n    const postProcessing = [];\n    postProcessing.push(timeCompareOperator(formData, baseQueryObject));\n    const TimeRangeFilters = ((_formData$adhoc_filte = formData.adhoc_filters) == null ? void 0 : _formData$adhoc_filte.filter((filter) => filter.operator === 'TEMPORAL_RANGE')) || [];\n    // In case the viz is using all version of controls, we try to load them\n    const previousCustomTimeRangeFilters = ((_formData$adhoc_custo = formData.adhoc_custom) == null ? void 0 : _formData$adhoc_custo.filter((filter) => filter.operator === 'TEMPORAL_RANGE')) || [];\n    let previousCustomStartDate = '';\n    if (!_isEmpty(previousCustomTimeRangeFilters) &&\n    ((_previousCustomTimeRa = previousCustomTimeRangeFilters[0]) == null ? void 0 : _previousCustomTimeRa.comparator) !== 'No Filter') {var _previousCustomTimeRa2;\n      previousCustomStartDate = (_previousCustomTimeRa2 =\n      previousCustomTimeRangeFilters[0]) == null ? void 0 : _previousCustomTimeRa2.comparator.split(' : ')[0];\n    }\n    const timeOffsets = ensureIsArray(isTimeComparison(formData, baseQueryObject) ?\n    getTimeOffset({\n      timeRangeFilter: {\n        ...TimeRangeFilters[0],\n        comparator: (_baseQueryObject$time = baseQueryObject == null ? void 0 : baseQueryObject.time_range) != null ? _baseQueryObject$time : (_TimeRangeFilters$ =\n        TimeRangeFilters[0]) == null ? void 0 : _TimeRangeFilters$.comparator\n      },\n      shifts: formData.time_compare,\n      startDate: previousCustomStartDate && !formData.start_date_offset ? (_parseDttmToDate =\n      parseDttmToDate(previousCustomStartDate)) == null ? void 0 : _parseDttmToDate.toUTCString() :\n      formData.start_date_offset\n    }) :\n    []);\n    return [\n    {\n      ...baseQueryObject,\n      groupby,\n      post_processing: postProcessing,\n      time_offsets: isTimeComparison(formData, baseQueryObject) ?\n      ensureIsArray(timeOffsets) :\n      []\n    }];\n\n  });\n  return {\n    ...queryContextA\n  };\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(buildQuery, \"buildQuery\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/buildQuery.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["buildQueryContext","ensureIsArray","getTimeOffset","parseDttmToDate","isTimeComparison","timeCompareOperator","buildQuery","formData","cols","groupby","queryContextA","baseQueryObject","_formData$adhoc_filte","_formData$adhoc_custo","_previousCustomTimeRa","_baseQueryObject$time","_TimeRangeFilters$","_parseDttmToDate","postProcessing","push","TimeRangeFilters","adhoc_filters","filter","operator","previousCustomTimeRangeFilters","adhoc_custom","previousCustomStartDate","_isEmpty","comparator","_previousCustomTimeRa2","split","timeOffsets","timeRangeFilter","time_range","shifts","time_compare","startDate","start_date_offset","toUTCString","post_processing","time_offsets","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/plugin-chart-echarts/src/BigNumber/BigNumberPeriodOverPeriod/buildQuery.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  buildQueryContext,\n  QueryFormData,\n  PostProcessingRule,\n  ensureIsArray,\n  SimpleAdhocFilter,\n  getTimeOffset,\n  parseDttmToDate,\n} from '@superset-ui/core';\nimport {\n  isTimeComparison,\n  timeCompareOperator,\n} from '@superset-ui/chart-controls';\nimport { isEmpty } from 'lodash';\n\nexport default function buildQuery(formData: QueryFormData) {\n  const { cols: groupby } = formData;\n\n  const queryContextA = buildQueryContext(formData, baseQueryObject => {\n    const postProcessing: PostProcessingRule[] = [];\n    postProcessing.push(timeCompareOperator(formData, baseQueryObject));\n    const TimeRangeFilters =\n      formData.adhoc_filters?.filter(\n        (filter: SimpleAdhocFilter) => filter.operator === 'TEMPORAL_RANGE',\n      ) || [];\n\n    // In case the viz is using all version of controls, we try to load them\n    const previousCustomTimeRangeFilters: any =\n      formData.adhoc_custom?.filter(\n        (filter: SimpleAdhocFilter) => filter.operator === 'TEMPORAL_RANGE',\n      ) || [];\n\n    let previousCustomStartDate = '';\n    if (\n      !isEmpty(previousCustomTimeRangeFilters) &&\n      previousCustomTimeRangeFilters[0]?.comparator !== 'No Filter'\n    ) {\n      previousCustomStartDate =\n        previousCustomTimeRangeFilters[0]?.comparator.split(' : ')[0];\n    }\n\n    const timeOffsets = ensureIsArray(\n      isTimeComparison(formData, baseQueryObject)\n        ? getTimeOffset({\n            timeRangeFilter: {\n              ...TimeRangeFilters[0],\n              comparator:\n                baseQueryObject?.time_range ??\n                (TimeRangeFilters[0] as any)?.comparator,\n            },\n            shifts: formData.time_compare,\n            startDate:\n              previousCustomStartDate && !formData.start_date_offset\n                ? parseDttmToDate(previousCustomStartDate)?.toUTCString()\n                : formData.start_date_offset,\n          })\n        : [],\n    );\n    return [\n      {\n        ...baseQueryObject,\n        groupby,\n        post_processing: postProcessing,\n        time_offsets: isTimeComparison(formData, baseQueryObject)\n          ? ensureIsArray(timeOffsets)\n          : [],\n      },\n    ];\n  });\n\n  return {\n    ...queryContextA,\n  };\n}\n"],"mappings":"8UAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,iBAAiB,EAGjBC,aAAa,EAEbC,aAAa,EACbC,eAAe,QACV,mBAAmB;AAC1B,SACEC,gBAAgB,EAChBC,mBAAmB,QACd,6BAA6B;;AAGpC,eAAc,SAAUC,UAAUA,CAACC,QAAuB;EACxD,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAE,GAAGF,QAAQ;EAElC,MAAMG,aAAa,GAAGV,iBAAiB,CAACO,QAAQ,EAAE,CAAAI,eAAe,KAAG,KAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA,EAAAC,kBAAA,EAAAC,gBAAA;IAClE,MAAMC,cAAc,GAAyB,EAAE;IAC/CA,cAAc,CAACC,IAAI,CAACd,mBAAmB,CAACE,QAAQ,EAAEI,eAAe,CAAC,CAAC;IACnE,MAAMS,gBAAgB,GACpB,EAAAR,qBAAA,GAAAL,QAAQ,CAACc,aAAa,qBAAtBT,qBAAA,CAAwBU,MAAM,CAC5B,CAACA,MAAyB,KAAKA,MAAM,CAACC,QAAQ,KAAK,gBAAgB,CACpE,KAAI,EAAE;IAET;IACA,MAAMC,8BAA8B,GAClC,EAAAX,qBAAA,GAAAN,QAAQ,CAACkB,YAAY,qBAArBZ,qBAAA,CAAuBS,MAAM,CAC3B,CAACA,MAAyB,KAAKA,MAAM,CAACC,QAAQ,KAAK,gBAAgB,CACpE,KAAI,EAAE;IAET,IAAIG,uBAAuB,GAAG,EAAE;IAChC,IACE,CAACC,QAAA,CAAQH,8BAA8B,CAAC;IACxC,EAAAV,qBAAA,GAAAU,8BAA8B,CAAC,CAAC,CAAC,qBAAjCV,qBAAA,CAAmCc,UAAU,MAAK,WAAW,EAC7D,KAAAC,sBAAA;MACAH,uBAAuB,IAAAG,sBAAA;MACrBL,8BAA8B,CAAC,CAAC,CAAC,qBAAjCK,sBAAA,CAAmCD,UAAU,CAACE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAGjE,MAAMC,WAAW,GAAG9B,aAAa,CAC/BG,gBAAgB,CAACG,QAAQ,EAAEI,eAAe,CAAC;IACvCT,aAAa,CAAC;MACZ8B,eAAe,EAAE;QACf,GAAGZ,gBAAgB,CAAC,CAAC,CAAC;QACtBQ,UAAU,GAAAb,qBAAA,GACRJ,eAAe,oBAAfA,eAAe,CAAEsB,UAAU,YAAAlB,qBAAA,IAAAC,kBAAA;QAC1BI,gBAAgB,CAAC,CAAC,CAAS,qBAA3BJ,kBAAA,CAA6BY;OACjC;MACDM,MAAM,EAAE3B,QAAQ,CAAC4B,YAAY;MAC7BC,SAAS,EACPV,uBAAuB,IAAI,CAACnB,QAAQ,CAAC8B,iBAAiB,IAAApB,gBAAA;MAClDd,eAAe,CAACuB,uBAAuB,CAAC,qBAAxCT,gBAAA,CAA0CqB,WAAW,EAAE;MACvD/B,QAAQ,CAAC8B;KAChB,CAAC;IACF,EAAE,CACP;IACD,OAAO;IACL;MACE,GAAG1B,eAAe;MAClBF,OAAO;MACP8B,eAAe,EAAErB,cAAc;MAC/BsB,YAAY,EAAEpC,gBAAgB,CAACG,QAAQ,EAAEI,eAAe,CAAC;MACrDV,aAAa,CAAC8B,WAAW,CAAC;MAC1B;KACL,CACF;;EACH,CAAC,CAAC;EAEF,OAAO;IACL,GAAGrB;GACJ;AACH,CAAC,mBAAA+B,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA1DuBvC,UAAU,qJAAAwC,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}