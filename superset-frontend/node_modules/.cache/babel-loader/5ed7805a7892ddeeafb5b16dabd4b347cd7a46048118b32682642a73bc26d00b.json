{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useRef, useState } from 'react';\nimport { styled, t, useComponentDidUpdate } from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport { AntdForm, Typography } from 'src/components';\nimport { ScopingType } from './types';\nimport ScopingTree from './ScopingTree';\nimport { getDefaultScopeValue, isScopingAll } from './utils';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > * {\n    margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  }\n  padding: 0px ${({ theme }) => theme.gridUnit * 4}px;\n`;\nconst CleanFormItem = styled(AntdForm.Item)`\n  margin-bottom: 0;\n`;\nconst FilterScope = ({ pathToFormValue = [], formScopingType, formFilterScope, forceUpdate, filterScope, updateFormValues, chartId, initiallyExcludedCharts }) => {\n  const [initialFilterScope] = useState(filterScope || getDefaultScopeValue(chartId, initiallyExcludedCharts));\n  const lastSpecificScope = useRef(initialFilterScope);\n  const [initialScopingType] = useState(isScopingAll(initialFilterScope, chartId) ?\n  ScopingType.All :\n  ScopingType.Specific);\n  const [hasScopeBeenModified, setHasScopeBeenModified] = useState(!!filterScope);\n  const onUpdateFormValues = useCallback((formValues) => {\n    if (formScopingType === ScopingType.Specific) {\n      lastSpecificScope.current = formValues.scope;\n    }\n    updateFormValues(formValues);\n    setHasScopeBeenModified(true);\n  }, [formScopingType, updateFormValues]);\n  const updateScopes = useCallback(() => {\n    if (filterScope || hasScopeBeenModified) {\n      return;\n    }\n    const newScope = getDefaultScopeValue(chartId, initiallyExcludedCharts);\n    updateFormValues({\n      scope: newScope,\n      scoping: isScopingAll(newScope, chartId) ?\n      ScopingType.All :\n      ScopingType.Specific\n    });\n  }, [\n  chartId,\n  filterScope,\n  hasScopeBeenModified,\n  initiallyExcludedCharts,\n  updateFormValues]\n  );\n  useComponentDidUpdate(updateScopes);\n  return _jsxs(Wrapper, { children: [\n    _jsx(CleanFormItem, { name: [...pathToFormValue, 'scoping'], initialValue: initialScopingType, children:\n      _jsxs(Radio.Group, { onChange: ({ target: { value } }) => {\n          const scope = value === ScopingType.All ?\n          getDefaultScopeValue(chartId) :\n          lastSpecificScope.current;\n          updateFormValues({ scope });\n          setHasScopeBeenModified(true);\n          forceUpdate();\n        }, children: [\n        _jsx(Radio, { value: ScopingType.All, children: t('Apply to all panels') }),\n        _jsx(Radio, { value: ScopingType.Specific, children:\n          t('Apply to specific panels') }\n        )] }\n      ) }\n    ),\n    _jsx(Typography.Text, { type: \"secondary\", children:\n      (formScopingType != null ? formScopingType : initialScopingType) === ScopingType.Specific ?\n      t('Only selected panels will be affected by this filter') :\n      t('All panels with this column will be affected by this filter') }\n    ),\n    (formScopingType != null ? formScopingType : initialScopingType) === ScopingType.Specific && _jsx(ScopingTree, { updateFormValues: onUpdateFormValues, initialScope: initialFilterScope, formScope: formFilterScope, forceUpdate: forceUpdate, chartId: chartId, initiallyExcludedCharts: initiallyExcludedCharts }),\n    _jsx(CleanFormItem, { name: [...pathToFormValue, 'scope'], hidden: true, initialValue: initialFilterScope })] }\n  );\n};__signature__(FilterScope, \"useState{[initialFilterScope](filterScope || getDefaultScopeValue(chartId, initiallyExcludedCharts))}\\nuseRef{lastSpecificScope}\\nuseState{[initialScopingType](isScopingAll(initialFilterScope, chartId)\\n        ? ScopingType.All\\n        : ScopingType.Specific)}\\nuseState{[hasScopeBeenModified, setHasScopeBeenModified](!!filterScope)}\\nuseCallback{onUpdateFormValues}\\nuseCallback{updateScopes}\\nuseComponentDidUpdate{}\", () => [useComponentDidUpdate]);const _default =\nFilterScope;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Wrapper, \"Wrapper\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");reactHotLoader.register(CleanFormItem, \"CleanFormItem\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");reactHotLoader.register(FilterScope, \"FilterScope\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useRef","useState","styled","t","useComponentDidUpdate","Radio","AntdForm","Typography","ScopingType","ScopingTree","getDefaultScopeValue","isScopingAll","jsx","_jsx","jsxs","_jsxs","Wrapper","div","theme","gridUnit","CleanFormItem","Item","FilterScope","pathToFormValue","formScopingType","formFilterScope","forceUpdate","filterScope","updateFormValues","chartId","initiallyExcludedCharts","initialFilterScope","lastSpecificScope","initialScopingType","All","Specific","hasScopeBeenModified","setHasScopeBeenModified","onUpdateFormValues","formValues","current","scope","updateScopes","newScope","scoping","children","name","initialValue","Group","onChange","target","value","Text","type","initialScope","formScope","hidden","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FiltersConfigModal/FiltersConfigForm/FilterScope/FilterScope.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, useCallback, useRef, useState } from 'react';\nimport {\n  NativeFilterScope,\n  styled,\n  t,\n  useComponentDidUpdate,\n} from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport { AntdForm, Typography } from 'src/components';\nimport { ScopingType } from './types';\nimport ScopingTree from './ScopingTree';\nimport { getDefaultScopeValue, isScopingAll } from './utils';\n\ntype FilterScopeProps = {\n  pathToFormValue?: string[];\n  updateFormValues: (values: any) => void;\n  formFilterScope?: NativeFilterScope;\n  forceUpdate: Function;\n  filterScope?: NativeFilterScope;\n  formScopingType?: ScopingType;\n  chartId?: number;\n  initiallyExcludedCharts?: number[];\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > * {\n    margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  }\n  padding: 0px ${({ theme }) => theme.gridUnit * 4}px;\n`;\n\nconst CleanFormItem = styled(AntdForm.Item)`\n  margin-bottom: 0;\n`;\n\nconst FilterScope: FC<FilterScopeProps> = ({\n  pathToFormValue = [],\n  formScopingType,\n  formFilterScope,\n  forceUpdate,\n  filterScope,\n  updateFormValues,\n  chartId,\n  initiallyExcludedCharts,\n}) => {\n  const [initialFilterScope] = useState(\n    filterScope || getDefaultScopeValue(chartId, initiallyExcludedCharts),\n  );\n  const lastSpecificScope = useRef(initialFilterScope);\n  const [initialScopingType] = useState(\n    isScopingAll(initialFilterScope, chartId)\n      ? ScopingType.All\n      : ScopingType.Specific,\n  );\n  const [hasScopeBeenModified, setHasScopeBeenModified] =\n    useState(!!filterScope);\n\n  const onUpdateFormValues = useCallback(\n    (formValues: any) => {\n      if (formScopingType === ScopingType.Specific) {\n        lastSpecificScope.current = formValues.scope;\n      }\n      updateFormValues(formValues);\n      setHasScopeBeenModified(true);\n    },\n    [formScopingType, updateFormValues],\n  );\n\n  const updateScopes = useCallback(() => {\n    if (filterScope || hasScopeBeenModified) {\n      return;\n    }\n\n    const newScope = getDefaultScopeValue(chartId, initiallyExcludedCharts);\n    updateFormValues({\n      scope: newScope,\n      scoping: isScopingAll(newScope, chartId)\n        ? ScopingType.All\n        : ScopingType.Specific,\n    });\n  }, [\n    chartId,\n    filterScope,\n    hasScopeBeenModified,\n    initiallyExcludedCharts,\n    updateFormValues,\n  ]);\n  useComponentDidUpdate(updateScopes);\n\n  return (\n    <Wrapper>\n      <CleanFormItem\n        name={[...pathToFormValue, 'scoping']}\n        initialValue={initialScopingType}\n      >\n        <Radio.Group\n          onChange={({ target: { value } }) => {\n            const scope =\n              value === ScopingType.All\n                ? getDefaultScopeValue(chartId)\n                : lastSpecificScope.current;\n            updateFormValues({ scope });\n            setHasScopeBeenModified(true);\n            forceUpdate();\n          }}\n        >\n          <Radio value={ScopingType.All}>{t('Apply to all panels')}</Radio>\n          <Radio value={ScopingType.Specific}>\n            {t('Apply to specific panels')}\n          </Radio>\n        </Radio.Group>\n      </CleanFormItem>\n      <Typography.Text type=\"secondary\">\n        {(formScopingType ?? initialScopingType) === ScopingType.Specific\n          ? t('Only selected panels will be affected by this filter')\n          : t('All panels with this column will be affected by this filter')}\n      </Typography.Text>\n      {(formScopingType ?? initialScopingType) === ScopingType.Specific && (\n        <ScopingTree\n          updateFormValues={onUpdateFormValues}\n          initialScope={initialFilterScope}\n          formScope={formFilterScope}\n          forceUpdate={forceUpdate}\n          chartId={chartId}\n          initiallyExcludedCharts={initiallyExcludedCharts}\n        />\n      )}\n      <CleanFormItem\n        name={[...pathToFormValue, 'scope']}\n        hidden\n        initialValue={initialFilterScope}\n      />\n    </Wrapper>\n  );\n};\n\nexport default FilterScope;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}