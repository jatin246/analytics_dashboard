{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _pick from \"lodash/pick\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useState, memo } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport { nanoid } from 'nanoid';\nimport { QueryState, styled, t, tn, useTheme, usePrevious, css, getNumberFormatter, getExtensionsRegistry } from '@superset-ui/core';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { EXPLORE_CHART_DEFAULT } from 'src/SqlLab/types';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { postFormData } from 'src/explore/exploreUtils/formData';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Loading from 'src/components/Loading';\nimport Card from 'src/components/Card';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';\nimport FilterableTable from 'src/components/FilterableTable';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport { getItem, LocalStorageKeys } from 'src/utils/localStorageHelpers';\nimport { addQueryEditor, clearQueryResults, CtasEnum, fetchQueryResults, reFetchQueryResults, reRunQuery } from 'src/SqlLab/actions/sqlLab';\nimport { URL_PARAMS } from 'src/constants';\nimport useLogAction from 'src/logger/useLogAction';\nimport { LOG_ACTIONS_SQLLAB_COPY_RESULT_TO_CLIPBOARD, LOG_ACTIONS_SQLLAB_CREATE_CHART, LOG_ACTIONS_SQLLAB_DOWNLOAD_CSV } from 'src/logger/LogUtils';\nimport Icons from 'src/components/Icons';\nimport { findPermission } from 'src/utils/findPermission';\nimport ExploreCtasResultsButton from '../ExploreCtasResultsButton';\nimport ExploreResultsButton from '../ExploreResultsButton';\nimport HighlightedSql from '../HighlightedSql';\nimport QueryStateLabel from '../QueryStateLabel';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nvar LimitingFactor;\n(function (LimitingFactor) {\n  LimitingFactor[\"Query\"] = \"QUERY\";\n  LimitingFactor[\"QueryAndDropdown\"] = \"QUERY_AND_DROPDOWN\";\n  LimitingFactor[\"Dropdown\"] = \"DROPDOWN\";\n  LimitingFactor[\"NotLimited\"] = \"NOT_LIMITED\";\n})(LimitingFactor || (LimitingFactor = {}));\nconst ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nconst ResultlessStyles = styled.div`\n  position: relative;\n  min-height: ${({ theme }) => theme.gridUnit * 25}px;\n  [role='alert'] {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n  .sql-result-track-job {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n`;\n// Making text render line breaks/tabs as is as monospace,\n// but wrapping text too so text doesn't overflow\nconst MonospaceDiv = styled.div`\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n  white-space: pre;\n  word-break: break-word;\n  overflow-x: auto;\n  white-space: pre-wrap;\n`;\nconst ReturnedRows = styled.div`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  line-height: 1;\n`;\nconst ResultSetControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst ResultSetButtons = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  padding-right: ${({ theme }) => 2 * theme.gridUnit}px;\n`;\nconst ROWS_CHIP_WIDTH = 100;\nconst GAP = 8;\nconst extensionsRegistry = getExtensionsRegistry();\nconst ResultSet = ({ cache = false, csv = true, database = {}, displayLimit, height, queryId, search = true, showSql = false, showSqlInline = false, visualize = true, defaultQueryLimit }) => {var _extensionsRegistry$g, _query$results2, _query$extra$progress, _query$extra2;\n  const user = useSelector(({ user }) => user, shallowEqual);\n  const query = useSelector(({ sqlLab: { queries } }) => _pick(queries[queryId], [\n  'id',\n  'errorMessage',\n  'cached',\n  'results',\n  'resultsKey',\n  'dbId',\n  'tab',\n  'sql',\n  'sqlEditorId',\n  'templateParams',\n  'schema',\n  'rows',\n  'queryLimit',\n  'limitingFactor',\n  'trackingUrl',\n  'state',\n  'errors',\n  'link',\n  'ctas',\n  'ctas_method',\n  'tempSchema',\n  'tempTable',\n  'isDataPreview',\n  'progress',\n  'extra']\n  ), shallowEqual);\n  const ResultTable = (_extensionsRegistry$g = extensionsRegistry.get('sqleditor.extension.resultTable')) != null ? _extensionsRegistry$g :\n  FilterableTable;\n  const theme = useTheme();\n  const [searchText, setSearchText] = useState('');\n  const [cachedData, setCachedData] = useState([]);\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [alertIsOpen, setAlertIsOpen] = useState(false);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const logAction = useLogAction({ queryId, sqlEditorId: query.sqlEditorId });\n  const reRunQueryIfSessionTimeoutErrorOnMount = useCallback(() => {\n    if (query.errorMessage &&\n    query.errorMessage.indexOf('session timed out') > 0) {\n      dispatch(reRunQuery(query));\n    }\n  }, []);\n  useEffect(() => {\n    // only do this the first time the component is rendered/mounted\n    reRunQueryIfSessionTimeoutErrorOnMount();\n  }, [reRunQueryIfSessionTimeoutErrorOnMount]);\n  const fetchResults = (q) => {\n    dispatch(fetchQueryResults(q, displayLimit));\n  };\n  const prevQuery = usePrevious(query);\n  useEffect(() => {var _query$results, _query$results$data;\n    if (cache && query.cached && (query == null ? void 0 : (_query$results = query.results) == null ? void 0 : (_query$results$data = _query$results.data) == null ? void 0 : _query$results$data.length) > 0) {\n      setCachedData(query.results.data);\n      dispatch(clearQueryResults(query));\n    }\n    if (query.resultsKey && query.resultsKey !== (prevQuery == null ? void 0 : prevQuery.resultsKey)) {\n      fetchResults(query);\n    }\n  }, [query, cache]);\n  const calculateAlertRefHeight = (alertElement) => {\n    if (alertElement) {\n      setAlertIsOpen(true);\n    } else\n    {\n      setAlertIsOpen(false);\n    }\n  };\n  const popSelectStar = (tempSchema, tempTable) => {\n    const qe = {\n      id: nanoid(11),\n      name: tempTable,\n      autorun: false,\n      dbId: query.dbId,\n      sql: `SELECT * FROM ${tempSchema ? `${tempSchema}.` : ''}${tempTable}`\n    };\n    dispatch(addQueryEditor(qe));\n  };\n  const changeSearch = (event) => {\n    setSearchText(event.target.value);\n  };\n  const createExploreResultsOnClick = async (clickEvent) => {\n    const { results } = query;\n    const openInNewWindow = clickEvent.metaKey;\n    logAction(LOG_ACTIONS_SQLLAB_CREATE_CHART, {});\n    if (results != null && results.query_id) {\n      const key = await postFormData(results.query_id, 'query', {\n        ...EXPLORE_CHART_DEFAULT,\n        datasource: `${results.query_id}__query`,\n        ...{\n          all_columns: results.columns.map((column) => column.column_name)\n        }\n      });\n      const url = mountExploreUrl(null, {\n        [URL_PARAMS.formDataKey.name]: key\n      });\n      if (openInNewWindow) {\n        window.open(url, '_blank', 'noreferrer');\n      } else\n      {\n        history.push(url);\n      }\n    } else\n    {\n      addDangerToast(t('Unable to create chart without a query id.'));\n    }\n  };\n  const getExportCsvUrl = (clientId) => `/api/v1/sqllab/export/${clientId}/`;\n  const renderControls = () => {\n    if (search || visualize || csv) {\n      let { data } = query.results;\n      if (cache && query.cached) {\n        data = cachedData;\n      }\n      const { columns } = query.results;\n      // Added compute logic to stop user from being able to Save & Explore\n      const datasource = {\n        columns: query.results.columns,\n        name: (query == null ? void 0 : query.tab) || 'Untitled',\n        dbId: query == null ? void 0 : query.dbId,\n        sql: query == null ? void 0 : query.sql,\n        templateParams: query == null ? void 0 : query.templateParams,\n        schema: query == null ? void 0 : query.schema\n      };\n      const canExportData = findPermission('can_export_csv', 'SQLLab', user == null ? void 0 : user.roles);\n      return _jsxs(ResultSetControls, { children: [\n        _jsx(SaveDatasetModal, { visible: showSaveDatasetModal, onHide: () => setShowSaveDatasetModal(false), buttonTextOnSave: t('Save & Explore'), buttonTextOnOverwrite: t('Overwrite & Explore'), modalDescription: t('Save this query as a virtual dataset to continue exploring'), datasource: datasource }),\n        _jsxs(ResultSetButtons, { children: [\n          visualize && (database == null ? void 0 : database.allows_virtual_table_explore) && _jsx(ExploreResultsButton, { database: database, onClick: createExploreResultsOnClick }),\n          csv && canExportData && _jsxs(Button, { buttonSize: \"small\", href: getExportCsvUrl(query.id), \"data-test\": \"export-csv-button\", onClick: () => logAction(LOG_ACTIONS_SQLLAB_DOWNLOAD_CSV, {}), children: [\n            _jsx(\"i\", { className: \"fa fa-file-text-o\" }), \" \", t('Download to CSV')] }\n          ),\n\n          canExportData && _jsx(CopyToClipboard, { text: prepareCopyToClipboardTabularData(data, columns), wrapped: false, copyNode: _jsxs(Button, { buttonSize: \"small\", \"data-test\": \"copy-to-clipboard-button\", children: [\n              _jsx(\"i\", { className: \"fa fa-clipboard\" }), \" \", t('Copy to Clipboard')] }\n            ), hideTooltip: true, onCopyEnd: () => logAction(LOG_ACTIONS_SQLLAB_COPY_RESULT_TO_CLIPBOARD, {}) })] }\n        ),\n        search && _jsx(\"input\", { type: \"text\", onChange: changeSearch, value: searchText, className: \"form-control input-sm\", placeholder: t('Filter results') })] }\n      );\n    }\n    return _jsx(\"div\", {});\n  };\n  const renderRowsReturned = (alertMessage) => {var _user$roles, _results$data;\n    const { results, rows, queryLimit, limitingFactor } = query;\n    let limitMessage = '';\n    const limitReached = results == null ? void 0 : results.displayLimitReached;\n    const limit = queryLimit || results.query.limit;\n    const isAdmin = !!(user != null && (_user$roles = user.roles) != null && _user$roles.Admin);\n    const rowsCount = Math.min(rows || 0, (results == null ? void 0 : (_results$data = results.data) == null ? void 0 : _results$data.length) || 0);\n    const displayMaxRowsReachedMessage = {\n      withAdmin: t('The number of results displayed is limited to %(rows)d by the configuration DISPLAY_MAX_ROW. ' +\n      'Please add additional limits/filters or download to csv to see more rows up to ' +\n      'the %(limit)d limit.', { rows: rowsCount, limit }),\n      withoutAdmin: t('The number of results displayed is limited to %(rows)d. ' +\n      'Please add additional limits/filters, download to csv, or contact an admin ' +\n      'to see more rows up to the %(limit)d limit.', { rows: rowsCount, limit })\n    };\n    const shouldUseDefaultDropdownAlert = limit === defaultQueryLimit && limitingFactor === LimitingFactor.Dropdown;\n    if (limitingFactor === LimitingFactor.Query && csv) {\n      limitMessage = t('The number of rows displayed is limited to %(rows)d by the query', { rows });\n    } else\n    if (limitingFactor === LimitingFactor.Dropdown &&\n    !shouldUseDefaultDropdownAlert) {\n      limitMessage = t('The number of rows displayed is limited to %(rows)d by the limit dropdown.', { rows });\n    } else\n    if (limitingFactor === LimitingFactor.QueryAndDropdown) {\n      limitMessage = t('The number of rows displayed is limited to %(rows)d by the query and limit dropdown.', { rows });\n    }\n    const formattedRowCount = getNumberFormatter()(rows);\n    const rowsReturnedMessage = t('%(rows)d rows returned', {\n      rows\n    });\n    const tooltipText = `${rowsReturnedMessage}. ${limitMessage}`;\n    if (alertMessage) {\n      return _jsxs(_Fragment, { children: [\n        !limitReached && shouldUseDefaultDropdownAlert && _jsx(\"div\", { ref: calculateAlertRefHeight, children:\n          _jsx(Alert, { type: \"warning\", message: t('%(rows)d rows returned', { rows }), onClose: () => setAlertIsOpen(false), description: t('The number of rows displayed is limited to %(rows)d by the dropdown.', { rows }) }) }\n        ),\n        limitReached && _jsx(\"div\", { ref: calculateAlertRefHeight, children:\n          _jsx(Alert, { type: \"warning\", onClose: () => setAlertIsOpen(false), message: t('%(rows)d rows returned', { rows: rowsCount }), description: isAdmin ?\n            displayMaxRowsReachedMessage.withAdmin :\n            displayMaxRowsReachedMessage.withoutAdmin }) }\n        )] }\n      );\n    }\n    const showRowsReturned = showSqlInline || !limitReached && !shouldUseDefaultDropdownAlert;\n    return _jsx(_Fragment, { children:\n      showRowsReturned && _jsx(ReturnedRows, { children:\n        _jsx(Tooltip, { id: \"sqllab-rowcount-tooltip\", title: tooltipText, placement: \"left\", children:\n          _jsxs(Label, { css: css`\n                  line-height: ${theme.typography.sizes.l}px;\n                `, children: [\n            limitMessage && _jsx(Icons.ExclamationCircleOutlined, { css: css`\n                      font-size: ${theme.typography.sizes.m}px;\n                      margin-right: ${theme.gridUnit}px;\n                    ` }),\n            tn('%s row', '%s rows', rows, formattedRowCount)] }\n          ) }\n        ) }\n      ) }\n    );\n  };\n  const limitReached = query == null ? void 0 : (_query$results2 = query.results) == null ? void 0 : _query$results2.displayLimitReached;\n  let sql;\n  let exploreDBId = query.dbId;\n  if (database != null && database.explore_database_id) {\n    exploreDBId = database.explore_database_id;\n  }\n  let trackingUrl;\n  if (query.trackingUrl &&\n  query.state !== QueryState.Success &&\n  query.state !== QueryState.Fetching) {\n    trackingUrl = _jsx(Button, { className: \"sql-result-track-job\", buttonSize: \"small\", href: query.trackingUrl, target: \"_blank\", children:\n      query.state === QueryState.Running ?\n      t('Track job') :\n      t('See query details') }\n    );\n  }\n  if (showSql) {\n    sql = _jsx(HighlightedSql, { sql: query.sql, ...(showSqlInline && { maxLines: 1, maxWidth: 60 }) });\n  }\n  if (query.state === QueryState.Stopped) {\n    return _jsx(Alert, { type: \"warning\", message: t('Query was stopped') });\n  }\n  if (query.state === QueryState.Failed) {var _query$extra, _query$extra$errors, _query$errors;\n    return _jsxs(ResultlessStyles, { children: [\n      _jsx(ErrorMessageWithStackTrace, { title: t('Database error'), error: (query == null ? void 0 : (_query$extra = query.extra) == null ? void 0 : (_query$extra$errors = _query$extra.errors) == null ? void 0 : _query$extra$errors[0]) || (query == null ? void 0 : (_query$errors = query.errors) == null ? void 0 : _query$errors[0]), subtitle: _jsx(MonospaceDiv, { children: query.errorMessage }), copyText: query.errorMessage || undefined, link: query.link, source: \"sqllab\" }),\n      trackingUrl] }\n    );\n  }\n  if (query.state === QueryState.Success && query.ctas) {\n    const { tempSchema, tempTable } = query;\n    let object = 'Table';\n    if (query.ctas_method === CtasEnum.View) {\n      object = 'View';\n    }\n    return _jsx(\"div\", { children:\n      _jsx(Alert, { type: \"info\", message: _jsxs(_Fragment, { children: [\n          t(object), \" [\",\n          _jsxs(\"strong\", { children: [\n            tempSchema ? `${tempSchema}.` : '',\n            tempTable] }\n          ), \"] \",\n          t('was created'), \" \\xA0\",\n          _jsxs(ButtonGroup, { children: [\n            _jsx(Button, { buttonSize: \"small\", css: /*#__PURE__*/_css({ marginRight: theme.gridUnit }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ResultSet;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), onClick: () => popSelectStar(tempSchema, tempTable), children:\n              t('Query in a new tab') }\n            ),\n            _jsx(ExploreCtasResultsButton, { table: tempTable, schema: tempSchema, dbId: exploreDBId })] }\n          )] }\n        ) }) }\n    );\n  }\n  if (query.state === QueryState.Success && query.results) {\n    const { results } = query;\n    // Accounts for offset needed for height of ResultSetRowsReturned component if !limitReached\n    const rowMessageHeight = !limitReached ? 32 : 0;\n    // Accounts for offset needed for height of Alert if this.state.alertIsOpen\n    const alertContainerHeight = 70;\n    // We need to calculate the height of this.renderRowsReturned()\n    // if we want results panel to be proper height because the\n    // FilterTable component needs an explicit height to render\n    // the Table component\n    const rowsHeight = alertIsOpen ?\n    height - alertContainerHeight :\n    height - rowMessageHeight;\n    let data;\n    if (cache && query.cached) {\n      data = cachedData;\n    } else\n    if (results != null && results.data) {\n      ({ data } = results);\n    }\n    if (data && data.length > 0) {\n      const expandedColumns = results.expanded_columns ?\n      results.expanded_columns.map((col) => col.column_name) :\n      [];\n      const allowHTML = getItem(LocalStorageKeys.SqllabIsRenderHtmlEnabled, false);\n      return _jsxs(ResultContainer, { children: [\n        renderControls(),\n        showSql && showSqlInline ? _jsxs(_Fragment, { children: [\n          _jsxs(\"div\", { css: css`\n                  display: flex;\n                  justify-content: space-between;\n                  gap: ${GAP}px;\n                `, children: [\n            _jsx(Card, { css: [\n              css`\n                      height: 28px;\n                      width: calc(100% - ${ROWS_CHIP_WIDTH + GAP}px);\n                      code {\n                        width: 100%;\n                        overflow: hidden;\n                        white-space: nowrap !important;\n                        text-overflow: ellipsis;\n                        display: block;\n                      }\n                    `, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ResultSet;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"], children:\n\n              sql }\n            ),\n            renderRowsReturned(false)] }\n          ),\n          renderRowsReturned(true)] }\n        ) : _jsxs(_Fragment, { children: [\n          renderRowsReturned(false),\n          renderRowsReturned(true),\n          sql] }\n        ),\n        _jsx(ResultTable, { data: data, queryId: query.id, orderedColumnKeys: results.columns.map((col) => col.column_name), height: rowsHeight, filterText: searchText, expandedColumns: expandedColumns, allowHTML: allowHTML })] }\n      );\n    }\n    if (data && data.length === 0) {\n      return _jsx(Alert, { type: \"warning\", message: t('The query returned no data') });\n    }\n  }\n  if (query.cached || query.state === QueryState.Success && !query.results) {\n    if (query.isDataPreview) {\n      return _jsx(Button, { buttonSize: \"small\", buttonStyle: \"primary\", onClick: () => dispatch(reFetchQueryResults({\n          ...query,\n          isDataPreview: true\n        })), children:\n        t('Fetch data preview') }\n      );\n    }\n    if (query.resultsKey) {\n      return _jsx(Button, { buttonSize: \"small\", buttonStyle: \"primary\", onClick: () => fetchResults(query), children:\n        t('Refetch results') }\n      );\n    }\n  }\n  let progressBar;\n  if (query.progress > 0) {\n    progressBar = _jsx(ProgressBar, { percent: parseInt(query.progress.toFixed(0), 10), striped: true });\n  }\n  const progressMsg = (_query$extra$progress = query == null ? void 0 : (_query$extra2 = query.extra) == null ? void 0 : _query$extra2.progress) != null ? _query$extra$progress : null;\n  return _jsxs(ResultlessStyles, { children: [\n    _jsx(\"div\", { children: !progressBar && _jsx(Loading, { position: \"normal\" }) }),\n\n    _jsx(\"div\", { children: query.progress === 100 && _jsx(Loading, { position: \"normal\" }) }),\n    _jsx(QueryStateLabel, { query: query }),\n    _jsx(\"div\", { children: progressMsg && _jsx(Alert, { type: \"success\", message: progressMsg }) }),\n    _jsx(\"div\", { children: query.progress !== 100 && progressBar }),\n    trackingUrl && _jsx(\"div\", { children: trackingUrl })] }\n  );\n};__signature__(ResultSet, \"useSelector{user}\\nuseSelector{query}\\nuseTheme{theme}\\nuseState{[searchText, setSearchText]('')}\\nuseState{[cachedData, setCachedData]([])}\\nuseState{[showSaveDatasetModal, setShowSaveDatasetModal](false)}\\nuseState{[alertIsOpen, setAlertIsOpen](false)}\\nuseHistory{history}\\nuseDispatch{dispatch}\\nuseLogAction{logAction}\\nuseCallback{reRunQueryIfSessionTimeoutErrorOnMount}\\nuseEffect{}\\nusePrevious{prevQuery}\\nuseEffect{}\", () => [useSelector, useSelector, useTheme, useHistory, useDispatch, useLogAction, usePrevious]);const _default = /*#__PURE__*/\nmemo(ResultSet);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(LimitingFactor, \"LimitingFactor\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ResultContainer, \"ResultContainer\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ResultlessStyles, \"ResultlessStyles\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(MonospaceDiv, \"MonospaceDiv\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ReturnedRows, \"ReturnedRows\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ResultSetControls, \"ResultSetControls\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ResultSetButtons, \"ResultSetButtons\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ROWS_CHIP_WIDTH, \"ROWS_CHIP_WIDTH\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(GAP, \"GAP\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(extensionsRegistry, \"extensionsRegistry\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(ResultSet, \"ResultSet\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useEffect","useState","memo","shallowEqual","useDispatch","useSelector","useHistory","ButtonGroup","Alert","Button","nanoid","QueryState","styled","t","tn","useTheme","usePrevious","css","getNumberFormatter","getExtensionsRegistry","ErrorMessageWithStackTrace","SaveDatasetModal","EXPLORE_CHART_DEFAULT","mountExploreUrl","postFormData","ProgressBar","Loading","Card","Label","Tooltip","FilterableTable","CopyToClipboard","addDangerToast","prepareCopyToClipboardTabularData","getItem","LocalStorageKeys","addQueryEditor","clearQueryResults","CtasEnum","fetchQueryResults","reFetchQueryResults","reRunQuery","URL_PARAMS","useLogAction","LOG_ACTIONS_SQLLAB_COPY_RESULT_TO_CLIPBOARD","LOG_ACTIONS_SQLLAB_CREATE_CHART","LOG_ACTIONS_SQLLAB_DOWNLOAD_CSV","Icons","findPermission","ExploreCtasResultsButton","ExploreResultsButton","HighlightedSql","QueryStateLabel","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LimitingFactor","ResultContainer","div","theme","gridUnit","ResultlessStyles","MonospaceDiv","typography","families","monospace","ReturnedRows","sizes","s","ResultSetControls","ResultSetButtons","ROWS_CHIP_WIDTH","GAP","extensionsRegistry","ResultSet","cache","csv","database","displayLimit","height","queryId","search","showSql","showSqlInline","visualize","defaultQueryLimit","_extensionsRegistry$g","_query$results2","_query$extra$progress","_query$extra2","user","query","sqlLab","queries","_pick","ResultTable","get","searchText","setSearchText","cachedData","setCachedData","showSaveDatasetModal","setShowSaveDatasetModal","alertIsOpen","setAlertIsOpen","history","dispatch","logAction","sqlEditorId","reRunQueryIfSessionTimeoutErrorOnMount","errorMessage","indexOf","fetchResults","q","prevQuery","_query$results","_query$results$data","cached","results","data","length","resultsKey","calculateAlertRefHeight","alertElement","popSelectStar","tempSchema","tempTable","qe","id","name","autorun","dbId","sql","changeSearch","event","target","value","createExploreResultsOnClick","clickEvent","openInNewWindow","metaKey","query_id","key","datasource","all_columns","columns","map","column","column_name","url","formDataKey","window","open","push","getExportCsvUrl","clientId","renderControls","tab","templateParams","schema","canExportData","roles","children","visible","onHide","buttonTextOnSave","buttonTextOnOverwrite","modalDescription","allows_virtual_table_explore","onClick","buttonSize","href","className","text","wrapped","copyNode","hideTooltip","onCopyEnd","type","onChange","placeholder","renderRowsReturned","alertMessage","_user$roles","_results$data","rows","queryLimit","limitingFactor","limitMessage","limitReached","displayLimitReached","limit","isAdmin","Admin","rowsCount","Math","min","displayMaxRowsReachedMessage","withAdmin","withoutAdmin","shouldUseDefaultDropdownAlert","Dropdown","Query","QueryAndDropdown","formattedRowCount","rowsReturnedMessage","tooltipText","ref","message","onClose","description","showRowsReturned","title","placement","l","ExclamationCircleOutlined","m","exploreDBId","explore_database_id","trackingUrl","state","Success","Fetching","Running","maxLines","maxWidth","Stopped","Failed","_query$extra","_query$extra$errors","_query$errors","error","extra","errors","subtitle","copyText","undefined","link","source","ctas","object","ctas_method","View","_css","marginRight","process","env","NODE_ENV","table","rowMessageHeight","alertContainerHeight","rowsHeight","expandedColumns","expanded_columns","col","allowHTML","SqllabIsRenderHtmlEnabled","orderedColumnKeys","filterText","isDataPreview","buttonStyle","progressBar","progress","percent","parseInt","toFixed","striped","progressMsg","position","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/src/SqlLab/components/ResultSet/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  useCallback,\n  useEffect,\n  useState,\n  memo,\n  ChangeEvent,\n  MouseEvent,\n} from 'react';\n\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { pick } from 'lodash';\nimport ButtonGroup from 'src/components/ButtonGroup';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport { nanoid } from 'nanoid';\nimport {\n  QueryState,\n  styled,\n  t,\n  tn,\n  useTheme,\n  usePrevious,\n  css,\n  getNumberFormatter,\n  getExtensionsRegistry,\n} from '@superset-ui/core';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport {\n  ISaveableDatasource,\n  ISimpleColumn,\n  SaveDatasetModal,\n} from 'src/SqlLab/components/SaveDatasetModal';\nimport { EXPLORE_CHART_DEFAULT, SqlLabRootState } from 'src/SqlLab/types';\nimport { mountExploreUrl } from 'src/explore/exploreUtils';\nimport { postFormData } from 'src/explore/exploreUtils/formData';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Loading from 'src/components/Loading';\nimport Card from 'src/components/Card';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';\nimport FilterableTable from 'src/components/FilterableTable';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { prepareCopyToClipboardTabularData } from 'src/utils/common';\nimport { getItem, LocalStorageKeys } from 'src/utils/localStorageHelpers';\nimport {\n  addQueryEditor,\n  clearQueryResults,\n  CtasEnum,\n  fetchQueryResults,\n  reFetchQueryResults,\n  reRunQuery,\n} from 'src/SqlLab/actions/sqlLab';\nimport { URL_PARAMS } from 'src/constants';\nimport useLogAction from 'src/logger/useLogAction';\nimport {\n  LOG_ACTIONS_SQLLAB_COPY_RESULT_TO_CLIPBOARD,\n  LOG_ACTIONS_SQLLAB_CREATE_CHART,\n  LOG_ACTIONS_SQLLAB_DOWNLOAD_CSV,\n} from 'src/logger/LogUtils';\nimport Icons from 'src/components/Icons';\nimport { findPermission } from 'src/utils/findPermission';\nimport ExploreCtasResultsButton from '../ExploreCtasResultsButton';\nimport ExploreResultsButton from '../ExploreResultsButton';\nimport HighlightedSql from '../HighlightedSql';\nimport QueryStateLabel from '../QueryStateLabel';\n\nenum LimitingFactor {\n  Query = 'QUERY',\n  QueryAndDropdown = 'QUERY_AND_DROPDOWN',\n  Dropdown = 'DROPDOWN',\n  NotLimited = 'NOT_LIMITED',\n}\n\nexport interface ResultSetProps {\n  cache?: boolean;\n  csv?: boolean;\n  database?: Record<string, any>;\n  displayLimit: number;\n  height: number;\n  queryId: string;\n  search?: boolean;\n  showSql?: boolean;\n  showSqlInline?: boolean;\n  visualize?: boolean;\n  defaultQueryLimit: number;\n}\n\nconst ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nconst ResultlessStyles = styled.div`\n  position: relative;\n  min-height: ${({ theme }) => theme.gridUnit * 25}px;\n  [role='alert'] {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n  .sql-result-track-job {\n    margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n  }\n`;\n\n// Making text render line breaks/tabs as is as monospace,\n// but wrapping text too so text doesn't overflow\nconst MonospaceDiv = styled.div`\n  font-family: ${({ theme }) => theme.typography.families.monospace};\n  white-space: pre;\n  word-break: break-word;\n  overflow-x: auto;\n  white-space: pre-wrap;\n`;\n\nconst ReturnedRows = styled.div`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  line-height: 1;\n`;\n\nconst ResultSetControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ResultSetButtons = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  padding-right: ${({ theme }) => 2 * theme.gridUnit}px;\n`;\n\nconst ROWS_CHIP_WIDTH = 100;\nconst GAP = 8;\n\nconst extensionsRegistry = getExtensionsRegistry();\n\nconst ResultSet = ({\n  cache = false,\n  csv = true,\n  database = {},\n  displayLimit,\n  height,\n  queryId,\n  search = true,\n  showSql = false,\n  showSqlInline = false,\n  visualize = true,\n  defaultQueryLimit,\n}: ResultSetProps) => {\n  const user = useSelector(({ user }: SqlLabRootState) => user, shallowEqual);\n  const query = useSelector(\n    ({ sqlLab: { queries } }: SqlLabRootState) =>\n      pick(queries[queryId], [\n        'id',\n        'errorMessage',\n        'cached',\n        'results',\n        'resultsKey',\n        'dbId',\n        'tab',\n        'sql',\n        'sqlEditorId',\n        'templateParams',\n        'schema',\n        'rows',\n        'queryLimit',\n        'limitingFactor',\n        'trackingUrl',\n        'state',\n        'errors',\n        'link',\n        'ctas',\n        'ctas_method',\n        'tempSchema',\n        'tempTable',\n        'isDataPreview',\n        'progress',\n        'extra',\n      ]),\n    shallowEqual,\n  );\n  const ResultTable =\n    extensionsRegistry.get('sqleditor.extension.resultTable') ??\n    FilterableTable;\n  const theme = useTheme();\n  const [searchText, setSearchText] = useState('');\n  const [cachedData, setCachedData] = useState<Record<string, unknown>[]>([]);\n  const [showSaveDatasetModal, setShowSaveDatasetModal] = useState(false);\n  const [alertIsOpen, setAlertIsOpen] = useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const logAction = useLogAction({ queryId, sqlEditorId: query.sqlEditorId });\n\n  const reRunQueryIfSessionTimeoutErrorOnMount = useCallback(() => {\n    if (\n      query.errorMessage &&\n      query.errorMessage.indexOf('session timed out') > 0\n    ) {\n      dispatch(reRunQuery(query));\n    }\n  }, []);\n\n  useEffect(() => {\n    // only do this the first time the component is rendered/mounted\n    reRunQueryIfSessionTimeoutErrorOnMount();\n  }, [reRunQueryIfSessionTimeoutErrorOnMount]);\n\n  const fetchResults = (q: typeof query) => {\n    dispatch(fetchQueryResults(q, displayLimit));\n  };\n\n  const prevQuery = usePrevious(query);\n  useEffect(() => {\n    if (cache && query.cached && query?.results?.data?.length > 0) {\n      setCachedData(query.results.data);\n      dispatch(clearQueryResults(query));\n    }\n    if (query.resultsKey && query.resultsKey !== prevQuery?.resultsKey) {\n      fetchResults(query);\n    }\n  }, [query, cache]);\n\n  const calculateAlertRefHeight = (alertElement: HTMLElement | null) => {\n    if (alertElement) {\n      setAlertIsOpen(true);\n    } else {\n      setAlertIsOpen(false);\n    }\n  };\n\n  const popSelectStar = (tempSchema: string | null, tempTable: string) => {\n    const qe = {\n      id: nanoid(11),\n      name: tempTable,\n      autorun: false,\n      dbId: query.dbId,\n      sql: `SELECT * FROM ${tempSchema ? `${tempSchema}.` : ''}${tempTable}`,\n    };\n    dispatch(addQueryEditor(qe));\n  };\n\n  const changeSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearchText(event.target.value);\n  };\n\n  const createExploreResultsOnClick = async (clickEvent: MouseEvent) => {\n    const { results } = query;\n\n    const openInNewWindow = clickEvent.metaKey;\n    logAction(LOG_ACTIONS_SQLLAB_CREATE_CHART, {});\n    if (results?.query_id) {\n      const key = await postFormData(results.query_id, 'query', {\n        ...EXPLORE_CHART_DEFAULT,\n        datasource: `${results.query_id}__query`,\n        ...{\n          all_columns: results.columns.map(column => column.column_name),\n        },\n      });\n      const url = mountExploreUrl(null, {\n        [URL_PARAMS.formDataKey.name]: key,\n      });\n      if (openInNewWindow) {\n        window.open(url, '_blank', 'noreferrer');\n      } else {\n        history.push(url);\n      }\n    } else {\n      addDangerToast(t('Unable to create chart without a query id.'));\n    }\n  };\n\n  const getExportCsvUrl = (clientId: string) =>\n    `/api/v1/sqllab/export/${clientId}/`;\n\n  const renderControls = () => {\n    if (search || visualize || csv) {\n      let { data } = query.results;\n      if (cache && query.cached) {\n        data = cachedData;\n      }\n      const { columns } = query.results;\n      // Added compute logic to stop user from being able to Save & Explore\n\n      const datasource: ISaveableDatasource = {\n        columns: query.results.columns as ISimpleColumn[],\n        name: query?.tab || 'Untitled',\n        dbId: query?.dbId,\n        sql: query?.sql,\n        templateParams: query?.templateParams,\n        schema: query?.schema,\n      };\n\n      const canExportData = findPermission(\n        'can_export_csv',\n        'SQLLab',\n        user?.roles,\n      );\n\n      return (\n        <ResultSetControls>\n          <SaveDatasetModal\n            visible={showSaveDatasetModal}\n            onHide={() => setShowSaveDatasetModal(false)}\n            buttonTextOnSave={t('Save & Explore')}\n            buttonTextOnOverwrite={t('Overwrite & Explore')}\n            modalDescription={t(\n              'Save this query as a virtual dataset to continue exploring',\n            )}\n            datasource={datasource}\n          />\n          <ResultSetButtons>\n            {visualize && database?.allows_virtual_table_explore && (\n              <ExploreResultsButton\n                database={database}\n                onClick={createExploreResultsOnClick}\n              />\n            )}\n            {csv && canExportData && (\n              <Button\n                buttonSize=\"small\"\n                href={getExportCsvUrl(query.id)}\n                data-test=\"export-csv-button\"\n                onClick={() => logAction(LOG_ACTIONS_SQLLAB_DOWNLOAD_CSV, {})}\n              >\n                <i className=\"fa fa-file-text-o\" /> {t('Download to CSV')}\n              </Button>\n            )}\n\n            {canExportData && (\n              <CopyToClipboard\n                text={prepareCopyToClipboardTabularData(data, columns)}\n                wrapped={false}\n                copyNode={\n                  <Button\n                    buttonSize=\"small\"\n                    data-test=\"copy-to-clipboard-button\"\n                  >\n                    <i className=\"fa fa-clipboard\" /> {t('Copy to Clipboard')}\n                  </Button>\n                }\n                hideTooltip\n                onCopyEnd={() =>\n                  logAction(LOG_ACTIONS_SQLLAB_COPY_RESULT_TO_CLIPBOARD, {})\n                }\n              />\n            )}\n          </ResultSetButtons>\n          {search && (\n            <input\n              type=\"text\"\n              onChange={changeSearch}\n              value={searchText}\n              className=\"form-control input-sm\"\n              placeholder={t('Filter results')}\n            />\n          )}\n        </ResultSetControls>\n      );\n    }\n    return <div />;\n  };\n\n  const renderRowsReturned = (alertMessage: boolean) => {\n    const { results, rows, queryLimit, limitingFactor } = query;\n    let limitMessage = '';\n    const limitReached = results?.displayLimitReached;\n    const limit = queryLimit || results.query.limit;\n    const isAdmin = !!user?.roles?.Admin;\n    const rowsCount = Math.min(rows || 0, results?.data?.length || 0);\n\n    const displayMaxRowsReachedMessage = {\n      withAdmin: t(\n        'The number of results displayed is limited to %(rows)d by the configuration DISPLAY_MAX_ROW. ' +\n          'Please add additional limits/filters or download to csv to see more rows up to ' +\n          'the %(limit)d limit.',\n        { rows: rowsCount, limit },\n      ),\n      withoutAdmin: t(\n        'The number of results displayed is limited to %(rows)d. ' +\n          'Please add additional limits/filters, download to csv, or contact an admin ' +\n          'to see more rows up to the %(limit)d limit.',\n        { rows: rowsCount, limit },\n      ),\n    };\n    const shouldUseDefaultDropdownAlert =\n      limit === defaultQueryLimit && limitingFactor === LimitingFactor.Dropdown;\n\n    if (limitingFactor === LimitingFactor.Query && csv) {\n      limitMessage = t(\n        'The number of rows displayed is limited to %(rows)d by the query',\n        { rows },\n      );\n    } else if (\n      limitingFactor === LimitingFactor.Dropdown &&\n      !shouldUseDefaultDropdownAlert\n    ) {\n      limitMessage = t(\n        'The number of rows displayed is limited to %(rows)d by the limit dropdown.',\n        { rows },\n      );\n    } else if (limitingFactor === LimitingFactor.QueryAndDropdown) {\n      limitMessage = t(\n        'The number of rows displayed is limited to %(rows)d by the query and limit dropdown.',\n        { rows },\n      );\n    }\n    const formattedRowCount = getNumberFormatter()(rows);\n    const rowsReturnedMessage = t('%(rows)d rows returned', {\n      rows,\n    });\n\n    const tooltipText = `${rowsReturnedMessage}. ${limitMessage}`;\n\n    if (alertMessage) {\n      return (\n        <>\n          {!limitReached && shouldUseDefaultDropdownAlert && (\n            <div ref={calculateAlertRefHeight}>\n              <Alert\n                type=\"warning\"\n                message={t('%(rows)d rows returned', { rows })}\n                onClose={() => setAlertIsOpen(false)}\n                description={t(\n                  'The number of rows displayed is limited to %(rows)d by the dropdown.',\n                  { rows },\n                )}\n              />\n            </div>\n          )}\n          {limitReached && (\n            <div ref={calculateAlertRefHeight}>\n              <Alert\n                type=\"warning\"\n                onClose={() => setAlertIsOpen(false)}\n                message={t('%(rows)d rows returned', { rows: rowsCount })}\n                description={\n                  isAdmin\n                    ? displayMaxRowsReachedMessage.withAdmin\n                    : displayMaxRowsReachedMessage.withoutAdmin\n                }\n              />\n            </div>\n          )}\n        </>\n      );\n    }\n    const showRowsReturned =\n      showSqlInline || (!limitReached && !shouldUseDefaultDropdownAlert);\n\n    return (\n      <>\n        {showRowsReturned && (\n          <ReturnedRows>\n            <Tooltip\n              id=\"sqllab-rowcount-tooltip\"\n              title={tooltipText}\n              placement=\"left\"\n            >\n              <Label\n                css={css`\n                  line-height: ${theme.typography.sizes.l}px;\n                `}\n              >\n                {limitMessage && (\n                  <Icons.ExclamationCircleOutlined\n                    css={css`\n                      font-size: ${theme.typography.sizes.m}px;\n                      margin-right: ${theme.gridUnit}px;\n                    `}\n                  />\n                )}\n                {tn('%s row', '%s rows', rows, formattedRowCount)}\n              </Label>\n            </Tooltip>\n          </ReturnedRows>\n        )}\n      </>\n    );\n  };\n\n  const limitReached = query?.results?.displayLimitReached;\n  let sql;\n  let exploreDBId = query.dbId;\n  if (database?.explore_database_id) {\n    exploreDBId = database.explore_database_id;\n  }\n\n  let trackingUrl;\n  if (\n    query.trackingUrl &&\n    query.state !== QueryState.Success &&\n    query.state !== QueryState.Fetching\n  ) {\n    trackingUrl = (\n      <Button\n        className=\"sql-result-track-job\"\n        buttonSize=\"small\"\n        href={query.trackingUrl}\n        target=\"_blank\"\n      >\n        {query.state === QueryState.Running\n          ? t('Track job')\n          : t('See query details')}\n      </Button>\n    );\n  }\n\n  if (showSql) {\n    sql = (\n      <HighlightedSql\n        sql={query.sql}\n        {...(showSqlInline && { maxLines: 1, maxWidth: 60 })}\n      />\n    );\n  }\n\n  if (query.state === QueryState.Stopped) {\n    return <Alert type=\"warning\" message={t('Query was stopped')} />;\n  }\n\n  if (query.state === QueryState.Failed) {\n    return (\n      <ResultlessStyles>\n        <ErrorMessageWithStackTrace\n          title={t('Database error')}\n          error={query?.extra?.errors?.[0] || query?.errors?.[0]}\n          subtitle={<MonospaceDiv>{query.errorMessage}</MonospaceDiv>}\n          copyText={query.errorMessage || undefined}\n          link={query.link}\n          source=\"sqllab\"\n        />\n        {trackingUrl}\n      </ResultlessStyles>\n    );\n  }\n\n  if (query.state === QueryState.Success && query.ctas) {\n    const { tempSchema, tempTable } = query;\n    let object = 'Table';\n    if (query.ctas_method === CtasEnum.View) {\n      object = 'View';\n    }\n    return (\n      <div>\n        <Alert\n          type=\"info\"\n          message={\n            <>\n              {t(object)} [\n              <strong>\n                {tempSchema ? `${tempSchema}.` : ''}\n                {tempTable}\n              </strong>\n              ] {t('was created')} &nbsp;\n              <ButtonGroup>\n                <Button\n                  buttonSize=\"small\"\n                  css={{ marginRight: theme.gridUnit }}\n                  onClick={() => popSelectStar(tempSchema, tempTable)}\n                >\n                  {t('Query in a new tab')}\n                </Button>\n                <ExploreCtasResultsButton\n                  table={tempTable}\n                  schema={tempSchema}\n                  dbId={exploreDBId}\n                />\n              </ButtonGroup>\n            </>\n          }\n        />\n      </div>\n    );\n  }\n\n  if (query.state === QueryState.Success && query.results) {\n    const { results } = query;\n    // Accounts for offset needed for height of ResultSetRowsReturned component if !limitReached\n    const rowMessageHeight = !limitReached ? 32 : 0;\n    // Accounts for offset needed for height of Alert if this.state.alertIsOpen\n    const alertContainerHeight = 70;\n    // We need to calculate the height of this.renderRowsReturned()\n    // if we want results panel to be proper height because the\n    // FilterTable component needs an explicit height to render\n    // the Table component\n    const rowsHeight = alertIsOpen\n      ? height - alertContainerHeight\n      : height - rowMessageHeight;\n    let data;\n    if (cache && query.cached) {\n      data = cachedData;\n    } else if (results?.data) {\n      ({ data } = results);\n    }\n    if (data && data.length > 0) {\n      const expandedColumns = results.expanded_columns\n        ? results.expanded_columns.map(col => col.column_name)\n        : [];\n      const allowHTML = getItem(\n        LocalStorageKeys.SqllabIsRenderHtmlEnabled,\n        false,\n      );\n      return (\n        <ResultContainer>\n          {renderControls()}\n          {showSql && showSqlInline ? (\n            <>\n              <div\n                css={css`\n                  display: flex;\n                  justify-content: space-between;\n                  gap: ${GAP}px;\n                `}\n              >\n                <Card\n                  css={[\n                    css`\n                      height: 28px;\n                      width: calc(100% - ${ROWS_CHIP_WIDTH + GAP}px);\n                      code {\n                        width: 100%;\n                        overflow: hidden;\n                        white-space: nowrap !important;\n                        text-overflow: ellipsis;\n                        display: block;\n                      }\n                    `,\n                  ]}\n                >\n                  {sql}\n                </Card>\n                {renderRowsReturned(false)}\n              </div>\n              {renderRowsReturned(true)}\n            </>\n          ) : (\n            <>\n              {renderRowsReturned(false)}\n              {renderRowsReturned(true)}\n              {sql}\n            </>\n          )}\n          <ResultTable\n            data={data}\n            queryId={query.id}\n            orderedColumnKeys={results.columns.map(col => col.column_name)}\n            height={rowsHeight}\n            filterText={searchText}\n            expandedColumns={expandedColumns}\n            allowHTML={allowHTML}\n          />\n        </ResultContainer>\n      );\n    }\n    if (data && data.length === 0) {\n      return <Alert type=\"warning\" message={t('The query returned no data')} />;\n    }\n  }\n\n  if (query.cached || (query.state === QueryState.Success && !query.results)) {\n    if (query.isDataPreview) {\n      return (\n        <Button\n          buttonSize=\"small\"\n          buttonStyle=\"primary\"\n          onClick={() =>\n            dispatch(\n              reFetchQueryResults({\n                ...query,\n                isDataPreview: true,\n              }),\n            )\n          }\n        >\n          {t('Fetch data preview')}\n        </Button>\n      );\n    }\n    if (query.resultsKey) {\n      return (\n        <Button\n          buttonSize=\"small\"\n          buttonStyle=\"primary\"\n          onClick={() => fetchResults(query)}\n        >\n          {t('Refetch results')}\n        </Button>\n      );\n    }\n  }\n\n  let progressBar;\n  if (query.progress > 0) {\n    progressBar = (\n      <ProgressBar percent={parseInt(query.progress.toFixed(0), 10)} striped />\n    );\n  }\n\n  const progressMsg = query?.extra?.progress ?? null;\n\n  return (\n    <ResultlessStyles>\n      <div>{!progressBar && <Loading position=\"normal\" />}</div>\n      {/* show loading bar whenever progress bar is completed but needs time to render */}\n      <div>{query.progress === 100 && <Loading position=\"normal\" />}</div>\n      <QueryStateLabel query={query} />\n      <div>{progressMsg && <Alert type=\"success\" message={progressMsg} />}</div>\n      <div>{query.progress !== 100 && progressBar}</div>\n      {trackingUrl && <div>{trackingUrl}</div>}\n    </ResultlessStyles>\n  );\n};\n\nexport default memo(ResultSet);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}