{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { css } from '@emotion/react';\nimport { useEffect, useRef, useState } from 'react';\n/**\n * Importable CSS that enables text truncation on fixed-width block\n * elements.\n */\nexport const truncationCSS = process.env.NODE_ENV === \"production\" ? { name: \"l8l8b8\", styles: \"white-space:nowrap;overflow:hidden;text-overflow:ellipsis\" } : { name: \"u6p4lb-truncationCSS\", styles: \"white-space:nowrap;overflow:hidden;text-overflow:ellipsis;label:truncationCSS;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3VwZXJzZXQtZnJvbnRlbmQvcGFja2FnZXMvc3VwZXJzZXQtdWktY29yZS9zcmMvaG9va3MvdXNlVHJ1bmNhdGlvbi91c2VDU1NUZXh0VHJ1bmNhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3QmlDIiwiZmlsZSI6Ii9hcHAvc3VwZXJzZXQtZnJvbnRlbmQvcGFja2FnZXMvc3VwZXJzZXQtdWktY29yZS9zcmMvaG9va3MvdXNlVHJ1bmNhdGlvbi91c2VDU1NUZXh0VHJ1bmNhdGlvbi50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0Jztcbi8qKlxuICogSW1wb3J0YWJsZSBDU1MgdGhhdCBlbmFibGVzIHRleHQgdHJ1bmNhdGlvbiBvbiBmaXhlZC13aWR0aCBibG9ja1xuICogZWxlbWVudHMuXG4gKi9cbmV4cG9ydCBjb25zdCB0cnVuY2F0aW9uQ1NTID0gY3NzIGBcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG5gO1xuLyoqXG4gKiBUaGlzIGhvb2sgZW5jYXBzdWxhdGVzIGxvZ2ljIHN1cHBvcnRpbmcgdHJ1bmNhdGlvbiBvZiB0ZXh0IHZpYVxuICogdGhlIENTUyBcInRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1wiIGZlYXR1cmUuICBHaXZlbiB0aGUgdGV4dCBjb250ZW50XG4gKiB0byBiZSBkaXNwbGF5ZWQsIHRoaXMgaG9vayByZXR1cm5zIGEgcmVmIHRvIGF0dGFjaCB0byB0aGUgdGV4dFxuICogZWxlbWVudCBhbmQgYSBib29sZWFuIGZvciB3aGV0aGVyIHRoYXQgZWxlbWVudCBpcyBjdXJyZW50bHkgdHJ1bmNhdGVkLlxuICovXG5jb25zdCB1c2VDU1NUZXh0VHJ1bmNhdGlvbiA9ICgpID0+IHtcbiAgICBjb25zdCBbaXNUcnVuY2F0ZWQsIHNldElzVHJ1bmNhdGVkXSA9IHVzZVN0YXRlKHRydWUpO1xuICAgIGNvbnN0IHJlZiA9IHVzZVJlZihudWxsKTtcbiAgICBjb25zdCBbb2Zmc2V0V2lkdGgsIHNldE9mZnNldFdpZHRoXSA9IHVzZVN0YXRlKDApO1xuICAgIGNvbnN0IFtzY3JvbGxXaWR0aCwgc2V0U2Nyb2xsV2lkdGhdID0gdXNlU3RhdGUoMCk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNldE9mZnNldFdpZHRoKHJlZi5jdXJyZW50Py5vZmZzZXRXaWR0aCA/PyAwKTtcbiAgICAgICAgc2V0U2Nyb2xsV2lkdGgocmVmLmN1cnJlbnQ/LnNjcm9sbFdpZHRoID8/IDApO1xuICAgIH0pO1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNldElzVHJ1bmNhdGVkKG9mZnNldFdpZHRoIDwgc2Nyb2xsV2lkdGgpO1xuICAgIH0sIFtvZmZzZXRXaWR0aCwgc2Nyb2xsV2lkdGhdKTtcbiAgICByZXR1cm4gW3JlZiwgaXNUcnVuY2F0ZWRdO1xufTtcbmV4cG9ydCBkZWZhdWx0IHVzZUNTU1RleHRUcnVuY2F0aW9uO1xuIl19 */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\n\n\n\n/**\n * This hook encapsulates logic supporting truncation of text via\n * the CSS \"text-overflow: ellipsis;\" feature.  Given the text content\n * to be displayed, this hook returns a ref to attach to the text\n * element and a boolean for whether that element is currently truncated.\n */\nconst useCSSTextTruncation = () => {\n  const [isTruncated, setIsTruncated] = useState(true);\n  const ref = useRef(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [scrollWidth, setScrollWidth] = useState(0);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {var _ref$current$offsetWi, _ref$current, _ref$current$scrollWi, _ref$current2;\n    setOffsetWidth((_ref$current$offsetWi = (_ref$current = ref.current) == null ? void 0 : _ref$current.offsetWidth) != null ? _ref$current$offsetWi : 0);\n    setScrollWidth((_ref$current$scrollWi = (_ref$current2 = ref.current) == null ? void 0 : _ref$current2.scrollWidth) != null ? _ref$current$scrollWi : 0);\n  });\n  useEffect(() => {\n    setIsTruncated(offsetWidth < scrollWidth);\n  }, [offsetWidth, scrollWidth]);\n  return [ref, isTruncated];\n};__signature__(useCSSTextTruncation, \"useState{[isTruncated, setIsTruncated](true)}\\nuseRef{ref}\\nuseState{[offsetWidth, setOffsetWidth](0)}\\nuseState{[scrollWidth, setScrollWidth](0)}\\nuseEffect{}\\nuseEffect{}\");const _default =\nuseCSSTextTruncation;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(truncationCSS, \"truncationCSS\", \"/app/superset-frontend/packages/superset-ui-core/src/hooks/useTruncation/useCSSTextTruncation.ts\");reactHotLoader.register(useCSSTextTruncation, \"useCSSTextTruncation\", \"/app/superset-frontend/packages/superset-ui-core/src/hooks/useTruncation/useCSSTextTruncation.ts\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/packages/superset-ui-core/src/hooks/useTruncation/useCSSTextTruncation.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["css","useEffect","useRef","useState","truncationCSS","process","env","NODE_ENV","name","styles","map","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","useCSSTextTruncation","isTruncated","setIsTruncated","ref","offsetWidth","setOffsetWidth","scrollWidth","setScrollWidth","_ref$current$offsetWi","_ref$current","_ref$current$scrollWi","_ref$current2","current","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/packages/superset-ui-core/src/hooks/useTruncation/useCSSTextTruncation.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { css } from '@emotion/react';\nimport { useEffect, useRef, useState, RefObject } from 'react';\n\n/**\n * Importable CSS that enables text truncation on fixed-width block\n * elements.\n */\nexport const truncationCSS = css`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\n/**\n * This hook encapsulates logic supporting truncation of text via\n * the CSS \"text-overflow: ellipsis;\" feature.  Given the text content\n * to be displayed, this hook returns a ref to attach to the text\n * element and a boolean for whether that element is currently truncated.\n */\nconst useCSSTextTruncation = <T extends HTMLElement>(): [\n  RefObject<T>,\n  boolean,\n] => {\n  const [isTruncated, setIsTruncated] = useState(true);\n  const ref = useRef<T>(null);\n  const [offsetWidth, setOffsetWidth] = useState(0);\n  const [scrollWidth, setScrollWidth] = useState(0);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    setOffsetWidth(ref.current?.offsetWidth ?? 0);\n    setScrollWidth(ref.current?.scrollWidth ?? 0);\n  });\n\n  useEffect(() => {\n    setIsTruncated(offsetWidth < scrollWidth);\n  }, [offsetWidth, scrollWidth]);\n\n  return [ref, isTruncated];\n};\n\nexport default useCSSTextTruncation;\n"],"mappings":"+jBAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAmB,OAAO;AAE9D;;;;AAIA,OAAO,MAAMC,aAAa,GAAAC,OAAA,CAAAC,GAAA,CAAAC,QAAA,sBAAAC,IAAA,YAAAC,MAAA,oEAAAD,IAAA,0BAAAC,MAAA,oFAAAC,GAAA,qnGAAAC,QAAA,EAAAC,gCAAA,EAIzB;;;;;AAED;;;;;;AAMA,MAAMC,oBAAoB,GAAGA,CAAA,KAGzB;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMa,GAAG,GAAGd,MAAM,CAAI,IAAI,CAAC;EAC3B,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAEjD;EACAF,SAAS,CAAC,MAAK,KAAAoB,qBAAA,EAAAC,YAAA,EAAAC,qBAAA,EAAAC,aAAA;IACbN,cAAc,EAAAG,qBAAA,IAAAC,YAAA,GAACN,GAAG,CAACS,OAAO,qBAAXH,YAAA,CAAaL,WAAW,YAAAI,qBAAA,GAAI,CAAC,CAAC;IAC7CD,cAAc,EAAAG,qBAAA,IAAAC,aAAA,GAACR,GAAG,CAACS,OAAO,qBAAXD,aAAA,CAAaL,WAAW,YAAAI,qBAAA,GAAI,CAAC,CAAC;EAC/C,CAAC,CAAC;EAEFtB,SAAS,CAAC,MAAK;IACbc,cAAc,CAACE,WAAW,GAAGE,WAAW,CAAC;EAC3C,CAAC,EAAE,CAACF,WAAW,EAAEE,WAAW,CAAC,CAAC;EAE9B,OAAO,CAACH,GAAG,EAAEF,WAAW,CAAC;AAC3B,CAAC,CAACY,aAAA,CApBIb,oBAAoB,wLAAAc,QAAA;AAsBXd,oBAAoB,CAAnC,eAAAc,QAAA,CAAoC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAlCvB5B,aAAa,uHAAAwB,cAAA,CAAAI,QAAA,CAYpBnB,oBAAoB,8HAAAe,cAAA,CAAAI,QAAA,CAAAL,QAAA,yIAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}