{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { getColumnLabel } from '@superset-ui/core';\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const histogramOperator = (formData, queryObject) => {\n  const { bins, column, cumulative, groupby = [], normalize } = formData;\n  const parsedBins = Number.isNaN(Number(bins)) ? 5 : Number(bins);\n  const parsedColumn = getColumnLabel(column);\n  const parsedGroupBy = groupby.map(getColumnLabel);\n  return {\n    operation: 'histogram',\n    options: {\n      column: parsedColumn,\n      groupby: parsedGroupBy,\n      bins: parsedBins,\n      cumulative,\n      normalize\n    }\n  };\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(histogramOperator, \"histogramOperator\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/operators/histogramOperator.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getColumnLabel","histogramOperator","formData","queryObject","bins","column","cumulative","groupby","normalize","parsedBins","Number","isNaN","parsedColumn","parsedGroupBy","map","operation","options","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/packages/superset-ui-chart-controls/src/operators/histogramOperator.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { PostProcessingHistogram, getColumnLabel } from '@superset-ui/core';\nimport { PostProcessingFactory } from './types';\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const histogramOperator: PostProcessingFactory<\n  PostProcessingHistogram\n> = (formData, queryObject) => {\n  const { bins, column, cumulative, groupby = [], normalize } = formData;\n  const parsedBins = Number.isNaN(Number(bins)) ? 5 : Number(bins);\n  const parsedColumn = getColumnLabel(column);\n  const parsedGroupBy = groupby!.map(getColumnLabel);\n  return {\n    operation: 'histogram',\n    options: {\n      column: parsedColumn,\n      groupby: parsedGroupBy,\n      bins: parsedBins,\n      cumulative,\n      normalize,\n    },\n  };\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAAkCA,cAAc,QAAQ,mBAAmB;AAG3E;AACA,OAAO,MAAMC,iBAAiB,GAE1BA,CAACC,QAAQ,EAAEC,WAAW,KAAI;EAC5B,MAAM,EAAEC,IAAI,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,GAAG,EAAE,EAAEC,SAAS,EAAE,GAAGN,QAAQ;EACtE,MAAMO,UAAU,GAAGC,MAAM,CAACC,KAAK,CAACD,MAAM,CAACN,IAAI,CAAC,CAAC,GAAG,CAAC,GAAGM,MAAM,CAACN,IAAI,CAAC;EAChE,MAAMQ,YAAY,GAAGZ,cAAc,CAACK,MAAM,CAAC;EAC3C,MAAMQ,aAAa,GAAGN,OAAQ,CAACO,GAAG,CAACd,cAAc,CAAC;EAClD,OAAO;IACLe,SAAS,EAAE,WAAW;IACtBC,OAAO,EAAE;MACPX,MAAM,EAAEO,YAAY;MACpBL,OAAO,EAAEM,aAAa;MACtBT,IAAI,EAAEK,UAAU;MAChBH,UAAU;MACVE;;GAEH;AACH,CAAC,CAAC,mBAAAS,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAjBWpB,iBAAiB,gJAAAqB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}