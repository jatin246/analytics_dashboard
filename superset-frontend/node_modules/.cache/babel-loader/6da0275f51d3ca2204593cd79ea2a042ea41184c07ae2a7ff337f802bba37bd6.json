{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { t } from '@superset-ui/core';\nimport SupersetText from 'src/utils/textUtils';\nimport Button from 'src/components/Button';\nimport { StyledInputContainer, wideButton } from './styles';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst SqlAlchemyTab = ({ db, onInputChange, testConnection, conf, testInProgress = false, children }) => {var _SupersetText$DB_MODA, _SupersetText$DB_MODA2;\n  const fallbackDocsUrl = (SupersetText == null ? void 0 : (_SupersetText$DB_MODA = SupersetText.DB_MODAL_SQLALCHEMY_FORM) == null ? void 0 : _SupersetText$DB_MODA.SQLALCHEMY_DOCS_URL) ||\n  'https://docs.sqlalchemy.org/en/13/core/engines.html';\n  const fallbackDisplayText = (SupersetText == null ? void 0 : (_SupersetText$DB_MODA2 = SupersetText.DB_MODAL_SQLALCHEMY_FORM) == null ? void 0 : _SupersetText$DB_MODA2.SQLALCHEMY_DISPLAY_TEXT) ||\n  'SQLAlchemy docs';\n  return _jsxs(_Fragment, { children: [\n    _jsxs(StyledInputContainer, { children: [\n      _jsxs(\"div\", { className: \"control-label\", children: [\n        t('Display Name'),\n        _jsx(\"span\", { className: \"required\", children: \"*\" })] }\n      ),\n      _jsx(\"div\", { className: \"input-container\", children:\n        _jsx(\"input\", { type: \"text\", name: \"database_name\", \"data-test\": \"database-name-input\", value: (db == null ? void 0 : db.database_name) || '', placeholder: t('Name your database'), onChange: onInputChange }) }\n      ),\n      _jsx(\"div\", { className: \"helper\", children:\n        t('Pick a name to help you identify this database.') }\n      )] }\n    ),\n    _jsxs(StyledInputContainer, { children: [\n      _jsxs(\"div\", { className: \"control-label\", children: [\n        t('SQLAlchemy URI'),\n        _jsx(\"span\", { className: \"required\", children: \"*\" })] }\n      ),\n      _jsx(\"div\", { className: \"input-container\", children:\n        _jsx(\"input\", { type: \"text\", name: \"sqlalchemy_uri\", \"data-test\": \"sqlalchemy-uri-input\", value: (db == null ? void 0 : db.sqlalchemy_uri) || '', autoComplete: \"off\", placeholder: (db == null ? void 0 : db.sqlalchemy_uri_placeholder) ||\n          t('dialect+driver://username:password@host:port/database'), onChange: onInputChange }) }\n      ),\n      _jsxs(\"div\", { className: \"helper\", children: [\n        t('Refer to the'), ' ',\n        _jsx(\"a\", { href: fallbackDocsUrl || (conf == null ? void 0 : conf.SQLALCHEMY_DOCS_URL) || '', target: \"_blank\", rel: \"noopener noreferrer\", children:\n          fallbackDisplayText || (conf == null ? void 0 : conf.SQLALCHEMY_DISPLAY_TEXT) || '' }\n        ), ' ',\n        t('for more information on how to structure your URI.')] }\n      )] }\n    ),\n    children,\n    _jsx(Button, { onClick: testConnection, loading: testInProgress, cta: true, buttonStyle: \"link\", css: (theme) => wideButton(theme), children:\n      t('Test connection') }\n    )] }\n  );\n};const _default =\nSqlAlchemyTab;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SqlAlchemyTab, \"SqlAlchemyTab\", \"/app/superset-frontend/src/features/databases/DatabaseModal/SqlAlchemyForm.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/features/databases/DatabaseModal/SqlAlchemyForm.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","SupersetText","Button","StyledInputContainer","wideButton","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SqlAlchemyTab","db","onInputChange","testConnection","conf","testInProgress","children","_SupersetText$DB_MODA","_SupersetText$DB_MODA2","fallbackDocsUrl","DB_MODAL_SQLALCHEMY_FORM","SQLALCHEMY_DOCS_URL","fallbackDisplayText","SQLALCHEMY_DISPLAY_TEXT","className","type","name","value","database_name","placeholder","onChange","sqlalchemy_uri","autoComplete","sqlalchemy_uri_placeholder","href","target","rel","onClick","loading","cta","buttonStyle","css","theme","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/features/databases/DatabaseModal/SqlAlchemyForm.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { EventHandler, ChangeEvent, MouseEvent, ReactNode } from 'react';\nimport { t, SupersetTheme } from '@superset-ui/core';\nimport SupersetText from 'src/utils/textUtils';\nimport Button from 'src/components/Button';\nimport { StyledInputContainer, wideButton } from './styles';\nimport { DatabaseObject } from '../types';\n\nconst SqlAlchemyTab = ({\n  db,\n  onInputChange,\n  testConnection,\n  conf,\n  testInProgress = false,\n  children,\n}: {\n  db: DatabaseObject | null;\n  onInputChange: EventHandler<ChangeEvent<HTMLInputElement>>;\n  testConnection: EventHandler<MouseEvent<HTMLElement>>;\n  conf: { SQLALCHEMY_DOCS_URL: string; SQLALCHEMY_DISPLAY_TEXT: string };\n  testInProgress?: boolean;\n  children?: ReactNode;\n}) => {\n  const fallbackDocsUrl =\n    SupersetText?.DB_MODAL_SQLALCHEMY_FORM?.SQLALCHEMY_DOCS_URL ||\n    'https://docs.sqlalchemy.org/en/13/core/engines.html';\n  const fallbackDisplayText =\n    SupersetText?.DB_MODAL_SQLALCHEMY_FORM?.SQLALCHEMY_DISPLAY_TEXT ||\n    'SQLAlchemy docs';\n\n  return (\n    <>\n      <StyledInputContainer>\n        <div className=\"control-label\">\n          {t('Display Name')}\n          <span className=\"required\">*</span>\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            name=\"database_name\"\n            data-test=\"database-name-input\"\n            value={db?.database_name || ''}\n            placeholder={t('Name your database')}\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"helper\">\n          {t('Pick a name to help you identify this database.')}\n        </div>\n      </StyledInputContainer>\n      <StyledInputContainer>\n        <div className=\"control-label\">\n          {t('SQLAlchemy URI')}\n          <span className=\"required\">*</span>\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            name=\"sqlalchemy_uri\"\n            data-test=\"sqlalchemy-uri-input\"\n            value={db?.sqlalchemy_uri || ''}\n            autoComplete=\"off\"\n            placeholder={\n              db?.sqlalchemy_uri_placeholder ||\n              t('dialect+driver://username:password@host:port/database')\n            }\n            onChange={onInputChange}\n          />\n        </div>\n        <div className=\"helper\">\n          {t('Refer to the')}{' '}\n          <a\n            href={fallbackDocsUrl || conf?.SQLALCHEMY_DOCS_URL || ''}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {fallbackDisplayText || conf?.SQLALCHEMY_DISPLAY_TEXT || ''}\n          </a>{' '}\n          {t('for more information on how to structure your URI.')}\n        </div>\n      </StyledInputContainer>\n      {children}\n      <Button\n        onClick={testConnection}\n        loading={testInProgress}\n        cta\n        buttonStyle=\"link\"\n        css={(theme: SupersetTheme) => wideButton(theme)}\n      >\n        {t('Test connection')}\n      </Button>\n    </>\n  );\n};\nexport default SqlAlchemyTab;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}