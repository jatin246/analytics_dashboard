{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getNumberFormatter, t, tn } from '@superset-ui/core';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst limitReachedMsg = t('The row limit set for the chart was reached. The chart may show partial data.');\nexport default function RowCountLabel(props) {\n  const { rowcount = 0, limit = null, loading } = props;\n  const limitReached = limit && rowcount >= limit;\n  const type = limitReached || rowcount === 0 && !loading ? 'danger' : 'default';\n  const formattedRowCount = getNumberFormatter()(rowcount);\n  const label = _jsx(Label, { type: type, children:\n    loading ? t('Loading...') : _jsx(\"span\", { \"data-test\": \"row-count-label\", children:\n      tn('%s row', '%s rows', rowcount, formattedRowCount) }\n    ) }\n  );\n  return limitReached ? _jsx(Tooltip, { id: \"tt-rowcount-tooltip\", title: _jsx(\"span\", { children: limitReachedMsg }), children:\n    label }\n  ) : label;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(limitReachedMsg, \"limitReachedMsg\", \"/app/superset-frontend/src/explore/components/RowCountLabel/index.tsx\");reactHotLoader.register(RowCountLabel, \"RowCountLabel\", \"/app/superset-frontend/src/explore/components/RowCountLabel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getNumberFormatter","t","tn","Label","Tooltip","jsx","_jsx","limitReachedMsg","RowCountLabel","props","rowcount","limit","loading","limitReached","type","formattedRowCount","label","children","id","title","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/RowCountLabel/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getNumberFormatter, t, tn } from '@superset-ui/core';\n\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';\n\ntype RowCountLabelProps = {\n  rowcount?: number;\n  limit?: number;\n  loading?: boolean;\n};\n\nconst limitReachedMsg = t(\n  'The row limit set for the chart was reached. The chart may show partial data.',\n);\n\nexport default function RowCountLabel(props: RowCountLabelProps) {\n  const { rowcount = 0, limit = null, loading } = props;\n  const limitReached = limit && rowcount >= limit;\n  const type =\n    limitReached || (rowcount === 0 && !loading) ? 'danger' : 'default';\n  const formattedRowCount = getNumberFormatter()(rowcount);\n  const label = (\n    <Label type={type}>\n      {loading ? (\n        t('Loading...')\n      ) : (\n        <span data-test=\"row-count-label\">\n          {tn('%s row', '%s rows', rowcount, formattedRowCount)}\n        </span>\n      )}\n    </Label>\n  );\n  return limitReached ? (\n    <Tooltip id=\"tt-rowcount-tooltip\" title={<span>{limitReachedMsg}</span>}>\n      {label}\n    </Tooltip>\n  ) : (\n    label\n  );\n}\n\nexport type { RowCountLabelProps };\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,kBAAkB,EAAEC,CAAC,EAAEC,EAAE,QAAQ,mBAAmB;AAE7D,OAAOC,KAAK,MAAM,sBAAsB;AACxC,SAASC,OAAO,QAAQ,wBAAwB,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAQjD,MAAMC,eAAe,GAAGN,CAAC,CACvB,+EAA+E,CAChF;AAED,eAAc,SAAUO,aAAaA,CAACC,KAAyB;EAC7D,MAAM,EAAEC,QAAQ,GAAG,CAAC,EAAEC,KAAK,GAAG,IAAI,EAAEC,OAAO,EAAE,GAAGH,KAAK;EACrD,MAAMI,YAAY,GAAGF,KAAK,IAAID,QAAQ,IAAIC,KAAK;EAC/C,MAAMG,IAAI,GACRD,YAAY,IAAKH,QAAQ,KAAK,CAAC,IAAI,CAACE,OAAQ,GAAG,QAAQ,GAAG,SAAS;EACrE,MAAMG,iBAAiB,GAAGf,kBAAkB,EAAE,CAACU,QAAQ,CAAC;EACxD,MAAMM,KAAK,GACTV,IAAA,CAACH,KAAK,IAACW,IAAI,EAAEA,IAAK,EAAAG,QAAA;IACfL,OAAO,GACNX,CAAC,CAAC,YAAY,CAAC,GAEfK,IAAA,WAAM,aAAU,iBAAiB,EAAAW,QAAA;MAC9Bf,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAEQ,QAAQ,EAAEK,iBAAiB,CAAC;IACjD,CACP;EACI,CACR;EACD,OAAOF,YAAY,GACjBP,IAAA,CAACF,OAAO,IAACc,EAAE,EAAC,qBAAqB,EAACC,KAAK,EAAEb,IAAA,WAAAW,QAAA,EAAOV,eAAe,EAAO,CAAE,EAAAU,QAAA;IACrED,KAAK;EACC,CAAC,GAEVA,KACD;AACH,CAAC,mBAAAI,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA5BKjB,eAAe,8FAAAa,cAAA,CAAAI,QAAA,CAIGhB,aAAa,oHAAAiB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}