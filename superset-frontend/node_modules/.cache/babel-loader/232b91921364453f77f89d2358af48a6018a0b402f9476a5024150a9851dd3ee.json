{"ast":null,"code":"import { css as _css } from \"@emotion/react\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, useState } from 'react';\nimport { useTheme, t } from '@superset-ui/core';\nimport { COLUMN_NAME_ALIASES } from '@superset-ui/chart-controls';\nimport ColumnConfigItem from './ColumnConfigItem';\nimport { DEFAULT_CONFIG_FORM_LAYOUT } from './constants';\nimport ControlHeader from '../../ControlHeader';\n/**\n * Max number of columns to show by default.\n */import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst MAX_NUM_COLS = 10;\n/**\n * Add per-column config to queried results.\n */\nexport default function ColumnConfigControl({ queryResponse, appliedColumnNames = [], value, onChange, configFormLayout = DEFAULT_CONFIG_FORM_LAYOUT, width, height, ...props }) {\n  const { colnames: _colnames, coltypes: _coltypes } = queryResponse || {};\n  let colnames = [];\n  let coltypes = [];\n  if (appliedColumnNames.length === 0) {\n    colnames = _colnames || [];\n    coltypes = _coltypes || [];\n  } else\n  {\n    const appliedCol = new Set(appliedColumnNames);\n    _colnames == null ? void 0 : _colnames.forEach((col, idx) => {\n      if (appliedCol.has(col)) {\n        colnames.push(col);\n        coltypes.push(_coltypes == null ? void 0 : _coltypes[idx]);\n      }\n    });\n  }\n  const theme = useTheme();\n  const columnConfigs = useMemo(() => {var _colnames2;\n    const configs = {};\n    (_colnames2 = colnames) == null ? void 0 : _colnames2.forEach((col, idx) => {var _coltypes2;\n      configs[col] = {\n        name: COLUMN_NAME_ALIASES[col] || col,\n        type: (_coltypes2 = coltypes) == null ? void 0 : _coltypes2[idx],\n        config: (value == null ? void 0 : value[col]) || {}\n      };\n    });\n    return configs;\n  }, [value, colnames, coltypes]);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n  const getColumnInfo = (col) => columnConfigs[col] || {};\n  const setColumnConfig = (col, config) => {\n    if (onChange) {\n      // Only keep configs for known columns\n      const validConfigs = colnames && value ?\n      Object.fromEntries(Object.entries(value).filter(([key]) => colnames.includes(key))) :\n      { ...value };\n      onChange({\n        ...validConfigs,\n        [col]: config\n      });\n    }\n  };\n  if (!colnames || colnames.length === 0)\n  return null;\n  const needShowMoreButton = colnames.length > MAX_NUM_COLS + 2;\n  const cols = needShowMoreButton && !showAllColumns ?\n  colnames.slice(0, MAX_NUM_COLS) :\n  colnames;\n  return _jsxs(_Fragment, { children: [\n    _jsx(ControlHeader, { ...props }),\n    _jsxs(\"div\", { css: /*#__PURE__*/_css({\n        border: `1px solid ${theme.colors.grayscale.light2}`,\n        borderRadius: theme.gridUnit\n      }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ColumnConfigControl;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9Db2x1bW5Db25maWdDb250cm9sL0NvbHVtbkNvbmZpZ0NvbnRyb2wudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtGVyIsImZpbGUiOiIvYXBwL3N1cGVyc2V0LWZyb250ZW5kL3NyYy9leHBsb3JlL2NvbXBvbmVudHMvY29udHJvbHMvQ29sdW1uQ29uZmlnQ29udHJvbC9Db2x1bW5Db25maWdDb250cm9sLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogTGljZW5zZWQgdG8gdGhlIEFwYWNoZSBTb2Z0d2FyZSBGb3VuZGF0aW9uIChBU0YpIHVuZGVyIG9uZVxuICogb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4gKiBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuICogcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgQVNGIGxpY2Vuc2VzIHRoaXMgZmlsZVxuICogdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuICogXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4gKiB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4gKiBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuICogXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbiAqIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuICogc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuICogdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7IHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlVGhlbWUsIHQsIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NvcmUnO1xuaW1wb3J0IHsgQ09MVU1OX05BTUVfQUxJQVNFUywgfSBmcm9tICdAc3VwZXJzZXQtdWkvY2hhcnQtY29udHJvbHMnO1xuaW1wb3J0IENvbHVtbkNvbmZpZ0l0ZW0gZnJvbSAnLi9Db2x1bW5Db25maWdJdGVtJztcbmltcG9ydCB7IERFRkFVTFRfQ09ORklHX0ZPUk1fTEFZT1VUIH0gZnJvbSAnLi9jb25zdGFudHMnO1xuaW1wb3J0IENvbnRyb2xIZWFkZXIgZnJvbSAnLi4vLi4vQ29udHJvbEhlYWRlcic7XG4vKipcbiAqIE1heCBudW1iZXIgb2YgY29sdW1ucyB0byBzaG93IGJ5IGRlZmF1bHQuXG4gKi9cbmNvbnN0IE1BWF9OVU1fQ09MUyA9IDEwO1xuLyoqXG4gKiBBZGQgcGVyLWNvbHVtbiBjb25maWcgdG8gcXVlcmllZCByZXN1bHRzLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb2x1bW5Db25maWdDb250cm9sKHsgcXVlcnlSZXNwb25zZSwgYXBwbGllZENvbHVtbk5hbWVzID0gW10sIHZhbHVlLCBvbkNoYW5nZSwgY29uZmlnRm9ybUxheW91dCA9IERFRkFVTFRfQ09ORklHX0ZPUk1fTEFZT1VULCB3aWR0aCwgaGVpZ2h0LCAuLi5wcm9wcyB9KSB7XG4gICAgY29uc3QgeyBjb2xuYW1lczogX2NvbG5hbWVzLCBjb2x0eXBlczogX2NvbHR5cGVzIH0gPSBxdWVyeVJlc3BvbnNlIHx8IHt9O1xuICAgIGxldCBjb2xuYW1lcyA9IFtdO1xuICAgIGxldCBjb2x0eXBlcyA9IFtdO1xuICAgIGlmIChhcHBsaWVkQ29sdW1uTmFtZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNvbG5hbWVzID0gX2NvbG5hbWVzIHx8IFtdO1xuICAgICAgICBjb2x0eXBlcyA9IF9jb2x0eXBlcyB8fCBbXTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IGFwcGxpZWRDb2wgPSBuZXcgU2V0KGFwcGxpZWRDb2x1bW5OYW1lcyk7XG4gICAgICAgIF9jb2xuYW1lcz8uZm9yRWFjaCgoY29sLCBpZHgpID0+IHtcbiAgICAgICAgICAgIGlmIChhcHBsaWVkQ29sLmhhcyhjb2wpKSB7XG4gICAgICAgICAgICAgICAgY29sbmFtZXMucHVzaChjb2wpO1xuICAgICAgICAgICAgICAgIGNvbHR5cGVzLnB1c2goX2NvbHR5cGVzPy5baWR4XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gICAgY29uc3QgY29sdW1uQ29uZmlncyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBjb25zdCBjb25maWdzID0ge307XG4gICAgICAgIGNvbG5hbWVzPy5mb3JFYWNoKChjb2wsIGlkeCkgPT4ge1xuICAgICAgICAgICAgY29uZmlnc1tjb2xdID0ge1xuICAgICAgICAgICAgICAgIG5hbWU6IENPTFVNTl9OQU1FX0FMSUFTRVNbY29sXSB8fCBjb2wsXG4gICAgICAgICAgICAgICAgdHlwZTogY29sdHlwZXM/LltpZHhdLFxuICAgICAgICAgICAgICAgIGNvbmZpZzogdmFsdWU/Lltjb2xdIHx8IHt9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBjb25maWdzO1xuICAgIH0sIFt2YWx1ZSwgY29sbmFtZXMsIGNvbHR5cGVzXSk7XG4gICAgY29uc3QgW3Nob3dBbGxDb2x1bW5zLCBzZXRTaG93QWxsQ29sdW1uc10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgZ2V0Q29sdW1uSW5mbyA9IChjb2wpID0+IGNvbHVtbkNvbmZpZ3NbY29sXSB8fCB7fTtcbiAgICBjb25zdCBzZXRDb2x1bW5Db25maWcgPSAoY29sLCBjb25maWcpID0+IHtcbiAgICAgICAgaWYgKG9uQ2hhbmdlKSB7XG4gICAgICAgICAgICAvLyBPbmx5IGtlZXAgY29uZmlncyBmb3Iga25vd24gY29sdW1uc1xuICAgICAgICAgICAgY29uc3QgdmFsaWRDb25maWdzID0gY29sbmFtZXMgJiYgdmFsdWVcbiAgICAgICAgICAgICAgICA/IE9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyh2YWx1ZSkuZmlsdGVyKChba2V5XSkgPT4gY29sbmFtZXMuaW5jbHVkZXMoa2V5KSkpXG4gICAgICAgICAgICAgICAgOiB7IC4uLnZhbHVlIH07XG4gICAgICAgICAgICBvbkNoYW5nZSh7XG4gICAgICAgICAgICAgICAgLi4udmFsaWRDb25maWdzLFxuICAgICAgICAgICAgICAgIFtjb2xdOiBjb25maWcsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgaWYgKCFjb2xuYW1lcyB8fCBjb2xuYW1lcy5sZW5ndGggPT09IDApXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIGNvbnN0IG5lZWRTaG93TW9yZUJ1dHRvbiA9IGNvbG5hbWVzLmxlbmd0aCA+IE1BWF9OVU1fQ09MUyArIDI7XG4gICAgY29uc3QgY29scyA9IG5lZWRTaG93TW9yZUJ1dHRvbiAmJiAhc2hvd0FsbENvbHVtbnNcbiAgICAgICAgPyBjb2xuYW1lcy5zbGljZSgwLCBNQVhfTlVNX0NPTFMpXG4gICAgICAgIDogY29sbmFtZXM7XG4gICAgcmV0dXJuICg8PlxuICAgICAgPENvbnRyb2xIZWFkZXIgey4uLnByb3BzfS8+XG4gICAgICA8ZGl2IGNzcz17e1xuICAgICAgICAgICAgYm9yZGVyOiBgMXB4IHNvbGlkICR7dGhlbWUuY29sb3JzLmdyYXlzY2FsZS5saWdodDJ9YCxcbiAgICAgICAgICAgIGJvcmRlclJhZGl1czogdGhlbWUuZ3JpZFVuaXQsXG4gICAgICAgIH19PlxuICAgICAgICB7Y29scy5tYXAoY29sID0+ICg8Q29sdW1uQ29uZmlnSXRlbSBrZXk9e2NvbH0gY29sdW1uPXtnZXRDb2x1bW5JbmZvKGNvbCl9IG9uQ2hhbmdlPXtjb25maWcgPT4gc2V0Q29sdW1uQ29uZmlnKGNvbCwgY29uZmlnKX0gY29uZmlnRm9ybUxheW91dD17Y29uZmlnRm9ybUxheW91dH0gd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0vPikpfVxuICAgICAgICB7bmVlZFNob3dNb3JlQnV0dG9uICYmICg8ZGl2IHJvbGU9XCJidXR0b25cIiB0YWJJbmRleD17LTF9IGNzcz17e1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IHRoZW1lLmdyaWRVbml0ICogMixcbiAgICAgICAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgICAgICAgICAgIHRleHRUcmFuc2Zvcm06ICd1cHBlcmNhc2UnLFxuICAgICAgICAgICAgICAgIGZvbnRTaXplOiB0aGVtZS50eXBvZ3JhcGh5LnNpemVzLnhzLFxuICAgICAgICAgICAgICAgIGNvbG9yOiB0aGVtZS5jb2xvcnMudGV4dC5sYWJlbCxcbiAgICAgICAgICAgICAgICAnOmhvdmVyJzoge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoZW1lLmNvbG9ycy5ncmF5c2NhbGUubGlnaHQ0LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9fSBvbkNsaWNrPXsoKSA9PiBzZXRTaG93QWxsQ29sdW1ucyghc2hvd0FsbENvbHVtbnMpfT5cbiAgICAgICAgICAgIHtzaG93QWxsQ29sdW1ucyA/ICg8PlxuICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWFuZ2xlLXVwXCIvPiAmbmJzcDsge3QoJ1Nob3cgbGVzcyBjb2x1bW5zJyl9XG4gICAgICAgICAgICAgIDwvPikgOiAoPD5cbiAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1hbmdsZS1kb3duXCIvPiAmbmJzcDtcbiAgICAgICAgICAgICAgICB7dCgnU2hvdyBhbGwgY29sdW1ucycpfVxuICAgICAgICAgICAgICA8Lz4pfVxuICAgICAgICAgIDwvZGl2Pil9XG4gICAgICA8L2Rpdj5cbiAgICA8Lz4pO1xufVxuIl19 */\"), children: [\n      cols.map((col) => _jsx(ColumnConfigItem, { column: getColumnInfo(col), onChange: (config) => setColumnConfig(col, config), configFormLayout: configFormLayout, width: width, height: height }, col)),\n      needShowMoreButton && _jsx(\"div\", { role: \"button\", tabIndex: -1, css: /*#__PURE__*/_css({\n          padding: theme.gridUnit * 2,\n          textAlign: 'center',\n          cursor: 'pointer',\n          textTransform: 'uppercase',\n          fontSize: theme.typography.sizes.xs,\n          color: theme.colors.text.label,\n          ':hover': {\n            backgroundColor: theme.colors.grayscale.light4\n          }\n        }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ColumnConfigControl;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2V4cGxvcmUvY29tcG9uZW50cy9jb250cm9scy9Db2x1bW5Db25maWdDb250cm9sL0NvbHVtbkNvbmZpZ0NvbnRyb2wudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVGaUUiLCJmaWxlIjoiL2FwcC9zdXBlcnNldC1mcm9udGVuZC9zcmMvZXhwbG9yZS9jb21wb25lbnRzL2NvbnRyb2xzL0NvbHVtbkNvbmZpZ0NvbnRyb2wvQ29sdW1uQ29uZmlnQ29udHJvbC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpY2Vuc2VkIHRvIHRoZSBBcGFjaGUgU29mdHdhcmUgRm91bmRhdGlvbiAoQVNGKSB1bmRlciBvbmVcbiAqIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuICogZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbiAqIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIEFTRiBsaWNlbnNlcyB0aGlzIGZpbGVcbiAqIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbiAqIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuICogd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuICogc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbiAqIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4gKiBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbiAqIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbiAqIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5pbXBvcnQgeyB1c2VNZW1vLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVRoZW1lLCB0LCB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCB7IENPTFVNTl9OQU1FX0FMSUFTRVMsIH0gZnJvbSAnQHN1cGVyc2V0LXVpL2NoYXJ0LWNvbnRyb2xzJztcbmltcG9ydCBDb2x1bW5Db25maWdJdGVtIGZyb20gJy4vQ29sdW1uQ29uZmlnSXRlbSc7XG5pbXBvcnQgeyBERUZBVUxUX0NPTkZJR19GT1JNX0xBWU9VVCB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCBDb250cm9sSGVhZGVyIGZyb20gJy4uLy4uL0NvbnRyb2xIZWFkZXInO1xuLyoqXG4gKiBNYXggbnVtYmVyIG9mIGNvbHVtbnMgdG8gc2hvdyBieSBkZWZhdWx0LlxuICovXG5jb25zdCBNQVhfTlVNX0NPTFMgPSAxMDtcbi8qKlxuICogQWRkIHBlci1jb2x1bW4gY29uZmlnIHRvIHF1ZXJpZWQgcmVzdWx0cy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29sdW1uQ29uZmlnQ29udHJvbCh7IHF1ZXJ5UmVzcG9uc2UsIGFwcGxpZWRDb2x1bW5OYW1lcyA9IFtdLCB2YWx1ZSwgb25DaGFuZ2UsIGNvbmZpZ0Zvcm1MYXlvdXQgPSBERUZBVUxUX0NPTkZJR19GT1JNX0xBWU9VVCwgd2lkdGgsIGhlaWdodCwgLi4ucHJvcHMgfSkge1xuICAgIGNvbnN0IHsgY29sbmFtZXM6IF9jb2xuYW1lcywgY29sdHlwZXM6IF9jb2x0eXBlcyB9ID0gcXVlcnlSZXNwb25zZSB8fCB7fTtcbiAgICBsZXQgY29sbmFtZXMgPSBbXTtcbiAgICBsZXQgY29sdHlwZXMgPSBbXTtcbiAgICBpZiAoYXBwbGllZENvbHVtbk5hbWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjb2xuYW1lcyA9IF9jb2xuYW1lcyB8fCBbXTtcbiAgICAgICAgY29sdHlwZXMgPSBfY29sdHlwZXMgfHwgW107XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBhcHBsaWVkQ29sID0gbmV3IFNldChhcHBsaWVkQ29sdW1uTmFtZXMpO1xuICAgICAgICBfY29sbmFtZXM/LmZvckVhY2goKGNvbCwgaWR4KSA9PiB7XG4gICAgICAgICAgICBpZiAoYXBwbGllZENvbC5oYXMoY29sKSkge1xuICAgICAgICAgICAgICAgIGNvbG5hbWVzLnB1c2goY29sKTtcbiAgICAgICAgICAgICAgICBjb2x0eXBlcy5wdXNoKF9jb2x0eXBlcz8uW2lkeF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3QgdGhlbWUgPSB1c2VUaGVtZSgpO1xuICAgIGNvbnN0IGNvbHVtbkNvbmZpZ3MgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgY29uc3QgY29uZmlncyA9IHt9O1xuICAgICAgICBjb2xuYW1lcz8uZm9yRWFjaCgoY29sLCBpZHgpID0+IHtcbiAgICAgICAgICAgIGNvbmZpZ3NbY29sXSA9IHtcbiAgICAgICAgICAgICAgICBuYW1lOiBDT0xVTU5fTkFNRV9BTElBU0VTW2NvbF0gfHwgY29sLFxuICAgICAgICAgICAgICAgIHR5cGU6IGNvbHR5cGVzPy5baWR4XSxcbiAgICAgICAgICAgICAgICBjb25maWc6IHZhbHVlPy5bY29sXSB8fCB7fSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gY29uZmlncztcbiAgICB9LCBbdmFsdWUsIGNvbG5hbWVzLCBjb2x0eXBlc10pO1xuICAgIGNvbnN0IFtzaG93QWxsQ29sdW1ucywgc2V0U2hvd0FsbENvbHVtbnNdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IGdldENvbHVtbkluZm8gPSAoY29sKSA9PiBjb2x1bW5Db25maWdzW2NvbF0gfHwge307XG4gICAgY29uc3Qgc2V0Q29sdW1uQ29uZmlnID0gKGNvbCwgY29uZmlnKSA9PiB7XG4gICAgICAgIGlmIChvbkNoYW5nZSkge1xuICAgICAgICAgICAgLy8gT25seSBrZWVwIGNvbmZpZ3MgZm9yIGtub3duIGNvbHVtbnNcbiAgICAgICAgICAgIGNvbnN0IHZhbGlkQ29uZmlncyA9IGNvbG5hbWVzICYmIHZhbHVlXG4gICAgICAgICAgICAgICAgPyBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXModmFsdWUpLmZpbHRlcigoW2tleV0pID0+IGNvbG5hbWVzLmluY2x1ZGVzKGtleSkpKVxuICAgICAgICAgICAgICAgIDogeyAuLi52YWx1ZSB9O1xuICAgICAgICAgICAgb25DaGFuZ2Uoe1xuICAgICAgICAgICAgICAgIC4uLnZhbGlkQ29uZmlncyxcbiAgICAgICAgICAgICAgICBbY29sXTogY29uZmlnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGlmICghY29sbmFtZXMgfHwgY29sbmFtZXMubGVuZ3RoID09PSAwKVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICBjb25zdCBuZWVkU2hvd01vcmVCdXR0b24gPSBjb2xuYW1lcy5sZW5ndGggPiBNQVhfTlVNX0NPTFMgKyAyO1xuICAgIGNvbnN0IGNvbHMgPSBuZWVkU2hvd01vcmVCdXR0b24gJiYgIXNob3dBbGxDb2x1bW5zXG4gICAgICAgID8gY29sbmFtZXMuc2xpY2UoMCwgTUFYX05VTV9DT0xTKVxuICAgICAgICA6IGNvbG5hbWVzO1xuICAgIHJldHVybiAoPD5cbiAgICAgIDxDb250cm9sSGVhZGVyIHsuLi5wcm9wc30vPlxuICAgICAgPGRpdiBjc3M9e3tcbiAgICAgICAgICAgIGJvcmRlcjogYDFweCBzb2xpZCAke3RoZW1lLmNvbG9ycy5ncmF5c2NhbGUubGlnaHQyfWAsXG4gICAgICAgICAgICBib3JkZXJSYWRpdXM6IHRoZW1lLmdyaWRVbml0LFxuICAgICAgICB9fT5cbiAgICAgICAge2NvbHMubWFwKGNvbCA9PiAoPENvbHVtbkNvbmZpZ0l0ZW0ga2V5PXtjb2x9IGNvbHVtbj17Z2V0Q29sdW1uSW5mbyhjb2wpfSBvbkNoYW5nZT17Y29uZmlnID0+IHNldENvbHVtbkNvbmZpZyhjb2wsIGNvbmZpZyl9IGNvbmZpZ0Zvcm1MYXlvdXQ9e2NvbmZpZ0Zvcm1MYXlvdXR9IHdpZHRoPXt3aWR0aH0gaGVpZ2h0PXtoZWlnaHR9Lz4pKX1cbiAgICAgICAge25lZWRTaG93TW9yZUJ1dHRvbiAmJiAoPGRpdiByb2xlPVwiYnV0dG9uXCIgdGFiSW5kZXg9ey0xfSBjc3M9e3tcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiB0aGVtZS5ncmlkVW5pdCAqIDIsXG4gICAgICAgICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgICAgICAgICAgICB0ZXh0VHJhbnNmb3JtOiAndXBwZXJjYXNlJyxcbiAgICAgICAgICAgICAgICBmb250U2l6ZTogdGhlbWUudHlwb2dyYXBoeS5zaXplcy54cyxcbiAgICAgICAgICAgICAgICBjb2xvcjogdGhlbWUuY29sb3JzLnRleHQubGFiZWwsXG4gICAgICAgICAgICAgICAgJzpob3Zlcic6IHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiB0aGVtZS5jb2xvcnMuZ3JheXNjYWxlLmxpZ2h0NCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfX0gb25DbGljaz17KCkgPT4gc2V0U2hvd0FsbENvbHVtbnMoIXNob3dBbGxDb2x1bW5zKX0+XG4gICAgICAgICAgICB7c2hvd0FsbENvbHVtbnMgPyAoPD5cbiAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1hbmdsZS11cFwiLz4gJm5ic3A7IHt0KCdTaG93IGxlc3MgY29sdW1ucycpfVxuICAgICAgICAgICAgICA8Lz4pIDogKDw+XG4gICAgICAgICAgICAgICAgPGkgY2xhc3NOYW1lPVwiZmEgZmEtYW5nbGUtZG93blwiLz4gJm5ic3A7XG4gICAgICAgICAgICAgICAge3QoJ1Nob3cgYWxsIGNvbHVtbnMnKX1cbiAgICAgICAgICAgICAgPC8+KX1cbiAgICAgICAgICA8L2Rpdj4pfVxuICAgICAgPC9kaXY+XG4gICAgPC8+KTtcbn1cbiJdfQ== */\"), onClick: () => setShowAllColumns(!showAllColumns), children:\n        showAllColumns ? _jsxs(_Fragment, { children: [\n          _jsx(\"i\", { className: \"fa fa-angle-up\" }), \" \\xA0 \", t('Show less columns')] }\n        ) : _jsxs(_Fragment, { children: [\n          _jsx(\"i\", { className: \"fa fa-angle-down\" }), \" \\xA0\",\n          t('Show all columns')] }\n        ) }\n      )] }\n    )] }\n  );\n}__signature__(ColumnConfigControl, \"useTheme{theme}\\nuseMemo{columnConfigs}\\nuseState{[showAllColumns, setShowAllColumns](false)}\", () => [useTheme]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(MAX_NUM_COLS, \"MAX_NUM_COLS\", \"/app/superset-frontend/src/explore/components/controls/ColumnConfigControl/ColumnConfigControl.tsx\");reactHotLoader.register(ColumnConfigControl, \"ColumnConfigControl\", \"/app/superset-frontend/src/explore/components/controls/ColumnConfigControl/ColumnConfigControl.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","useState","useTheme","t","COLUMN_NAME_ALIASES","ColumnConfigItem","DEFAULT_CONFIG_FORM_LAYOUT","ControlHeader","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","MAX_NUM_COLS","ColumnConfigControl","queryResponse","appliedColumnNames","value","onChange","configFormLayout","width","height","props","colnames","_colnames","coltypes","_coltypes","length","appliedCol","Set","forEach","col","idx","has","push","theme","columnConfigs","_colnames2","configs","_coltypes2","name","type","config","showAllColumns","setShowAllColumns","getColumnInfo","setColumnConfig","validConfigs","Object","fromEntries","entries","filter","key","includes","needShowMoreButton","cols","slice","children","css","_css","border","colors","grayscale","light2","borderRadius","gridUnit","process","env","NODE_ENV","map","column","role","tabIndex","padding","textAlign","cursor","textTransform","fontSize","typography","sizes","xs","color","text","label","backgroundColor","light4","onClick","className","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/controls/ColumnConfigControl/ColumnConfigControl.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, useState } from 'react';\nimport {\n  ChartDataResponseResult,\n  useTheme,\n  t,\n  GenericDataType,\n} from '@superset-ui/core';\n\nimport {\n  COLUMN_NAME_ALIASES,\n  ControlComponentProps,\n} from '@superset-ui/chart-controls';\nimport ColumnConfigItem from './ColumnConfigItem';\nimport {\n  ColumnConfigInfo,\n  ColumnConfig,\n  ColumnConfigFormLayout,\n} from './types';\nimport { DEFAULT_CONFIG_FORM_LAYOUT } from './constants';\nimport ControlHeader from '../../ControlHeader';\n\nexport type ColumnConfigControlProps<T extends ColumnConfig> =\n  ControlComponentProps<Record<string, T>> & {\n    queryResponse?: ChartDataResponseResult;\n    configFormLayout?: ColumnConfigFormLayout;\n    appliedColumnNames?: string[];\n    width?: number | string;\n    height?: number | string;\n  };\n\n/**\n * Max number of columns to show by default.\n */\nconst MAX_NUM_COLS = 10;\n\n/**\n * Add per-column config to queried results.\n */\nexport default function ColumnConfigControl<T extends ColumnConfig>({\n  queryResponse,\n  appliedColumnNames = [],\n  value,\n  onChange,\n  configFormLayout = DEFAULT_CONFIG_FORM_LAYOUT,\n  width,\n  height,\n  ...props\n}: ColumnConfigControlProps<T>) {\n  const { colnames: _colnames, coltypes: _coltypes } = queryResponse || {};\n  let colnames: string[] = [];\n  let coltypes: GenericDataType[] = [];\n  if (appliedColumnNames.length === 0) {\n    colnames = _colnames || [];\n    coltypes = _coltypes || [];\n  } else {\n    const appliedCol = new Set(appliedColumnNames);\n    _colnames?.forEach((col, idx) => {\n      if (appliedCol.has(col)) {\n        colnames.push(col);\n        coltypes.push(_coltypes?.[idx] as GenericDataType);\n      }\n    });\n  }\n  const theme = useTheme();\n  const columnConfigs = useMemo(() => {\n    const configs: Record<string, ColumnConfigInfo> = {};\n    colnames?.forEach((col, idx) => {\n      configs[col] = {\n        name: COLUMN_NAME_ALIASES[col] || col,\n        type: coltypes?.[idx],\n        config: value?.[col] || {},\n      };\n    });\n    return configs;\n  }, [value, colnames, coltypes]);\n  const [showAllColumns, setShowAllColumns] = useState(false);\n\n  const getColumnInfo = (col: string) => columnConfigs[col] || {};\n  const setColumnConfig = (col: string, config: T) => {\n    if (onChange) {\n      // Only keep configs for known columns\n      const validConfigs: Record<string, T> =\n        colnames && value\n          ? Object.fromEntries(\n              Object.entries(value).filter(([key]) => colnames.includes(key)),\n            )\n          : { ...value };\n      onChange({\n        ...validConfigs,\n        [col]: config,\n      });\n    }\n  };\n\n  if (!colnames || colnames.length === 0) return null;\n\n  const needShowMoreButton = colnames.length > MAX_NUM_COLS + 2;\n  const cols =\n    needShowMoreButton && !showAllColumns\n      ? colnames.slice(0, MAX_NUM_COLS)\n      : colnames;\n\n  return (\n    <>\n      <ControlHeader {...props} />\n      <div\n        css={{\n          border: `1px solid ${theme.colors.grayscale.light2}`,\n          borderRadius: theme.gridUnit,\n        }}\n      >\n        {cols.map(col => (\n          <ColumnConfigItem\n            key={col}\n            column={getColumnInfo(col)}\n            onChange={config => setColumnConfig(col, config as T)}\n            configFormLayout={configFormLayout}\n            width={width}\n            height={height}\n          />\n        ))}\n        {needShowMoreButton && (\n          <div\n            role=\"button\"\n            tabIndex={-1}\n            css={{\n              padding: theme.gridUnit * 2,\n              textAlign: 'center',\n              cursor: 'pointer',\n              textTransform: 'uppercase',\n              fontSize: theme.typography.sizes.xs,\n              color: theme.colors.text.label,\n              ':hover': {\n                backgroundColor: theme.colors.grayscale.light4,\n              },\n            }}\n            onClick={() => setShowAllColumns(!showAllColumns)}\n          >\n            {showAllColumns ? (\n              <>\n                <i className=\"fa fa-angle-up\" /> &nbsp; {t('Show less columns')}\n              </>\n            ) : (\n              <>\n                <i className=\"fa fa-angle-down\" /> &nbsp;\n                {t('Show all columns')}\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}