{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Children, cloneElement, useRef, useMemo, useLayoutEffect, useCallback } from 'react';\nimport getScrollBarSize from '../utils/getScrollBarSize';\nimport needScrollBar from '../utils/needScrollBar';\nimport useMountedMemo from '../utils/useMountedMemo';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport var ReducerActions;\n(function (ReducerActions) {\n  ReducerActions[\"Init\"] = \"init\";\n  ReducerActions[\"SetStickyState\"] = \"setStickyState\";\n})(ReducerActions || (ReducerActions = {}));\nconst sum = (a, b) => a + b;\nconst mergeStyleProp = (node, style) => ({\n  style: {\n    ...node.props.style,\n    ...style\n  }\n});\nconst fixedTableLayout = { tableLayout: 'fixed' };\n/**\n * An HOC for generating sticky header and fixed-height scrollable area\n */\nfunction StickyWrap({ sticky = {}, width: maxWidth, height: maxHeight, children: table, setStickyState }) {\n  if (!table || table.type !== 'table') {\n    throw new Error('<StickyWrap> must have only one <table> element as child');\n  }\n  let thead;\n  let tbody;\n  let tfoot;\n  Children.forEach(table.props.children, (node) => {\n    if (!node) {\n      return;\n    }\n    if (node.type === 'thead') {\n      thead = node;\n    } else\n    if (node.type === 'tbody') {\n      tbody = node;\n    } else\n    if (node.type === 'tfoot') {\n      tfoot = node;\n    }\n  });\n  if (!thead || !tbody) {\n    throw new Error('<table> in <StickyWrap> must contain both thead and tbody.');\n  }\n  const columnCount = useMemo(() => {var _thead;\n    const headerRows = Children.toArray((_thead = thead) == null ? void 0 : _thead.props.children).pop();\n    return headerRows.props.children.length;\n  }, [thead]);\n  const theadRef = useRef(null); // original thead for layout computation\n  const tfootRef = useRef(null); // original tfoot for layout computation\n  const scrollHeaderRef = useRef(null); // fixed header\n  const scrollFooterRef = useRef(null); // fixed footer\n  const scrollBodyRef = useRef(null); // main body\n  const scrollBarSize = getScrollBarSize();\n  const { bodyHeight, columnWidths } = sticky;\n  const needSizer = !columnWidths ||\n  sticky.width !== maxWidth ||\n  sticky.height !== maxHeight ||\n  sticky.setStickyState !== setStickyState;\n  // update scrollable area and header column sizes when mounted\n  useLayoutEffect(() => {var _bodyThead$childNodes, _bodyThead$childNodes2;\n    if (!theadRef.current) {\n      return;\n    }\n    const bodyThead = theadRef.current;\n    const theadHeight = bodyThead.clientHeight;\n    const tfootHeight = tfootRef.current ? tfootRef.current.clientHeight : 0;\n    if (!theadHeight) {\n      return;\n    }\n    const fullTableHeight = bodyThead.parentNode.\n    clientHeight;\n    // instead of always using the first tr, we use the last one to support\n    // multi-level headers assuming the last one is the more detailed one\n    const ths = (_bodyThead$childNodes = bodyThead.childNodes) == null ? void 0 : _bodyThead$childNodes[((_bodyThead$childNodes2 = bodyThead.childNodes) == null ? void 0 : _bodyThead$childNodes2.length) - 1 || 0].\n    childNodes;\n    const widths = Array.from(ths).map((th) => {var _th$getBoundingClient;return ((_th$getBoundingClient = th.getBoundingClientRect()) == null ? void 0 : _th$getBoundingClient.width) || th.clientWidth;});\n    const [hasVerticalScroll, hasHorizontalScroll] = needScrollBar({\n      width: maxWidth,\n      height: maxHeight - theadHeight - tfootHeight,\n      innerHeight: fullTableHeight,\n      innerWidth: widths.reduce(sum),\n      scrollBarSize\n    });\n    // real container height, include table header, footer and space for\n    // horizontal scroll bar\n    const realHeight = Math.min(maxHeight, hasHorizontalScroll ? fullTableHeight + scrollBarSize : fullTableHeight);\n    setStickyState({\n      hasVerticalScroll,\n      hasHorizontalScroll,\n      setStickyState,\n      width: maxWidth,\n      height: maxHeight,\n      realHeight,\n      tableHeight: fullTableHeight,\n      bodyHeight: realHeight - theadHeight - tfootHeight,\n      columnWidths: widths\n    });\n  }, [maxWidth, maxHeight, setStickyState, scrollBarSize]);\n  let sizerTable;\n  let headerTable;\n  let footerTable;\n  let bodyTable;\n  if (needSizer) {\n    const theadWithRef = /*#__PURE__*/cloneElement(thead, { ref: theadRef });\n    const tfootWithRef = tfoot && /*#__PURE__*/cloneElement(tfoot, { ref: tfootRef });\n    sizerTable = _jsx(\"div\", { style: {\n        height: maxHeight,\n        overflow: 'auto',\n        visibility: 'hidden',\n        scrollbarGutter: 'stable'\n      }, role: \"presentation\", children: /*#__PURE__*/\n      cloneElement(table, { role: 'presentation' }, theadWithRef, tbody, tfootWithRef) }, \"sizer\"\n    );\n  }\n  // reuse previously column widths, will be updated by `useLayoutEffect` above\n  const colWidths = columnWidths == null ? void 0 : columnWidths.slice(0, columnCount);\n  if (colWidths && bodyHeight) {\n    const colgroup = _jsx(\"colgroup\", { children:\n      colWidths.map((w, i) =>\n      // eslint-disable-next-line react/no-array-index-key\n      _jsx(\"col\", { width: w }, i)) }\n    );\n    headerTable = _jsxs(\"div\", { ref: scrollHeaderRef, style: {\n        overflow: 'hidden',\n        scrollbarGutter: 'stable'\n      }, role: \"presentation\", children: [/*#__PURE__*/\n      cloneElement( /*#__PURE__*/cloneElement(table, { role: 'presentation' }), mergeStyleProp(table, fixedTableLayout), colgroup, thead),\n      headerTable] }, \"header\"\n    );\n    footerTable = tfoot && _jsxs(\"div\", { ref: scrollFooterRef, style: {\n        overflow: 'hidden',\n        scrollbarGutter: 'stable'\n      }, role: \"presentation\", children: [/*#__PURE__*/\n      cloneElement( /*#__PURE__*/cloneElement(table, { role: 'presentation' }), mergeStyleProp(table, fixedTableLayout), colgroup, tfoot),\n      footerTable] }, \"footer\"\n    );\n    const onScroll = (e) => {\n      if (scrollHeaderRef.current) {\n        scrollHeaderRef.current.scrollLeft = e.currentTarget.scrollLeft;\n      }\n      if (scrollFooterRef.current) {\n        scrollFooterRef.current.scrollLeft = e.currentTarget.scrollLeft;\n      }\n    };\n    bodyTable = _jsx(\"div\", { ref: scrollBodyRef, style: {\n        height: bodyHeight,\n        overflow: 'auto',\n        scrollbarGutter: 'stable'\n      }, onScroll: sticky.hasHorizontalScroll ? onScroll : undefined, role: \"presentation\", children: /*#__PURE__*/\n      cloneElement( /*#__PURE__*/cloneElement(table, { role: 'presentation' }), mergeStyleProp(table, fixedTableLayout), colgroup, tbody) }, \"body\"\n    );\n  }\n  return _jsxs(\"div\", { style: {\n      width: maxWidth,\n      height: sticky.realHeight || maxHeight,\n      overflow: 'hidden'\n    }, role: \"table\", children: [\n    headerTable,\n    bodyTable,\n    footerTable,\n    sizerTable] }\n  );\n}__signature__(StickyWrap, \"useMemo{columnCount}\\nuseRef{theadRef}\\nuseRef{tfootRef}\\nuseRef{scrollHeaderRef}\\nuseRef{scrollFooterRef}\\nuseRef{scrollBodyRef}\\nuseLayoutEffect{}\");\nfunction useInstance(instance) {\n  const { dispatch, state: { sticky }, data, page, rows, allColumns, getTableSize = () => undefined } = instance;\n  const setStickyState = useCallback((size) => {\n    dispatch({\n      type: ReducerActions.SetStickyState,\n      size\n    });\n  },\n  // turning pages would also trigger a resize\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [dispatch, getTableSize, page, rows]);\n  const useStickyWrap = (renderer) => {\n    const { width, height } = useMountedMemo(getTableSize, [getTableSize]) || sticky;\n    // only change of data should trigger re-render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const table = useMemo(renderer, [page, rows, allColumns]);\n    useLayoutEffect(() => {\n      if (!width || !height) {\n        setStickyState();\n      }\n    }, [width, height]);\n    if (!width || !height) {\n      return null;\n    }\n    if (data.length === 0) {\n      return table;\n    }\n    return _jsx(StickyWrap, { width: width, height: height, sticky: sticky, setStickyState: setStickyState, children:\n      table }\n    );\n  };__signature__(useStickyWrap, \"useMountedMemo{}\\nuseMemo{table}\\nuseLayoutEffect{}\", () => [useMountedMemo]);\n  Object.assign(instance, {\n    setStickyState,\n    wrapStickyTable: useStickyWrap\n  });\n}__signature__(useInstance, \"useCallback{setStickyState}\");\nexport default function useSticky(hooks) {\n  hooks.useInstance.push(useInstance);\n  hooks.stateReducers.push((newState, action_, prevState) => {\n    const action = action_;\n    if (action.type === ReducerActions.Init) {\n      return {\n        ...newState,\n        sticky: {\n          ...(prevState == null ? void 0 : prevState.sticky)\n        }\n      };\n    }\n    if (action.type === ReducerActions.SetStickyState) {\n      const { size } = action;\n      if (!size) {\n        return { ...newState };\n      }\n      return {\n        ...newState,\n        sticky: {\n          ...(prevState == null ? void 0 : prevState.sticky),\n          ...(newState == null ? void 0 : newState.sticky),\n          ...action.size\n        }\n      };\n    }\n    return newState;\n  });\n}\nuseSticky.pluginName = 'useSticky';;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ReducerActions, \"ReducerActions\", \"/app/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(sum, \"sum\", \"/app/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(mergeStyleProp, \"mergeStyleProp\", \"/app/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(fixedTableLayout, \"fixedTableLayout\", \"/app/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(StickyWrap, \"StickyWrap\", \"/app/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(useInstance, \"useInstance\", \"/app/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");reactHotLoader.register(useSticky, \"useSticky\", \"/app/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Children","cloneElement","useRef","useMemo","useLayoutEffect","useCallback","getScrollBarSize","needScrollBar","useMountedMemo","jsx","_jsx","jsxs","_jsxs","ReducerActions","sum","a","b","mergeStyleProp","node","style","props","fixedTableLayout","tableLayout","StickyWrap","sticky","width","maxWidth","height","maxHeight","children","table","setStickyState","type","Error","thead","tbody","tfoot","forEach","columnCount","_thead","headerRows","toArray","pop","length","theadRef","tfootRef","scrollHeaderRef","scrollFooterRef","scrollBodyRef","scrollBarSize","bodyHeight","columnWidths","needSizer","_bodyThead$childNodes","_bodyThead$childNodes2","current","bodyThead","theadHeight","clientHeight","tfootHeight","fullTableHeight","parentNode","ths","childNodes","widths","Array","from","map","th","_th$getBoundingClient","getBoundingClientRect","clientWidth","hasVerticalScroll","hasHorizontalScroll","innerHeight","innerWidth","reduce","realHeight","Math","min","tableHeight","sizerTable","headerTable","footerTable","bodyTable","theadWithRef","ref","tfootWithRef","overflow","visibility","scrollbarGutter","role","colWidths","slice","colgroup","w","i","onScroll","e","scrollLeft","currentTarget","undefined","__signature__","useInstance","instance","dispatch","state","data","page","rows","allColumns","getTableSize","size","SetStickyState","useStickyWrap","renderer","Object","assign","wrapStickyTable","useSticky","hooks","push","stateReducers","newState","action_","prevState","action","Init","pluginName","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/plugin-chart-table/src/DataTable/hooks/useSticky.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  Children,\n  cloneElement,\n  useRef,\n  useMemo,\n  useLayoutEffect,\n  useCallback,\n  ReactNode,\n  ReactElement,\n  ComponentPropsWithRef,\n  CSSProperties,\n  UIEventHandler,\n} from 'react';\nimport { TableInstance, Hooks } from 'react-table';\nimport getScrollBarSize from '../utils/getScrollBarSize';\nimport needScrollBar from '../utils/needScrollBar';\nimport useMountedMemo from '../utils/useMountedMemo';\n\ntype ReactElementWithChildren<\n  T extends keyof JSX.IntrinsicElements,\n  C extends ReactNode = ReactNode,\n> = ReactElement<ComponentPropsWithRef<T> & { children: C }, T>;\n\ntype Th = ReactElementWithChildren<'th'>;\ntype Td = ReactElementWithChildren<'td'>;\ntype TrWithTh = ReactElementWithChildren<'tr', Th[]>;\ntype TrWithTd = ReactElementWithChildren<'tr', Td[]>;\ntype Thead = ReactElementWithChildren<'thead', TrWithTh>;\ntype Tbody = ReactElementWithChildren<'tbody', TrWithTd>;\ntype Tfoot = ReactElementWithChildren<'tfoot', TrWithTd>;\ntype Col = ReactElementWithChildren<'col', null>;\ntype ColGroup = ReactElementWithChildren<'colgroup', Col>;\n\nexport type Table = ReactElementWithChildren<\n  'table',\n  (Thead | Tbody | Tfoot | ColGroup)[]\n>;\nexport type TableRenderer = () => Table;\nexport type GetTableSize = () => Partial<StickyState> | undefined;\nexport type SetStickyState = (size?: Partial<StickyState>) => void;\n\nexport enum ReducerActions {\n  Init = 'init', // this is from global reducer\n  SetStickyState = 'setStickyState',\n}\n\nexport type ReducerAction<\n  T extends string,\n  P extends Record<string, unknown>,\n> = P & { type: T };\n\nexport type ColumnWidths = number[];\n\nexport interface StickyState {\n  width?: number; // maximum full table width\n  height?: number; // maximum full table height\n  realHeight?: number; // actual table viewport height (header + scrollable area)\n  bodyHeight?: number; // scrollable area height\n  tableHeight?: number; // the full table height\n  columnWidths?: ColumnWidths;\n  hasHorizontalScroll?: boolean;\n  hasVerticalScroll?: boolean;\n  rendering?: boolean;\n  setStickyState?: SetStickyState;\n}\n\nexport interface UseStickyTableOptions {\n  getTableSize?: GetTableSize;\n}\n\nexport interface UseStickyInstanceProps {\n  // manipulate DOMs in <table> to make the header sticky\n  wrapStickyTable: (renderer: TableRenderer) => ReactNode;\n  // update or recompute the sticky table size\n  setStickyState: SetStickyState;\n}\n\nexport type UseStickyState = {\n  sticky: StickyState;\n};\n\nconst sum = (a: number, b: number) => a + b;\nconst mergeStyleProp = (\n  node: ReactElement<{ style?: CSSProperties }>,\n  style: CSSProperties,\n) => ({\n  style: {\n    ...node.props.style,\n    ...style,\n  },\n});\nconst fixedTableLayout: CSSProperties = { tableLayout: 'fixed' };\n\n/**\n * An HOC for generating sticky header and fixed-height scrollable area\n */\nfunction StickyWrap({\n  sticky = {},\n  width: maxWidth,\n  height: maxHeight,\n  children: table,\n  setStickyState,\n}: {\n  width: number;\n  height: number;\n  setStickyState: SetStickyState;\n  children: Table;\n  sticky?: StickyState; // current sticky element sizes\n}) {\n  if (!table || table.type !== 'table') {\n    throw new Error('<StickyWrap> must have only one <table> element as child');\n  }\n  let thead: Thead | undefined;\n  let tbody: Tbody | undefined;\n  let tfoot: Tfoot | undefined;\n\n  Children.forEach(table.props.children, node => {\n    if (!node) {\n      return;\n    }\n    if (node.type === 'thead') {\n      thead = node;\n    } else if (node.type === 'tbody') {\n      tbody = node;\n    } else if (node.type === 'tfoot') {\n      tfoot = node;\n    }\n  });\n  if (!thead || !tbody) {\n    throw new Error(\n      '<table> in <StickyWrap> must contain both thead and tbody.',\n    );\n  }\n  const columnCount = useMemo(() => {\n    const headerRows = Children.toArray(\n      thead?.props.children,\n    ).pop() as TrWithTh;\n    return headerRows.props.children.length;\n  }, [thead]);\n\n  const theadRef = useRef<HTMLTableSectionElement>(null); // original thead for layout computation\n  const tfootRef = useRef<HTMLTableSectionElement>(null); // original tfoot for layout computation\n  const scrollHeaderRef = useRef<HTMLDivElement>(null); // fixed header\n  const scrollFooterRef = useRef<HTMLDivElement>(null); // fixed footer\n  const scrollBodyRef = useRef<HTMLDivElement>(null); // main body\n\n  const scrollBarSize = getScrollBarSize();\n  const { bodyHeight, columnWidths } = sticky;\n  const needSizer =\n    !columnWidths ||\n    sticky.width !== maxWidth ||\n    sticky.height !== maxHeight ||\n    sticky.setStickyState !== setStickyState;\n\n  // update scrollable area and header column sizes when mounted\n  useLayoutEffect(() => {\n    if (!theadRef.current) {\n      return;\n    }\n    const bodyThead = theadRef.current;\n    const theadHeight = bodyThead.clientHeight;\n    const tfootHeight = tfootRef.current ? tfootRef.current.clientHeight : 0;\n    if (!theadHeight) {\n      return;\n    }\n    const fullTableHeight = (bodyThead.parentNode as HTMLTableElement)\n      .clientHeight;\n    // instead of always using the first tr, we use the last one to support\n    // multi-level headers assuming the last one is the more detailed one\n    const ths = bodyThead.childNodes?.[bodyThead.childNodes?.length - 1 || 0]\n      .childNodes as NodeListOf<HTMLTableHeaderCellElement>;\n    const widths = Array.from(ths).map(\n      th => th.getBoundingClientRect()?.width || th.clientWidth,\n    );\n    const [hasVerticalScroll, hasHorizontalScroll] = needScrollBar({\n      width: maxWidth,\n      height: maxHeight - theadHeight - tfootHeight,\n      innerHeight: fullTableHeight,\n      innerWidth: widths.reduce(sum),\n      scrollBarSize,\n    });\n    // real container height, include table header, footer and space for\n    // horizontal scroll bar\n    const realHeight = Math.min(\n      maxHeight,\n      hasHorizontalScroll ? fullTableHeight + scrollBarSize : fullTableHeight,\n    );\n    setStickyState({\n      hasVerticalScroll,\n      hasHorizontalScroll,\n      setStickyState,\n      width: maxWidth,\n      height: maxHeight,\n      realHeight,\n      tableHeight: fullTableHeight,\n      bodyHeight: realHeight - theadHeight - tfootHeight,\n      columnWidths: widths,\n    });\n  }, [maxWidth, maxHeight, setStickyState, scrollBarSize]);\n\n  let sizerTable: ReactElement | undefined;\n  let headerTable: ReactElement | undefined;\n  let footerTable: ReactElement | undefined;\n  let bodyTable: ReactElement | undefined;\n\n  if (needSizer) {\n    const theadWithRef = cloneElement(thead, { ref: theadRef });\n    const tfootWithRef = tfoot && cloneElement(tfoot, { ref: tfootRef });\n    sizerTable = (\n      <div\n        key=\"sizer\"\n        style={{\n          height: maxHeight,\n          overflow: 'auto',\n          visibility: 'hidden',\n          scrollbarGutter: 'stable',\n        }}\n        role=\"presentation\"\n      >\n        {cloneElement(\n          table,\n          { role: 'presentation' },\n          theadWithRef,\n          tbody,\n          tfootWithRef,\n        )}\n      </div>\n    );\n  }\n\n  // reuse previously column widths, will be updated by `useLayoutEffect` above\n  const colWidths = columnWidths?.slice(0, columnCount);\n\n  if (colWidths && bodyHeight) {\n    const colgroup = (\n      <colgroup>\n        {colWidths.map((w, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <col key={i} width={w} />\n        ))}\n      </colgroup>\n    );\n\n    headerTable = (\n      <div\n        key=\"header\"\n        ref={scrollHeaderRef}\n        style={{\n          overflow: 'hidden',\n          scrollbarGutter: 'stable',\n        }}\n        role=\"presentation\"\n      >\n        {cloneElement(\n          cloneElement(table, { role: 'presentation' }),\n          mergeStyleProp(table, fixedTableLayout),\n          colgroup,\n          thead,\n        )}\n        {headerTable}\n      </div>\n    );\n\n    footerTable = tfoot && (\n      <div\n        key=\"footer\"\n        ref={scrollFooterRef}\n        style={{\n          overflow: 'hidden',\n          scrollbarGutter: 'stable',\n        }}\n        role=\"presentation\"\n      >\n        {cloneElement(\n          cloneElement(table, { role: 'presentation' }),\n          mergeStyleProp(table, fixedTableLayout),\n          colgroup,\n          tfoot,\n        )}\n        {footerTable}\n      </div>\n    );\n\n    const onScroll: UIEventHandler<HTMLDivElement> = e => {\n      if (scrollHeaderRef.current) {\n        scrollHeaderRef.current.scrollLeft = e.currentTarget.scrollLeft;\n      }\n      if (scrollFooterRef.current) {\n        scrollFooterRef.current.scrollLeft = e.currentTarget.scrollLeft;\n      }\n    };\n    bodyTable = (\n      <div\n        key=\"body\"\n        ref={scrollBodyRef}\n        style={{\n          height: bodyHeight,\n          overflow: 'auto',\n          scrollbarGutter: 'stable',\n        }}\n        onScroll={sticky.hasHorizontalScroll ? onScroll : undefined}\n        role=\"presentation\"\n      >\n        {cloneElement(\n          cloneElement(table, { role: 'presentation' }),\n          mergeStyleProp(table, fixedTableLayout),\n          colgroup,\n          tbody,\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        width: maxWidth,\n        height: sticky.realHeight || maxHeight,\n        overflow: 'hidden',\n      }}\n      role=\"table\"\n    >\n      {headerTable}\n      {bodyTable}\n      {footerTable}\n      {sizerTable}\n    </div>\n  );\n}\n\nfunction useInstance<D extends object>(instance: TableInstance<D>) {\n  const {\n    dispatch,\n    state: { sticky },\n    data,\n    page,\n    rows,\n    allColumns,\n    getTableSize = () => undefined,\n  } = instance;\n\n  const setStickyState = useCallback(\n    (size?: Partial<StickyState>) => {\n      dispatch({\n        type: ReducerActions.SetStickyState,\n        size,\n      });\n    },\n    // turning pages would also trigger a resize\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dispatch, getTableSize, page, rows],\n  );\n\n  const useStickyWrap = (renderer: TableRenderer) => {\n    const { width, height }: { width?: number; height?: number } =\n      useMountedMemo(getTableSize, [getTableSize]) || sticky;\n    // only change of data should trigger re-render\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const table = useMemo(renderer, [page, rows, allColumns]);\n\n    useLayoutEffect(() => {\n      if (!width || !height) {\n        setStickyState();\n      }\n    }, [width, height]);\n\n    if (!width || !height) {\n      return null;\n    }\n    if (data.length === 0) {\n      return table;\n    }\n    return (\n      <StickyWrap\n        width={width}\n        height={height}\n        sticky={sticky}\n        setStickyState={setStickyState}\n      >\n        {table}\n      </StickyWrap>\n    );\n  };\n\n  Object.assign(instance, {\n    setStickyState,\n    wrapStickyTable: useStickyWrap,\n  });\n}\n\nexport default function useSticky<D extends object>(hooks: Hooks<D>) {\n  hooks.useInstance.push(useInstance);\n  hooks.stateReducers.push((newState, action_, prevState) => {\n    const action = action_ as ReducerAction<\n      ReducerActions,\n      { size: StickyState }\n    >;\n    if (action.type === ReducerActions.Init) {\n      return {\n        ...newState,\n        sticky: {\n          ...prevState?.sticky,\n        },\n      };\n    }\n    if (action.type === ReducerActions.SetStickyState) {\n      const { size } = action;\n      if (!size) {\n        return { ...newState };\n      }\n      return {\n        ...newState,\n        sticky: {\n          ...prevState?.sticky,\n          ...newState?.sticky,\n          ...action.size,\n        },\n      };\n    }\n    return newState;\n  });\n}\nuseSticky.pluginName = 'useSticky';\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,QAAQ,EACRC,YAAY,EACZC,MAAM,EACNC,OAAO,EACPC,eAAe,EACfC,WAAW,QAMN,OAAO;AAEd,OAAOC,gBAAgB,MAAM,2BAA2B;AACxD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,cAAc,MAAM,yBAAyB,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAyBrD,WAAYC,cAGX;AAHD,WAAYA,cAAc;EACxBA,cAAA,iBAAa;EACbA,cAAA,qCAAiC;AACnC,CAAC,EAHWA,cAAc,KAAdA,cAAc;AAwC1B,MAAMC,GAAG,GAAGA,CAACC,CAAS,EAAEC,CAAS,KAAKD,CAAC,GAAGC,CAAC;AAC3C,MAAMC,cAAc,GAAGA,CACrBC,IAA6C,EAC7CC,KAAoB,MAChB;EACJA,KAAK,EAAE;IACL,GAAGD,IAAI,CAACE,KAAK,CAACD,KAAK;IACnB,GAAGA;;CAEN,CAAC;AACF,MAAME,gBAAgB,GAAkB,EAAEC,WAAW,EAAE,OAAO,EAAE;AAEhE;;;AAGA,SAASC,UAAUA,CAAC,EAClBC,MAAM,GAAG,EAAE,EACXC,KAAK,EAAEC,QAAQ,EACfC,MAAM,EAAEC,SAAS,EACjBC,QAAQ,EAAEC,KAAK,EACfC,cAAc,EAOf;EACC,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACE,IAAI,KAAK,OAAO,EAAE;IACpC,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;;EAE7E,IAAIC,KAAwB;EAC5B,IAAIC,KAAwB;EAC5B,IAAIC,KAAwB;EAE5BpC,QAAQ,CAACqC,OAAO,CAACP,KAAK,CAACV,KAAK,CAACS,QAAQ,EAAE,CAAAX,IAAI,KAAG;IAC5C,IAAI,CAACA,IAAI,EAAE;MACT;;IAEF,IAAIA,IAAI,CAACc,IAAI,KAAK,OAAO,EAAE;MACzBE,KAAK,GAAGhB,IAAI;KACb;IAAM,IAAIA,IAAI,CAACc,IAAI,KAAK,OAAO,EAAE;MAChCG,KAAK,GAAGjB,IAAI;KACb;IAAM,IAAIA,IAAI,CAACc,IAAI,KAAK,OAAO,EAAE;MAChCI,KAAK,GAAGlB,IAAI;;EAEhB,CAAC,CAAC;EACF,IAAI,CAACgB,KAAK,IAAI,CAACC,KAAK,EAAE;IACpB,MAAM,IAAIF,KAAK,CACb,4DAA4D,CAC7D;;EAEH,MAAMK,WAAW,GAAGnC,OAAO,CAAC,MAAK,KAAAoC,MAAA;IAC/B,MAAMC,UAAU,GAAGxC,QAAQ,CAACyC,OAAO,EAAAF,MAAA,GACjCL,KAAK,qBAALK,MAAA,CAAOnB,KAAK,CAACS,QAAQ,CACtB,CAACa,GAAG,EAAc;IACnB,OAAOF,UAAU,CAACpB,KAAK,CAACS,QAAQ,CAACc,MAAM;EACzC,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,MAAMU,QAAQ,GAAG1C,MAAM,CAA0B,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM2C,QAAQ,GAAG3C,MAAM,CAA0B,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM4C,eAAe,GAAG5C,MAAM,CAAiB,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM6C,eAAe,GAAG7C,MAAM,CAAiB,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM8C,aAAa,GAAG9C,MAAM,CAAiB,IAAI,CAAC,CAAC,CAAC;EAEpD,MAAM+C,aAAa,GAAG3C,gBAAgB,EAAE;EACxC,MAAM,EAAE4C,UAAU,EAAEC,YAAY,EAAE,GAAG3B,MAAM;EAC3C,MAAM4B,SAAS,GACb,CAACD,YAAY;EACb3B,MAAM,CAACC,KAAK,KAAKC,QAAQ;EACzBF,MAAM,CAACG,MAAM,KAAKC,SAAS;EAC3BJ,MAAM,CAACO,cAAc,KAAKA,cAAc;EAE1C;EACA3B,eAAe,CAAC,MAAK,KAAAiD,qBAAA,EAAAC,sBAAA;IACnB,IAAI,CAACV,QAAQ,CAACW,OAAO,EAAE;MACrB;;IAEF,MAAMC,SAAS,GAAGZ,QAAQ,CAACW,OAAO;IAClC,MAAME,WAAW,GAAGD,SAAS,CAACE,YAAY;IAC1C,MAAMC,WAAW,GAAGd,QAAQ,CAACU,OAAO,GAAGV,QAAQ,CAACU,OAAO,CAACG,YAAY,GAAG,CAAC;IACxE,IAAI,CAACD,WAAW,EAAE;MAChB;;IAEF,MAAMG,eAAe,GAAIJ,SAAS,CAACK,UAA+B;IAC/DH,YAAY;IACf;IACA;IACA,MAAMI,GAAG,IAAAT,qBAAA,GAAGG,SAAS,CAACO,UAAU,qBAApBV,qBAAA,CAAuB,EAAAC,sBAAA,GAAAE,SAAS,CAACO,UAAU,qBAApBT,sBAAA,CAAsBX,MAAM,IAAG,CAAC,IAAI,CAAC,CAAC;IACtEoB,UAAoD;IACvD,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACJ,GAAG,CAAC,CAACK,GAAG,CAChC,CAAAC,EAAE,UAAAC,qBAAA,QAAI,EAAAA,qBAAA,GAAAD,EAAE,CAACE,qBAAqB,EAAE,qBAA1BD,qBAAA,CAA4B5C,KAAK,KAAI2C,EAAE,CAACG,WAAW,GAC1D;IACD,MAAM,CAACC,iBAAiB,EAAEC,mBAAmB,CAAC,GAAGlE,aAAa,CAAC;MAC7DkB,KAAK,EAAEC,QAAQ;MACfC,MAAM,EAAEC,SAAS,GAAG6B,WAAW,GAAGE,WAAW;MAC7Ce,WAAW,EAAEd,eAAe;MAC5Be,UAAU,EAAEX,MAAM,CAACY,MAAM,CAAC9D,GAAG,CAAC;MAC9BmC;KACD,CAAC;IACF;IACA;IACA,MAAM4B,UAAU,GAAGC,IAAI,CAACC,GAAG,CACzBnD,SAAS,EACT6C,mBAAmB,GAAGb,eAAe,GAAGX,aAAa,GAAGW,eAAe,CACxE;IACD7B,cAAc,CAAC;MACbyC,iBAAiB;MACjBC,mBAAmB;MACnB1C,cAAc;MACdN,KAAK,EAAEC,QAAQ;MACfC,MAAM,EAAEC,SAAS;MACjBiD,UAAU;MACVG,WAAW,EAAEpB,eAAe;MAC5BV,UAAU,EAAE2B,UAAU,GAAGpB,WAAW,GAAGE,WAAW;MAClDR,YAAY,EAAEa;KACf,CAAC;EACJ,CAAC,EAAE,CAACtC,QAAQ,EAAEE,SAAS,EAAEG,cAAc,EAAEkB,aAAa,CAAC,CAAC;EAExD,IAAIgC,UAAoC;EACxC,IAAIC,WAAqC;EACzC,IAAIC,WAAqC;EACzC,IAAIC,SAAmC;EAEvC,IAAIhC,SAAS,EAAE;IACb,MAAMiC,YAAY,gBAAGpF,YAAY,CAACiC,KAAK,EAAE,EAAEoD,GAAG,EAAE1C,QAAQ,EAAE,CAAC;IAC3D,MAAM2C,YAAY,GAAGnD,KAAK,iBAAInC,YAAY,CAACmC,KAAK,EAAE,EAAEkD,GAAG,EAAEzC,QAAQ,EAAE,CAAC;IACpEoC,UAAU,GACRvE,IAAA,UAEES,KAAK,EAAE;QACLQ,MAAM,EAAEC,SAAS;QACjB4D,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,QAAQ;QACpBC,eAAe,EAAE;OACjB,EACFC,IAAI,EAAC,cAAc,EAAA9D,QAAA;MAElB5B,YAAY,CACX6B,KAAK,EACL,EAAE6D,IAAI,EAAE,cAAc,EAAE,EACxBN,YAAY,EACZlD,KAAK,EACLoD,YAAY,CACb,IAfG;IAgBD,CACN;;EAGH;EACA,MAAMK,SAAS,GAAGzC,YAAY,oBAAZA,YAAY,CAAE0C,KAAK,CAAC,CAAC,EAAEvD,WAAW,CAAC;EAErD,IAAIsD,SAAS,IAAI1C,UAAU,EAAE;IAC3B,MAAM4C,QAAQ,GACZpF,IAAA,eAAAmB,QAAA;MACG+D,SAAS,CAACzB,GAAG,CAAC,CAAC4B,CAAC,EAAEC,CAAC;MAClB;MACAtF,IAAA,UAAae,KAAK,EAAEsE,CAAE,IAAZC,CAAY,CACvB,CAAC;IACM,CACX;IAEDd,WAAW,GACTtE,KAAA,UAEE0E,GAAG,EAAExC,eAAgB,EACrB3B,KAAK,EAAE;QACLqE,QAAQ,EAAE,QAAQ;QAClBE,eAAe,EAAE;OACjB,EACFC,IAAI,EAAC,cAAc,EAAA9D,QAAA;MAElB5B,YAAY,eACXA,YAAY,CAAC6B,KAAK,EAAE,EAAE6D,IAAI,EAAE,cAAc,EAAE,CAAC,EAC7C1E,cAAc,CAACa,KAAK,EAAET,gBAAgB,CAAC,EACvCyE,QAAQ,EACR5D,KAAK,CACN;MACAgD,WAAW,KAdR;IAeD,CACN;IAEDC,WAAW,GAAG/C,KAAK,IACjBxB,KAAA,UAEE0E,GAAG,EAAEvC,eAAgB,EACrB5B,KAAK,EAAE;QACLqE,QAAQ,EAAE,QAAQ;QAClBE,eAAe,EAAE;OACjB,EACFC,IAAI,EAAC,cAAc,EAAA9D,QAAA;MAElB5B,YAAY,eACXA,YAAY,CAAC6B,KAAK,EAAE,EAAE6D,IAAI,EAAE,cAAc,EAAE,CAAC,EAC7C1E,cAAc,CAACa,KAAK,EAAET,gBAAgB,CAAC,EACvCyE,QAAQ,EACR1D,KAAK,CACN;MACA+C,WAAW,KAdR;IAeD,CACN;IAED,MAAMc,QAAQ,GAAmCA,CAAAC,CAAC,KAAG;MACnD,IAAIpD,eAAe,CAACS,OAAO,EAAE;QAC3BT,eAAe,CAACS,OAAO,CAAC4C,UAAU,GAAGD,CAAC,CAACE,aAAa,CAACD,UAAU;;MAEjE,IAAIpD,eAAe,CAACQ,OAAO,EAAE;QAC3BR,eAAe,CAACQ,OAAO,CAAC4C,UAAU,GAAGD,CAAC,CAACE,aAAa,CAACD,UAAU;;IAEnE,CAAC;IACDf,SAAS,GACP1E,IAAA,UAEE4E,GAAG,EAAEtC,aAAc,EACnB7B,KAAK,EAAE;QACLQ,MAAM,EAAEuB,UAAU;QAClBsC,QAAQ,EAAE,MAAM;QAChBE,eAAe,EAAE;OACjB,EACFO,QAAQ,EAAEzE,MAAM,CAACiD,mBAAmB,GAAGwB,QAAQ,GAAGI,SAAU,EAC5DV,IAAI,EAAC,cAAc,EAAA9D,QAAA;MAElB5B,YAAY,eACXA,YAAY,CAAC6B,KAAK,EAAE,EAAE6D,IAAI,EAAE,cAAc,EAAE,CAAC,EAC7C1E,cAAc,CAACa,KAAK,EAAET,gBAAgB,CAAC,EACvCyE,QAAQ,EACR3D,KAAK,CACN,IAfG;IAgBD,CACN;;EAGH,OACEvB,KAAA,UACEO,KAAK,EAAE;MACLM,KAAK,EAAEC,QAAQ;MACfC,MAAM,EAAEH,MAAM,CAACqD,UAAU,IAAIjD,SAAS;MACtC4D,QAAQ,EAAE;KACV,EACFG,IAAI,EAAC,OAAO,EAAA9D,QAAA;IAEXqD,WAAW;IACXE,SAAS;IACTD,WAAW;IACXF,UAAU;EACR,CAAC;AAEV,CAACqB,aAAA,CAxOQ/E,UAAU;AA0OnB,SAASgF,WAAWA,CAAmBC,QAA0B;EAC/D,MAAM,EACJC,QAAQ,EACRC,KAAK,EAAE,EAAElF,MAAM,EAAE,EACjBmF,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,UAAU,EACVC,YAAY,GAAGA,CAAA,KAAMV,SAAS,EAC/B,GAAGG,QAAQ;EAEZ,MAAMzE,cAAc,GAAG1B,WAAW,CAChC,CAAC2G,IAA2B,KAAI;IAC9BP,QAAQ,CAAC;MACPzE,IAAI,EAAEnB,cAAc,CAACoG,cAAc;MACnCD;KACD,CAAC;EACJ,CAAC;EACD;EACA;EACA,CAACP,QAAQ,EAAEM,YAAY,EAAEH,IAAI,EAAEC,IAAI,CAAC,CACrC;EAED,MAAMK,aAAa,GAAGA,CAACC,QAAuB,KAAI;IAChD,MAAM,EAAE1F,KAAK,EAAEE,MAAM,EAAE,GACrBnB,cAAc,CAACuG,YAAY,EAAE,CAACA,YAAY,CAAC,CAAC,IAAIvF,MAAM;IACxD;IACA;IACA,MAAMM,KAAK,GAAG3B,OAAO,CAACgH,QAAQ,EAAE,CAACP,IAAI,EAAEC,IAAI,EAAEC,UAAU,CAAC,CAAC;IAEzD1G,eAAe,CAAC,MAAK;MACnB,IAAI,CAACqB,KAAK,IAAI,CAACE,MAAM,EAAE;QACrBI,cAAc,EAAE;;IAEpB,CAAC,EAAE,CAACN,KAAK,EAAEE,MAAM,CAAC,CAAC;IAEnB,IAAI,CAACF,KAAK,IAAI,CAACE,MAAM,EAAE;MACrB,OAAO,IAAI;;IAEb,IAAIgF,IAAI,CAAChE,MAAM,KAAK,CAAC,EAAE;MACrB,OAAOb,KAAK;;IAEd,OACEpB,IAAA,CAACa,UAAU,IACTE,KAAK,EAAEA,KAAM,EACbE,MAAM,EAAEA,MAAO,EACfH,MAAM,EAAEA,MAAO,EACfO,cAAc,EAAEA,cAAe,EAAAF,QAAA;MAE9BC,KAAK;IACI,CAAC;EAEjB,CAAC,CAACwE,aAAA,CA7BIY,aAAa,gEAEf1G,cAAc;EA6BlB4G,MAAM,CAACC,MAAM,CAACb,QAAQ,EAAE;IACtBzE,cAAc;IACduF,eAAe,EAAEJ;GAClB,CAAC;AACJ,CAACZ,aAAA,CA1DQC,WAAW;AA4DpB,eAAc,SAAUgB,SAASA,CAAmBC,KAAe;EACjEA,KAAK,CAACjB,WAAW,CAACkB,IAAI,CAAClB,WAAW,CAAC;EACnCiB,KAAK,CAACE,aAAa,CAACD,IAAI,CAAC,CAACE,QAAQ,EAAEC,OAAO,EAAEC,SAAS,KAAI;IACxD,MAAMC,MAAM,GAAGF,OAGd;IACD,IAAIE,MAAM,CAAC9F,IAAI,KAAKnB,cAAc,CAACkH,IAAI,EAAE;MACvC,OAAO;QACL,GAAGJ,QAAQ;QACXnG,MAAM,EAAE;UACN,IAAGqG,SAAS,oBAATA,SAAS,CAAErG,MAAM;;OAEvB;;IAEH,IAAIsG,MAAM,CAAC9F,IAAI,KAAKnB,cAAc,CAACoG,cAAc,EAAE;MACjD,MAAM,EAAED,IAAI,EAAE,GAAGc,MAAM;MACvB,IAAI,CAACd,IAAI,EAAE;QACT,OAAO,EAAE,GAAGW,QAAQ,EAAE;;MAExB,OAAO;QACL,GAAGA,QAAQ;QACXnG,MAAM,EAAE;UACN,IAAGqG,SAAS,oBAATA,SAAS,CAAErG,MAAM;UACpB,IAAGmG,QAAQ,oBAARA,QAAQ,CAAEnG,MAAM;UACnB,GAAGsG,MAAM,CAACd;;OAEb;;IAEH,OAAOW,QAAQ;EACjB,CAAC,CAAC;AACJ;AACAJ,SAAS,CAACS,UAAU,GAAG,WAAW,CAAC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAA9B,SAAA,MAAA4B,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA7XvBvH,cAGX,2GAAAoH,cAAA,CAAAG,QAAA,CAqCKtH,GAAG,gGAAAmH,cAAA,CAAAG,QAAA,CACHnH,cAAc,2GAAAgH,cAAA,CAAAG,QAAA,CASd/G,gBAAgB,6GAAA4G,cAAA,CAAAG,QAAA,CAKb7G,UAAU,uGAAA0G,cAAA,CAAAG,QAAA,CA0OV7B,WAAW,wGAAA0B,cAAA,CAAAG,QAAA,CA4DIb,SAAS,8HAAAc,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAhC,SAAA,CAAAgC,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}