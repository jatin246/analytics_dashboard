{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport { t } from '@superset-ui/core';\nimport PopoverDropdown from 'src/components/PopoverDropdown';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst dropdownOptions = [\n{\n  value: 'edit',\n  label: t('Edit')\n},\n{\n  value: 'preview',\n  label: t('Preview')\n}];\n\nexport default class MarkdownModeDropdown extends PureComponent {\n  render() {\n    const { id, value, onChange } = this.props;\n    return _jsx(PopoverDropdown, { id: id, options: dropdownOptions, value: value, onChange: onChange });\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(dropdownOptions, \"dropdownOptions\", \"/app/superset-frontend/src/dashboard/components/menu/MarkdownModeDropdown.tsx\");reactHotLoader.register(MarkdownModeDropdown, \"MarkdownModeDropdown\", \"/app/superset-frontend/src/dashboard/components/menu/MarkdownModeDropdown.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["PureComponent","t","PopoverDropdown","jsx","_jsx","dropdownOptions","value","label","MarkdownModeDropdown","render","id","onChange","props","options","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/dashboard/components/menu/MarkdownModeDropdown.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport { t } from '@superset-ui/core';\n\nimport PopoverDropdown, {\n  OnChangeHandler,\n} from 'src/components/PopoverDropdown';\n\ninterface MarkdownModeDropdownProps {\n  id: string;\n  value: string;\n  onChange: OnChangeHandler;\n}\n\nconst dropdownOptions = [\n  {\n    value: 'edit',\n    label: t('Edit'),\n  },\n  {\n    value: 'preview',\n    label: t('Preview'),\n  },\n];\n\nexport default class MarkdownModeDropdown extends PureComponent<MarkdownModeDropdownProps> {\n  render() {\n    const { id, value, onChange } = this.props;\n\n    return (\n      <PopoverDropdown\n        id={id}\n        options={dropdownOptions}\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,CAAC,QAAQ,mBAAmB;AAErC,OAAOC,eAEN,MAAM,gCAAgC,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAQxC,MAAMC,eAAe,GAAG;AACtB;EACEC,KAAK,EAAE,MAAM;EACbC,KAAK,EAAEN,CAAC,CAAC,MAAM;CAChB;AACD;EACEK,KAAK,EAAE,SAAS;EAChBC,KAAK,EAAEN,CAAC,CAAC,SAAS;CACnB,CACF;;AAED,eAAc,MAAOO,oBAAqB,SAAQR,aAAwC;EACxFS,MAAMA,CAAA;IACJ,MAAM,EAAEC,EAAE,EAAEJ,KAAK,EAAEK,QAAQ,EAAE,GAAG,IAAI,CAACC,KAAK;IAE1C,OACER,IAAA,CAACF,eAAe,IACdQ,EAAE,EAAEA,EAAG,EACPG,OAAO,EAAER,eAAgB,EACzBC,KAAK,EAAEA,KAAM,EACbK,QAAQ,EAAEA,QAAS,GACnB;EAEN,CAAC;EAAAG,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,G,CACF,mBAAAE,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAxBKjB,eAAe,sGAAAa,cAAA,CAAAI,QAAA,CAWAd,oBAAqB,mIAAAe,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}