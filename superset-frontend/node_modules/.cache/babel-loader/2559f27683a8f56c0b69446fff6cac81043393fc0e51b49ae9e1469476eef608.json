{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu from 'src/features/home/SubMenu';\nimport ActionsBar from 'src/components/ListView/ActionsBar';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport AnnotationLayerModal from 'src/features/annotationLayers/AnnotationLayerModal';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst PAGE_SIZE = 25;\nfunction AnnotationLayersList({ addDangerToast, addSuccessToast, user }) {\n  const { state: { loading, resourceCount: layersCount, resourceCollection: layers, bulkSelectEnabled }, hasPerm, fetchData, refreshData, toggleBulkSelect } = useListViewResource('annotation_layer', t('Annotation layers'), addDangerToast);\n  const [annotationLayerModalOpen, setAnnotationLayerModalOpen] = useState(false);\n  const [currentAnnotationLayer, setCurrentAnnotationLayer] = useState(null);\n  const [layerCurrentlyDeleting, setLayerCurrentlyDeleting] = useState(null);\n  const handleLayerDelete = ({ id, name }) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${id}`\n    }).then(() => {\n      refreshData();\n      setLayerCurrentlyDeleting(null);\n      addSuccessToast(t('Deleted: %s', name));\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', name, errMsg))));\n  };\n  const handleBulkLayerDelete = (layersToDelete) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/?q=${rison.encode(layersToDelete.map(({ id }) => id))}`\n    }).then(({ json = {} }) => {\n      refreshData();\n      addSuccessToast(json.message);\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting the selected layers: %s', errMsg))));\n  };\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  function handleAnnotationLayerEdit(layer) {\n    setCurrentAnnotationLayer(layer);\n    setAnnotationLayerModalOpen(true);\n  }\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'name',\n    Header: t('Name'),\n    Cell: __signature__(({ row: { original: { id, name } } }) => {\n      let hasHistory = true;\n      try {\n        useHistory();\n      }\n      catch (err) {\n        // If error is thrown, we know not to use <Link> in render\n        hasHistory = false;\n      }\n      if (hasHistory) {\n        return _jsx(Link, { to: `/annotationlayer/${id}/annotation`, children: name });\n      }\n      return _jsx(\"a\", { href: `/annotationlayer/${id}/annotation`, children: name });\n    }, \"useHistory{}\", () => [useHistory])\n  },\n  {\n    accessor: 'descr',\n    Header: t('Description')\n  },\n  {\n    Cell: ({ row: { original: { changed_on_delta_humanized: changedOn, changed_by: changedBy } } }) => _jsx(ModifiedInfo, { date: changedOn, user: changedBy }),\n    Header: t('Last modified'),\n    accessor: 'changed_on',\n    size: 'xl'\n  },\n  {\n    Cell: ({ row: { original } }) => {\n      const handleEdit = () => handleAnnotationLayerEdit(original);\n      const handleDelete = () => setLayerCurrentlyDeleting(original);\n      const actions = [\n      canEdit ?\n      {\n        label: 'edit-action',\n        tooltip: t('Edit template'),\n        placement: 'bottom',\n        icon: 'Edit',\n        onClick: handleEdit\n      } :\n      null,\n      canDelete ?\n      {\n        label: 'delete-action',\n        tooltip: t('Delete template'),\n        placement: 'bottom',\n        icon: 'Trash',\n        onClick: handleDelete\n      } :\n      null].\n      filter((item) => !!item);\n      return _jsx(ActionsBar, { actions: actions });\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    disableSortBy: true,\n    hidden: !canEdit && !canDelete,\n    size: 'xl'\n  },\n  {\n    accessor: QueryObjectColumns.ChangedBy,\n    hidden: true\n  }],\n  [canDelete, canCreate]);\n  const subMenuButtons = [];\n  if (canCreate) {\n    subMenuButtons.push({\n      name: _jsxs(_Fragment, { children: [\n        _jsx(\"i\", { className: \"fa fa-plus\" }), \" \", t('Annotation layer')] }\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAnnotationLayerEdit(null);\n      }\n    });\n  }\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary'\n    });\n  }\n  const filters = useMemo(() => [\n  {\n    Header: t('Name'),\n    key: 'search',\n    id: 'name',\n    input: 'search',\n    operator: FilterOperator.Contains\n  },\n  {\n    Header: t('Changed by'),\n    key: 'changed_by',\n    id: 'changed_by',\n    input: 'select',\n    operator: FilterOperator.RelationOneMany,\n    unfilteredLabel: t('All'),\n    fetchSelects: createFetchRelated('annotation_layer', 'changed_by', createErrorHandler((errMsg) => t('An error occurred while fetching dataset datasource values: %s', errMsg)), user),\n    paginate: true\n  }],\n  []);\n  const emptyState = {\n    title: t('No annotation layers yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAnnotationLayerEdit(null),\n    buttonText: _jsxs(_Fragment, { children: [\n      _jsx(\"i\", { className: \"fa fa-plus\" }), \" \", t('Annotation layer')] }\n    )\n  };\n  const onLayerAdd = (id) => {\n    window.location.href = `/annotationlayer/${id}/annotation`;\n  };\n  const onModalHide = () => {\n    refreshData();\n    setAnnotationLayerModalOpen(false);\n  };\n  return _jsxs(_Fragment, { children: [\n    _jsx(SubMenu, { name: t('Annotation layers'), buttons: subMenuButtons }),\n    _jsx(AnnotationLayerModal, { addDangerToast: addDangerToast, layer: currentAnnotationLayer, onLayerAdd: onLayerAdd, onHide: onModalHide, show: annotationLayerModalOpen }),\n    layerCurrentlyDeleting && _jsx(DeleteModal, { description: t('This action will permanently delete the layer.'), onConfirm: () => {\n        if (layerCurrentlyDeleting) {\n          handleLayerDelete(layerCurrentlyDeleting);\n        }\n      }, onHide: () => setLayerCurrentlyDeleting(null), open: true, title: t('Delete Layer?') }),\n    _jsx(ConfirmStatusChange, { title: t('Please confirm'), description: t('Are you sure you want to delete the selected layers?'), onConfirm: handleBulkLayerDelete, children:\n      (confirmDelete) => {\n        const bulkActions = canDelete ?\n        [\n        {\n          key: 'delete',\n          name: t('Delete'),\n          onSelect: confirmDelete,\n          type: 'danger'\n        }] :\n\n        [];\n        return _jsx(ListView, { className: \"annotation-layers-list-view\", columns: columns, count: layersCount, data: layers, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, pageSize: PAGE_SIZE, bulkActions: bulkActions, bulkSelectEnabled: bulkSelectEnabled, disableBulkSelect: toggleBulkSelect, addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, emptyState: emptyState, refreshData: refreshData });\n      } }\n    )] }\n  );\n}__signature__(AnnotationLayersList, \"useListViewResource{{ state: { loading, resourceCount: layersCount, resourceCollection: layers, bulkSelectEnabled, }, hasPerm, fetchData, refreshData, toggleBulkSelect, }}\\nuseState{[annotationLayerModalOpen, setAnnotationLayerModalOpen](false)}\\nuseState{[currentAnnotationLayer, setCurrentAnnotationLayer](null)}\\nuseState{[layerCurrentlyDeleting, setLayerCurrentlyDeleting](null)}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useListViewResource]);const _default =\nwithToasts(AnnotationLayersList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/app/superset-frontend/src/pages/AnnotationLayerList/index.tsx\");reactHotLoader.register(AnnotationLayersList, \"AnnotationLayersList\", \"/app/superset-frontend/src/pages/AnnotationLayerList/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/pages/AnnotationLayerList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","useState","rison","t","SupersetClient","Link","useHistory","useListViewResource","createFetchRelated","createErrorHandler","withToasts","SubMenu","ActionsBar","ListView","FilterOperator","DeleteModal","ConfirmStatusChange","AnnotationLayerModal","ModifiedInfo","QueryObjectColumns","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PAGE_SIZE","AnnotationLayersList","addDangerToast","addSuccessToast","user","state","loading","resourceCount","layersCount","resourceCollection","layers","bulkSelectEnabled","hasPerm","fetchData","refreshData","toggleBulkSelect","annotationLayerModalOpen","setAnnotationLayerModalOpen","currentAnnotationLayer","setCurrentAnnotationLayer","layerCurrentlyDeleting","setLayerCurrentlyDeleting","handleLayerDelete","id","name","delete","endpoint","then","errMsg","handleBulkLayerDelete","layersToDelete","encode","map","json","message","canCreate","canEdit","canDelete","handleAnnotationLayerEdit","layer","initialSort","desc","columns","accessor","Header","Cell","__signature__","row","original","hasHistory","err","to","children","href","changed_on_delta_humanized","changedOn","changed_by","changedBy","date","size","handleEdit","handleDelete","actions","label","tooltip","placement","icon","onClick","filter","item","disableSortBy","hidden","ChangedBy","subMenuButtons","push","className","buttonStyle","filters","key","input","operator","Contains","RelationOneMany","unfilteredLabel","fetchSelects","paginate","emptyState","title","image","buttonAction","buttonText","onLayerAdd","window","location","onModalHide","buttons","onHide","show","description","onConfirm","open","confirmDelete","bulkActions","onSelect","type","count","data","pageSize","disableBulkSelect","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/pages/AnnotationLayerList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useMemo, useState } from 'react';\nimport rison from 'rison';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createFetchRelated, createErrorHandler } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport ActionsBar, { ActionProps } from 'src/components/ListView/ActionsBar';\nimport ListView, {\n  ListViewProps,\n  Filters,\n  FilterOperator,\n} from 'src/components/ListView';\nimport DeleteModal from 'src/components/DeleteModal';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport AnnotationLayerModal from 'src/features/annotationLayers/AnnotationLayerModal';\nimport { AnnotationLayerObject } from 'src/features/annotationLayers/types';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst PAGE_SIZE = 25;\n\ninterface AnnotationLayersListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nfunction AnnotationLayersList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: AnnotationLayersListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: layersCount,\n      resourceCollection: layers,\n      bulkSelectEnabled,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n    toggleBulkSelect,\n  } = useListViewResource<AnnotationLayerObject>(\n    'annotation_layer',\n    t('Annotation layers'),\n    addDangerToast,\n  );\n\n  const [annotationLayerModalOpen, setAnnotationLayerModalOpen] =\n    useState<boolean>(false);\n  const [currentAnnotationLayer, setCurrentAnnotationLayer] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const [layerCurrentlyDeleting, setLayerCurrentlyDeleting] =\n    useState<AnnotationLayerObject | null>(null);\n\n  const handleLayerDelete = ({ id, name }: AnnotationLayerObject) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        setLayerCurrentlyDeleting(null);\n        addSuccessToast(t('Deleted: %s', name));\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', name, errMsg)),\n      ),\n    );\n  };\n\n  const handleBulkLayerDelete = (layersToDelete: AnnotationLayerObject[]) => {\n    SupersetClient.delete({\n      endpoint: `/api/v1/annotation_layer/?q=${rison.encode(\n        layersToDelete.map(({ id }) => id),\n      )}`,\n    }).then(\n      ({ json = {} }) => {\n        refreshData();\n        addSuccessToast(json.message);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(\n          t('There was an issue deleting the selected layers: %s', errMsg),\n        ),\n      ),\n    );\n  };\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n\n  function handleAnnotationLayerEdit(layer: AnnotationLayerObject | null) {\n    setCurrentAnnotationLayer(layer);\n    setAnnotationLayerModalOpen(true);\n  }\n\n  const initialSort = [{ id: 'name', desc: true }];\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'name',\n        Header: t('Name'),\n        Cell: ({\n          row: {\n            original: { id, name },\n          },\n        }: any) => {\n          let hasHistory = true;\n\n          try {\n            useHistory();\n          } catch (err) {\n            // If error is thrown, we know not to use <Link> in render\n            hasHistory = false;\n          }\n\n          if (hasHistory) {\n            return <Link to={`/annotationlayer/${id}/annotation`}>{name}</Link>;\n          }\n\n          return <a href={`/annotationlayer/${id}/annotation`}>{name}</a>;\n        },\n      },\n      {\n        accessor: 'descr',\n        Header: t('Description'),\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_on_delta_humanized: changedOn,\n              changed_by: changedBy,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () => handleAnnotationLayerEdit(original);\n          const handleDelete = () => setLayerCurrentlyDeleting(original);\n\n          const actions = [\n            canEdit\n              ? {\n                  label: 'edit-action',\n                  tooltip: t('Edit template'),\n                  placement: 'bottom',\n                  icon: 'Edit',\n                  onClick: handleEdit,\n                }\n              : null,\n            canDelete\n              ? {\n                  label: 'delete-action',\n                  tooltip: t('Delete template'),\n                  placement: 'bottom',\n                  icon: 'Trash',\n                  onClick: handleDelete,\n                }\n              : null,\n          ].filter(item => !!item);\n\n          return <ActionsBar actions={actions as ActionProps[]} />;\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        disableSortBy: true,\n        hidden: !canEdit && !canDelete,\n        size: 'xl',\n      },\n      {\n        accessor: QueryObjectColumns.ChangedBy,\n        hidden: true,\n      },\n    ],\n    [canDelete, canCreate],\n  );\n\n  const subMenuButtons: SubMenuProps['buttons'] = [];\n\n  if (canCreate) {\n    subMenuButtons.push({\n      name: (\n        <>\n          <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n        </>\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        handleAnnotationLayerEdit(null);\n      },\n    });\n  }\n\n  if (canDelete) {\n    subMenuButtons.push({\n      name: t('Bulk select'),\n      onClick: toggleBulkSelect,\n      buttonStyle: 'secondary',\n    });\n  }\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'name',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Changed by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'annotation_layer',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ],\n    [],\n  );\n\n  const emptyState = {\n    title: t('No annotation layers yet'),\n    image: 'filter-results.svg',\n    buttonAction: () => handleAnnotationLayerEdit(null),\n    buttonText: (\n      <>\n        <i className=\"fa fa-plus\" /> {t('Annotation layer')}\n      </>\n    ),\n  };\n\n  const onLayerAdd = (id?: number) => {\n    window.location.href = `/annotationlayer/${id}/annotation`;\n  };\n\n  const onModalHide = () => {\n    refreshData();\n    setAnnotationLayerModalOpen(false);\n  };\n\n  return (\n    <>\n      <SubMenu name={t('Annotation layers')} buttons={subMenuButtons} />\n      <AnnotationLayerModal\n        addDangerToast={addDangerToast}\n        layer={currentAnnotationLayer}\n        onLayerAdd={onLayerAdd}\n        onHide={onModalHide}\n        show={annotationLayerModalOpen}\n      />\n      {layerCurrentlyDeleting && (\n        <DeleteModal\n          description={t('This action will permanently delete the layer.')}\n          onConfirm={() => {\n            if (layerCurrentlyDeleting) {\n              handleLayerDelete(layerCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setLayerCurrentlyDeleting(null)}\n          open\n          title={t('Delete Layer?')}\n        />\n      )}\n      <ConfirmStatusChange\n        title={t('Please confirm')}\n        description={t('Are you sure you want to delete the selected layers?')}\n        onConfirm={handleBulkLayerDelete}\n      >\n        {confirmDelete => {\n          const bulkActions: ListViewProps['bulkActions'] = canDelete\n            ? [\n                {\n                  key: 'delete',\n                  name: t('Delete'),\n                  onSelect: confirmDelete,\n                  type: 'danger',\n                },\n              ]\n            : [];\n\n          return (\n            <ListView<AnnotationLayerObject>\n              className=\"annotation-layers-list-view\"\n              columns={columns}\n              count={layersCount}\n              data={layers}\n              fetchData={fetchData}\n              filters={filters}\n              initialSort={initialSort}\n              loading={loading}\n              pageSize={PAGE_SIZE}\n              bulkActions={bulkActions}\n              bulkSelectEnabled={bulkSelectEnabled}\n              disableBulkSelect={toggleBulkSelect}\n              addDangerToast={addDangerToast}\n              addSuccessToast={addSuccessToast}\n              emptyState={emptyState}\n              refreshData={refreshData}\n            />\n          );\n        }}\n      </ConfirmStatusChange>\n    </>\n  );\n}\n\nexport default withToasts(AnnotationLayersList);\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,CAAC,EAAEC,cAAc,QAAQ,mBAAmB;AACrD,SAASC,IAAI,EAAEC,UAAU,QAAQ,kBAAkB;AACnD,SAASC,mBAAmB,QAAQ,sBAAsB;AAC1D,SAASC,kBAAkB,EAAEC,kBAAkB,QAAQ,sBAAsB;AAC7E,OAAOC,UAAU,MAAM,yCAAyC;AAChE,OAAOC,OAAyB,MAAM,2BAA2B;AACjE,OAAOC,UAA2B,MAAM,oCAAoC;AAC5E,OAAOC,QAAQ,IAGbC,cAAc,QACT,yBAAyB;AAChC,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,mBAAmB,MAAM,oCAAoC;AACpE,OAAOC,oBAAoB,MAAM,oDAAoD;AAErF,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,kBAAkB,QAAQ,sBAAsB,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,QAAA,IAAAC,SAAA,EAAAC,IAAA,IAAAC,KAAA;AAE1D,MAAMC,SAAS,GAAG,EAAE;AAYpB,SAASC,oBAAoBA,CAAC,EAC5BC,cAAc,EACdC,eAAe,EACfC,IAAI,EACsB;EAC1B,MAAM,EACJC,KAAK,EAAE,EACLC,OAAO,EACPC,aAAa,EAAEC,WAAW,EAC1BC,kBAAkB,EAAEC,MAAM,EAC1BC,iBAAiB,EAClB,EACDC,OAAO,EACPC,SAAS,EACTC,WAAW,EACXC,gBAAgB,EACjB,GAAGlC,mBAAmB,CACrB,kBAAkB,EAClBJ,CAAC,CAAC,mBAAmB,CAAC,EACtByB,cAAc,CACf;EAED,MAAM,CAACc,wBAAwB,EAAEC,2BAA2B,CAAC,GAC3D1C,QAAQ,CAAU,KAAK,CAAC;EAC1B,MAAM,CAAC2C,sBAAsB,EAAEC,yBAAyB,CAAC,GACvD5C,QAAQ,CAA+B,IAAI,CAAC;EAE9C,MAAM,CAAC6C,sBAAsB,EAAEC,yBAAyB,CAAC,GACvD9C,QAAQ,CAA+B,IAAI,CAAC;EAE9C,MAAM+C,iBAAiB,GAAGA,CAAC,EAAEC,EAAE,EAAEC,IAAI,EAAyB,KAAI;IAChE9C,cAAc,CAAC+C,MAAM,CAAC;MACpBC,QAAQ,EAAE,4BAA4BH,EAAE;KACzC,CAAC,CAACI,IAAI,CACL,MAAK;MACHb,WAAW,EAAE;MACbO,yBAAyB,CAAC,IAAI,CAAC;MAC/BlB,eAAe,CAAC1B,CAAC,CAAC,aAAa,EAAE+C,IAAI,CAAC,CAAC;IACzC,CAAC,EACDzC,kBAAkB,CAAC,CAAA6C,MAAM,KACvB1B,cAAc,CAACzB,CAAC,CAAC,oCAAoC,EAAE+C,IAAI,EAAEI,MAAM,CAAC,CAAC,CACtE,CACF;EACH,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAACC,cAAuC,KAAI;IACxEpD,cAAc,CAAC+C,MAAM,CAAC;MACpBC,QAAQ,EAAE,+BAA+BlD,KAAK,CAACuD,MAAM,CACnDD,cAAc,CAACE,GAAG,CAAC,CAAC,EAAET,EAAE,EAAE,KAAKA,EAAE,CAAC,CACnC;KACF,CAAC,CAACI,IAAI,CACL,CAAC,EAAEM,IAAI,GAAG,EAAE,EAAE,KAAI;MAChBnB,WAAW,EAAE;MACbX,eAAe,CAAC8B,IAAI,CAACC,OAAO,CAAC;IAC/B,CAAC,EACDnD,kBAAkB,CAAC,CAAA6C,MAAM,KACvB1B,cAAc,CACZzB,CAAC,CAAC,qDAAqD,EAAEmD,MAAM,CAAC,CACjE,CACF,CACF;EACH,CAAC;EAED,MAAMO,SAAS,GAAGvB,OAAO,CAAC,WAAW,CAAC;EACtC,MAAMwB,OAAO,GAAGxB,OAAO,CAAC,WAAW,CAAC;EACpC,MAAMyB,SAAS,GAAGzB,OAAO,CAAC,WAAW,CAAC;EAEtC,SAAS0B,yBAAyBA,CAACC,KAAmC;IACpEpB,yBAAyB,CAACoB,KAAK,CAAC;IAChCtB,2BAA2B,CAAC,IAAI,CAAC;EACnC;EAEA,MAAMuB,WAAW,GAAG,CAAC,EAAEjB,EAAE,EAAE,MAAM,EAAEkB,IAAI,EAAE,IAAI,EAAE,CAAC;EAChD,MAAMC,OAAO,GAAGpE,OAAO,CACrB,MAAM;EACJ;IACEqE,QAAQ,EAAE,MAAM;IAChBC,MAAM,EAAEnE,CAAC,CAAC,MAAM,CAAC;IACjBoE,IAAI,EAAAC,aAAA,CAAE,CAAC,EACLC,GAAG,EAAE,EACHC,QAAQ,EAAE,EAAEzB,EAAE,EAAEC,IAAI,EAAE,EACvB,EACG,KAAI;MACR,IAAIyB,UAAU,GAAG,IAAI;MAErB,IAAI;QACFrE,UAAU,EAAE;;MACZ,OAAOsE,GAAG,EAAE;QACZ;QACAD,UAAU,GAAG,KAAK;;MAGpB,IAAIA,UAAU,EAAE;QACd,OAAOtD,IAAA,CAAChB,IAAI,IAACwE,EAAE,EAAE,oBAAoB5B,EAAE,aAAc,EAAA6B,QAAA,EAAE5B,IAAI,EAAO,CAAC;;MAGrE,OAAO7B,IAAA,QAAG0D,IAAI,EAAE,oBAAoB9B,EAAE,aAAc,EAAA6B,QAAA,EAAE5B,IAAI,EAAI,CAAC;IACjE,CAAC,yBAXG5C,UAAU;GAYf;EACD;IACE+D,QAAQ,EAAE,OAAO;IACjBC,MAAM,EAAEnE,CAAC,CAAC,aAAa;GACxB;EACD;IACEoE,IAAI,EAAEA,CAAC,EACLE,GAAG,EAAE,EACHC,QAAQ,EAAE,EACRM,0BAA0B,EAAEC,SAAS,EACrCC,UAAU,EAAEC,SAAS,EACtB,EACF,EACG,KAAK9D,IAAA,CAACH,YAAY,IAACkE,IAAI,EAAEH,SAAU,EAACnD,IAAI,EAAEqD,SAAU,GAAG;IAC7Db,MAAM,EAAEnE,CAAC,CAAC,eAAe,CAAC;IAC1BkE,QAAQ,EAAE,YAAY;IACtBgB,IAAI,EAAE;GACP;EACD;IACEd,IAAI,EAAEA,CAAC,EAAEE,GAAG,EAAE,EAAEC,QAAQ,EAAE,EAAO,KAAI;MACnC,MAAMY,UAAU,GAAGA,CAAA,KAAMtB,yBAAyB,CAACU,QAAQ,CAAC;MAC5D,MAAMa,YAAY,GAAGA,CAAA,KAAMxC,yBAAyB,CAAC2B,QAAQ,CAAC;MAE9D,MAAMc,OAAO,GAAG;MACd1B,OAAO;MACH;QACE2B,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAEvF,CAAC,CAAC,eAAe,CAAC;QAC3BwF,SAAS,EAAE,QAAQ;QACnBC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAEP;OACV;MACD,IAAI;MACRvB,SAAS;MACL;QACE0B,KAAK,EAAE,eAAe;QACtBC,OAAO,EAAEvF,CAAC,CAAC,iBAAiB,CAAC;QAC7BwF,SAAS,EAAE,QAAQ;QACnBC,IAAI,EAAE,OAAO;QACbC,OAAO,EAAEN;OACV;MACD,IAAI,CACT;MAACO,MAAM,CAAC,CAAAC,IAAI,KAAI,CAAC,CAACA,IAAI,CAAC;MAExB,OAAO1E,IAAA,CAACT,UAAU,IAAC4E,OAAO,EAAEA,OAAyB,GAAG;IAC1D,CAAC;IACDlB,MAAM,EAAEnE,CAAC,CAAC,SAAS,CAAC;IACpB8C,EAAE,EAAE,SAAS;IACb+C,aAAa,EAAE,IAAI;IACnBC,MAAM,EAAE,CAACnC,OAAO,IAAI,CAACC,SAAS;IAC9BsB,IAAI,EAAE;GACP;EACD;IACEhB,QAAQ,EAAElD,kBAAkB,CAAC+E,SAAS;IACtCD,MAAM,EAAE;GACT,CACF;EACD,CAAClC,SAAS,EAAEF,SAAS,CAAC,CACvB;EAED,MAAMsC,cAAc,GAA4B,EAAE;EAElD,IAAItC,SAAS,EAAE;IACbsC,cAAc,CAACC,IAAI,CAAC;MAClBlD,IAAI,EACFzB,KAAA,CAAAF,SAAA,IAAAuD,QAAA;QACEzD,IAAA,QAAGgF,SAAS,EAAC,YAAY,GAAI,OAAClG,CAAC,CAAC,kBAAkB,CAAC;MACrD,CACD;MACDmG,WAAW,EAAE,SAAS;MACtBT,OAAO,EAAEA,CAAA,KAAK;QACZ7B,yBAAyB,CAAC,IAAI,CAAC;MACjC;KACD,CAAC;;EAGJ,IAAID,SAAS,EAAE;IACboC,cAAc,CAACC,IAAI,CAAC;MAClBlD,IAAI,EAAE/C,CAAC,CAAC,aAAa,CAAC;MACtB0F,OAAO,EAAEpD,gBAAgB;MACzB6D,WAAW,EAAE;KACd,CAAC;;EAGJ,MAAMC,OAAO,GAAYvG,OAAO,CAC9B,MAAM;EACJ;IACEsE,MAAM,EAAEnE,CAAC,CAAC,MAAM,CAAC;IACjBqG,GAAG,EAAE,QAAQ;IACbvD,EAAE,EAAE,MAAM;IACVwD,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAE5F,cAAc,CAAC6F;GAC1B;EACD;IACErC,MAAM,EAAEnE,CAAC,CAAC,YAAY,CAAC;IACvBqG,GAAG,EAAE,YAAY;IACjBvD,EAAE,EAAE,YAAY;IAChBwD,KAAK,EAAE,QAAQ;IACfC,QAAQ,EAAE5F,cAAc,CAAC8F,eAAe;IACxCC,eAAe,EAAE1G,CAAC,CAAC,KAAK,CAAC;IACzB2G,YAAY,EAAEtG,kBAAkB,CAC9B,kBAAkB,EAClB,YAAY,EACZC,kBAAkB,CAAC,CAAA6C,MAAM,KACvBnD,CAAC,CACC,gEAAgE,EAChEmD,MAAM,CACP,CACF,EACDxB,IAAI,CACL;IACDiF,QAAQ,EAAE;GACX,CACF;EACD,EAAE,CACH;EAED,MAAMC,UAAU,GAAG;IACjBC,KAAK,EAAE9G,CAAC,CAAC,0BAA0B,CAAC;IACpC+G,KAAK,EAAE,oBAAoB;IAC3BC,YAAY,EAAEA,CAAA,KAAMnD,yBAAyB,CAAC,IAAI,CAAC;IACnDoD,UAAU,EACR3F,KAAA,CAAAF,SAAA,IAAAuD,QAAA;MACEzD,IAAA,QAAGgF,SAAS,EAAC,YAAY,GAAI,OAAClG,CAAC,CAAC,kBAAkB,CAAC;IACrD;GAEH;EAED,MAAMkH,UAAU,GAAGA,CAACpE,EAAW,KAAI;IACjCqE,MAAM,CAACC,QAAQ,CAACxC,IAAI,GAAG,oBAAoB9B,EAAE,aAAa;EAC5D,CAAC;EAED,MAAMuE,WAAW,GAAGA,CAAA,KAAK;IACvBhF,WAAW,EAAE;IACbG,2BAA2B,CAAC,KAAK,CAAC;EACpC,CAAC;EAED,OACElB,KAAA,CAAAF,SAAA,IAAAuD,QAAA;IACEzD,IAAA,CAACV,OAAO,IAACuC,IAAI,EAAE/C,CAAC,CAAC,mBAAmB,CAAE,EAACsH,OAAO,EAAEtB,cAAe,GAC/D;IAAA9E,IAAA,CAACJ,oBAAoB,IACnBW,cAAc,EAAEA,cAAe,EAC/BqC,KAAK,EAAErB,sBAAuB,EAC9ByE,UAAU,EAAEA,UAAW,EACvBK,MAAM,EAAEF,WAAY,EACpBG,IAAI,EAAEjF,wBAAyB,GAEjC;IAACI,sBAAsB,IACrBzB,IAAA,CAACN,WAAW,IACV6G,WAAW,EAAEzH,CAAC,CAAC,gDAAgD,CAAE,EACjE0H,SAAS,EAAEA,CAAA,KAAK;QACd,IAAI/E,sBAAsB,EAAE;UAC1BE,iBAAiB,CAACF,sBAAsB,CAAC;;MAE7C,CAAE,EACF4E,MAAM,EAAEA,CAAA,KAAM3E,yBAAyB,CAAC,IAAI,CAAE,EAC9C+E,IAAI,QACJb,KAAK,EAAE9G,CAAC,CAAC,eAAe,CAAE,GAE7B;IACDkB,IAAA,CAACL,mBAAmB,IAClBiG,KAAK,EAAE9G,CAAC,CAAC,gBAAgB,CAAE,EAC3ByH,WAAW,EAAEzH,CAAC,CAAC,sDAAsD,CAAE,EACvE0H,SAAS,EAAEtE,qBAAsB,EAAAuB,QAAA;MAEhCA,CAAAiD,aAAa,KAAG;QACf,MAAMC,WAAW,GAAiCjE,SAAS;QACvD;QACE;UACEyC,GAAG,EAAE,QAAQ;UACbtD,IAAI,EAAE/C,CAAC,CAAC,QAAQ,CAAC;UACjB8H,QAAQ,EAAEF,aAAa;UACvBG,IAAI,EAAE;SACP,CACF;;QACD,EAAE;QAEN,OACE7G,IAAA,CAACR,QAAQ,IACPwF,SAAS,EAAC,6BAA6B,EACvCjC,OAAO,EAAEA,OAAQ,EACjB+D,KAAK,EAAEjG,WAAY,EACnBkG,IAAI,EAAEhG,MAAO,EACbG,SAAS,EAAEA,SAAU,EACrBgE,OAAO,EAAEA,OAAQ,EACjBrC,WAAW,EAAEA,WAAY,EACzBlC,OAAO,EAAEA,OAAQ,EACjBqG,QAAQ,EAAE3G,SAAU,EACpBsG,WAAW,EAAEA,WAAY,EACzB3F,iBAAiB,EAAEA,iBAAkB,EACrCiG,iBAAiB,EAAE7F,gBAAiB,EACpCb,cAAc,EAAEA,cAAe,EAC/BC,eAAe,EAAEA,eAAgB,EACjCmF,UAAU,EAAEA,UAAW,EACvBxE,WAAW,EAAEA,WAAY,GACzB;MAEN,CAAC;IACkB,CACvB;EAAA,CAAG;AAEP,CAACgC,aAAA,CA3SQ7C,oBAAoB,gbAgBvBpB,mBAAmB,SAAAgI,QAAA;AA6RV7H,UAAU,CAACiB,oBAAoB,CAAC,CAA/C,eAAA4G,QAAA,CAAgD,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAzT1ClH,SAAS,iFAAA8G,cAAA,CAAAI,QAAA,CAYNjH,oBAAoB,4FAAA6G,cAAA,CAAAI,QAAA,CAAAL,QAAA,uGAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}