{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { getStandardizedControls } from '@superset-ui/chart-controls';\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['series'],\n    ['metric'],\n    ['adhoc_filters'],\n    ['row_limit'],\n    ['sort_by_metric']]\n\n  },\n  {\n    label: t('Options'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'size_from',\n      config: {\n        type: 'TextControl',\n        isInt: true,\n        label: t('Minimum Font Size'),\n        renderTrigger: true,\n        default: 10,\n        description: t('Font size for the smallest value in the list')\n      }\n    },\n    {\n      name: 'size_to',\n      config: {\n        type: 'TextControl',\n        isInt: true,\n        label: t('Maximum Font Size'),\n        renderTrigger: true,\n        default: 70,\n        description: t('Font size for the biggest value in the list')\n      }\n    }],\n\n    [\n    {\n      name: 'rotation',\n      config: {\n        type: 'SelectControl',\n        label: t('Word Rotation'),\n        choices: [\n        ['random', t('random')],\n        ['flat', t('flat')],\n        ['square', t('square')]],\n\n        renderTrigger: true,\n        default: 'square',\n        clearable: false,\n        description: t('Rotation to apply to words in the cloud')\n      }\n    }],\n\n    ['color_scheme']]\n\n  }],\n\n  controlOverrides: {\n    series: {\n      validators: [validateNonEmpty],\n      clearable: false\n    },\n    row_limit: {\n      default: 100\n    }\n  },\n  formDataOverrides: (formData) => ({\n    ...formData,\n    series: getStandardizedControls().shiftColumn(),\n    metric: getStandardizedControls().shiftMetric()\n  })\n};const _default =\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(config, \"config\", \"/app/superset-frontend/plugins/plugin-chart-word-cloud/src/plugin/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/plugins/plugin-chart-word-cloud/src/plugin/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","validateNonEmpty","getStandardizedControls","config","controlPanelSections","label","expanded","controlSetRows","name","type","isInt","renderTrigger","default","description","choices","clearable","controlOverrides","series","validators","row_limit","formDataOverrides","formData","shiftColumn","metric","shiftMetric","_default","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/plugin-chart-word-cloud/src/plugin/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  getStandardizedControls,\n} from '@superset-ui/chart-controls';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['series'],\n        ['metric'],\n        ['adhoc_filters'],\n        ['row_limit'],\n        ['sort_by_metric'],\n      ],\n    },\n    {\n      label: t('Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'size_from',\n            config: {\n              type: 'TextControl',\n              isInt: true,\n              label: t('Minimum Font Size'),\n              renderTrigger: true,\n              default: 10,\n              description: t('Font size for the smallest value in the list'),\n            },\n          },\n          {\n            name: 'size_to',\n            config: {\n              type: 'TextControl',\n              isInt: true,\n              label: t('Maximum Font Size'),\n              renderTrigger: true,\n              default: 70,\n              description: t('Font size for the biggest value in the list'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'rotation',\n            config: {\n              type: 'SelectControl',\n              label: t('Word Rotation'),\n              choices: [\n                ['random', t('random')],\n                ['flat', t('flat')],\n                ['square', t('square')],\n              ],\n              renderTrigger: true,\n              default: 'square',\n              clearable: false,\n              description: t('Rotation to apply to words in the cloud'),\n            },\n          },\n        ],\n        ['color_scheme'],\n      ],\n    },\n  ],\n  controlOverrides: {\n    series: {\n      validators: [validateNonEmpty],\n      clearable: false,\n    },\n    row_limit: {\n      default: 100,\n    },\n  },\n  formDataOverrides: formData => ({\n    ...formData,\n    series: getStandardizedControls().shiftColumn(),\n    metric: getStandardizedControls().shiftMetric(),\n  }),\n};\n\nexport default config;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,CAAC,EAAEC,gBAAgB,QAAQ,mBAAmB;AACvD,SAEEC,uBAAuB,QAClB,6BAA6B;AAEpC,MAAMC,MAAM,GAAuB;EACjCC,oBAAoB,EAAE;EACpB;IACEC,KAAK,EAAEL,CAAC,CAAC,OAAO,CAAC;IACjBM,QAAQ,EAAE,IAAI;IACdC,cAAc,EAAE;IACd,CAAC,QAAQ,CAAC;IACV,CAAC,QAAQ,CAAC;IACV,CAAC,eAAe,CAAC;IACjB,CAAC,WAAW,CAAC;IACb,CAAC,gBAAgB,CAAC;;GAErB;EACD;IACEF,KAAK,EAAEL,CAAC,CAAC,SAAS,CAAC;IACnBM,QAAQ,EAAE,IAAI;IACdC,cAAc,EAAE;IACd;IACE;MACEC,IAAI,EAAE,WAAW;MACjBL,MAAM,EAAE;QACNM,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,IAAI;QACXL,KAAK,EAAEL,CAAC,CAAC,mBAAmB,CAAC;QAC7BW,aAAa,EAAE,IAAI;QACnBC,OAAO,EAAE,EAAE;QACXC,WAAW,EAAEb,CAAC,CAAC,8CAA8C;;KAEhE;IACD;MACEQ,IAAI,EAAE,SAAS;MACfL,MAAM,EAAE;QACNM,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,IAAI;QACXL,KAAK,EAAEL,CAAC,CAAC,mBAAmB,CAAC;QAC7BW,aAAa,EAAE,IAAI;QACnBC,OAAO,EAAE,EAAE;QACXC,WAAW,EAAEb,CAAC,CAAC,6CAA6C;;KAE/D,CACF;;IACD;IACE;MACEQ,IAAI,EAAE,UAAU;MAChBL,MAAM,EAAE;QACNM,IAAI,EAAE,eAAe;QACrBJ,KAAK,EAAEL,CAAC,CAAC,eAAe,CAAC;QACzBc,OAAO,EAAE;QACP,CAAC,QAAQ,EAAEd,CAAC,CAAC,QAAQ,CAAC,CAAC;QACvB,CAAC,MAAM,EAAEA,CAAC,CAAC,MAAM,CAAC,CAAC;QACnB,CAAC,QAAQ,EAAEA,CAAC,CAAC,QAAQ,CAAC,CAAC,CACxB;;QACDW,aAAa,EAAE,IAAI;QACnBC,OAAO,EAAE,QAAQ;QACjBG,SAAS,EAAE,KAAK;QAChBF,WAAW,EAAEb,CAAC,CAAC,yCAAyC;;KAE3D,CACF;;IACD,CAAC,cAAc,CAAC;;GAEnB,CACF;;EACDgB,gBAAgB,EAAE;IAChBC,MAAM,EAAE;MACNC,UAAU,EAAE,CAACjB,gBAAgB,CAAC;MAC9Bc,SAAS,EAAE;KACZ;IACDI,SAAS,EAAE;MACTP,OAAO,EAAE;;GAEZ;EACDQ,iBAAiB,EAAEA,CAAAC,QAAQ,MAAK;IAC9B,GAAGA,QAAQ;IACXJ,MAAM,EAAEf,uBAAuB,EAAE,CAACoB,WAAW,EAAE;IAC/CC,MAAM,EAAErB,uBAAuB,EAAE,CAACsB,WAAW;GAC9C;CACF,CAAC,MAAAC,QAAA;AAEatB,MAAM,CAArB,eAAAsB,QAAA,CAAsB,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAf,OAAA,GAAAgB,SAAA,MAAAF,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA/EhB1B,MAAM,iGAAAuB,cAAA,CAAAG,QAAA,CAAAJ,QAAA,0HAAAK,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}