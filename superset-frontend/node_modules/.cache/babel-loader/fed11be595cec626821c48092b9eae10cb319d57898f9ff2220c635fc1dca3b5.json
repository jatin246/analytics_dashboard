{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { t, styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst REFRESH_INTERVAL = 60000; // every minute\nmoment.updateLocale('en', {\n  calendar: {\n    lastDay: '[Yesterday at] LTS',\n    sameDay: '[Today at] LTS',\n    nextDay: '[Tomorrow at] LTS',\n    lastWeek: '[last] dddd [at] LTS',\n    nextWeek: 'dddd [at] LTS',\n    sameElse: 'L'\n  }\n});\nconst TextStyles = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\nconst Refresh = styled(Icons.Refresh)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  width: auto;\n  height: ${({ theme }) => theme.gridUnit * 5}px;\n  position: relative;\n  top: ${({ theme }) => theme.gridUnit}px;\n  left: ${({ theme }) => theme.gridUnit}px;\n  cursor: pointer;\n`;\nexport const LastUpdated = ({ updatedAt, update }) => {\n  const [timeSince, setTimeSince] = useState(moment(updatedAt));\n  useEffect(() => {\n    setTimeSince(() => moment(updatedAt));\n    // update UI every minute in case day changes\n    const interval = setInterval(() => {\n      setTimeSince(() => moment(updatedAt));\n    }, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, [updatedAt]);\n  return _jsxs(TextStyles, { children: [\n    t('Last Updated %s', timeSince.isValid() ? timeSince.calendar() : '--'),\n    update && _jsx(Refresh, { onClick: update })] }\n  );\n};__signature__(LastUpdated, \"useState{[timeSince, setTimeSince](moment(updatedAt))}\\nuseEffect{}\");const _default =\nLastUpdated;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(REFRESH_INTERVAL, \"REFRESH_INTERVAL\", \"/app/superset-frontend/src/components/LastUpdated/index.tsx\");reactHotLoader.register(TextStyles, \"TextStyles\", \"/app/superset-frontend/src/components/LastUpdated/index.tsx\");reactHotLoader.register(Refresh, \"Refresh\", \"/app/superset-frontend/src/components/LastUpdated/index.tsx\");reactHotLoader.register(LastUpdated, \"LastUpdated\", \"/app/superset-frontend/src/components/LastUpdated/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/LastUpdated/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useState","moment","t","styled","Icons","jsx","_jsx","jsxs","_jsxs","REFRESH_INTERVAL","updateLocale","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","TextStyles","span","theme","colors","grayscale","base","Refresh","primary","gridUnit","LastUpdated","updatedAt","update","timeSince","setTimeSince","interval","setInterval","clearInterval","children","isValid","onClick","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/components/LastUpdated/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  useEffect,\n  useState,\n  FunctionComponent,\n  MouseEventHandler,\n} from 'react';\n\nimport moment, { Moment, MomentInput } from 'moment';\nimport { t, styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n\nconst REFRESH_INTERVAL = 60000; // every minute\n\ninterface LastUpdatedProps {\n  updatedAt: MomentInput;\n  update?: MouseEventHandler<HTMLSpanElement>;\n}\nmoment.updateLocale('en', {\n  calendar: {\n    lastDay: '[Yesterday at] LTS',\n    sameDay: '[Today at] LTS',\n    nextDay: '[Tomorrow at] LTS',\n    lastWeek: '[last] dddd [at] LTS',\n    nextWeek: 'dddd [at] LTS',\n    sameElse: 'L',\n  },\n});\n\nconst TextStyles = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nconst Refresh = styled(Icons.Refresh)`\n  color: ${({ theme }) => theme.colors.primary.base};\n  width: auto;\n  height: ${({ theme }) => theme.gridUnit * 5}px;\n  position: relative;\n  top: ${({ theme }) => theme.gridUnit}px;\n  left: ${({ theme }) => theme.gridUnit}px;\n  cursor: pointer;\n`;\n\nexport const LastUpdated: FunctionComponent<LastUpdatedProps> = ({\n  updatedAt,\n  update,\n}) => {\n  const [timeSince, setTimeSince] = useState<Moment>(moment(updatedAt));\n\n  useEffect(() => {\n    setTimeSince(() => moment(updatedAt));\n\n    // update UI every minute in case day changes\n    const interval = setInterval(() => {\n      setTimeSince(() => moment(updatedAt));\n    }, REFRESH_INTERVAL);\n\n    return () => clearInterval(interval);\n  }, [updatedAt]);\n\n  return (\n    <TextStyles>\n      {t('Last Updated %s', timeSince.isValid() ? timeSince.calendar() : '--')}\n      {update && <Refresh onClick={update} />}\n    </TextStyles>\n  );\n};\n\nexport default LastUpdated;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,SAAS,EACTC,QAAQ,QAGH,OAAO;AAEd,OAAOC,MAA+B,MAAM,QAAQ;AACpD,SAASC,CAAC,EAAEC,MAAM,QAAQ,mBAAmB;AAC7C,OAAOC,KAAK,MAAM,sBAAsB,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEzC,MAAMC,gBAAgB,GAAG,KAAK,CAAC,CAAC;AAMhCR,MAAM,CAACS,YAAY,CAAC,IAAI,EAAE;EACxBC,QAAQ,EAAE;IACRC,OAAO,EAAE,oBAAoB;IAC7BC,OAAO,EAAE,gBAAgB;IACzBC,OAAO,EAAE,mBAAmB;IAC5BC,QAAQ,EAAE,sBAAsB;IAChCC,QAAQ,EAAE,eAAe;IACzBC,QAAQ,EAAE;;CAEb,CAAC;AAEF,MAAMC,UAAU,GAAGf,MAAM,CAACgB,IAAI;WACnB,CAAC,EAAEC,KAAK,EAAE,KAAKA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,IAAI;CACpD;AAED,MAAMC,OAAO,GAAGrB,MAAM,CAACC,KAAK,CAACoB,OAAO,CAAC;WAC1B,CAAC,EAAEJ,KAAK,EAAE,KAAKA,KAAK,CAACC,MAAM,CAACI,OAAO,CAACF,IAAI;;YAEvC,CAAC,EAAEH,KAAK,EAAE,KAAKA,KAAK,CAACM,QAAQ,GAAG,CAAC;;SAEpC,CAAC,EAAEN,KAAK,EAAE,KAAKA,KAAK,CAACM,QAAQ;UAC5B,CAAC,EAAEN,KAAK,EAAE,KAAKA,KAAK,CAACM,QAAQ;;CAEtC;AAED,OAAO,MAAMC,WAAW,GAAwCA,CAAC,EAC/DC,SAAS,EACTC,MAAM,EACP,KAAI;EACH,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAASC,MAAM,CAAC2B,SAAS,CAAC,CAAC;EAErE7B,SAAS,CAAC,MAAK;IACbgC,YAAY,CAAC,MAAM9B,MAAM,CAAC2B,SAAS,CAAC,CAAC;IAErC;IACA,MAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAK;MAChCF,YAAY,CAAC,MAAM9B,MAAM,CAAC2B,SAAS,CAAC,CAAC;IACvC,CAAC,EAAEnB,gBAAgB,CAAC;IAEpB,OAAO,MAAMyB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,OACEpB,KAAA,CAACU,UAAU,IAAAiB,QAAA;IACRjC,CAAC,CAAC,iBAAiB,EAAE4B,SAAS,CAACM,OAAO,EAAE,GAAGN,SAAS,CAACnB,QAAQ,EAAE,GAAG,IAAI,CAAC;IACvEkB,MAAM,IAAIvB,IAAA,CAACkB,OAAO,IAACa,OAAO,EAAER,MAAO,GAAG;EAC7B,CAAC;AAEjB,CAAC,CAACS,aAAA,CAvBWX,WAAW,+EAAAY,QAAA;AAyBTZ,WAAW,CAA1B,eAAAY,QAAA,CAA2B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAxDrBnC,gBAAgB,qFAAA+B,cAAA,CAAAI,QAAA,CAiBhB1B,UAAU,+EAAAsB,cAAA,CAAAI,QAAA,CAIVpB,OAAO,4EAAAgB,cAAA,CAAAI,QAAA,CAUAjB,WAAW,gFAAAa,cAAA,CAAAI,QAAA,CAAAL,QAAA,oGAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}