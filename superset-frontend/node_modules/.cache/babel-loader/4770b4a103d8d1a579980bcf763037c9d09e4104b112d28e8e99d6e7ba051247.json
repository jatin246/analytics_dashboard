{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Link } from 'react-router-dom';\nimport Button from 'src/components/Button';\nimport { Empty } from 'src/components';\nimport { TableTab } from 'src/views/CRUD/types';\nimport { styled, t } from '@superset-ui/core';\nimport { WelcomeTable } from './types';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst welcomeTableLabels = {\n  [WelcomeTable.Charts]: t('charts'),\n  [WelcomeTable.Dashboards]: t('dashboards'),\n  [WelcomeTable.Recents]: t('recents'),\n  [WelcomeTable.SavedQueries]: t('saved queries')\n};\nconst welcomeTableEmpty = {\n  [WelcomeTable.Charts]: t('No charts yet'),\n  [WelcomeTable.Dashboards]: t('No dashboards yet'),\n  [WelcomeTable.Recents]: t('No recents yet'),\n  [WelcomeTable.SavedQueries]: t('No saved queries yet')\n};\nconst welcomeTableWillAppear = {\n  [WelcomeTable.Charts]: (other) => t('%(other)s charts will appear here', { other }),\n  [WelcomeTable.Dashboards]: (other) => t('%(other)s dashboards will appear here', { other }),\n  [WelcomeTable.Recents]: (other) => t('%(other)s recents will appear here', { other }),\n  [WelcomeTable.SavedQueries]: (other) => t('%(other)s saved queries will appear here', { other })\n};\nconst EmptyContainer = styled.div`\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\nconst ButtonContainer = styled.div`\n  Button {\n    svg {\n      color: ${({ theme }) => theme.colors.grayscale.light5};\n    }\n  }\n`;\nexport default function EmptyState({ tableName, tab, otherTabTitle }) {\n  const mineRedirects = {\n    [WelcomeTable.Charts]: '/chart/add',\n    [WelcomeTable.Dashboards]: '/dashboard/new',\n    [WelcomeTable.SavedQueries]: '/sqllab?new=true'\n  };\n  const favRedirects = {\n    [WelcomeTable.Charts]: '/chart/list',\n    [WelcomeTable.Dashboards]: '/dashboard/list/',\n    [WelcomeTable.SavedQueries]: '/savedqueryview/list/'\n  };\n  const tableIcon = {\n    [WelcomeTable.Charts]: 'empty-charts.svg',\n    [WelcomeTable.Dashboards]: 'empty-dashboard.svg',\n    [WelcomeTable.Recents]: 'union.svg',\n    [WelcomeTable.SavedQueries]: 'empty-queries.svg'\n  };\n  const mine = _jsx(\"span\", { children: welcomeTableEmpty[tableName] });\n  const recent = _jsx(\"span\", { className: \"no-recents\", children:\n    (() => {\n      if (tab === TableTab.Viewed) {\n        return t(`Recently viewed charts, dashboards, and saved queries will appear here`);\n      }\n      if (tab === TableTab.Created) {\n        return t('Recently created charts, dashboards, and saved queries will appear here');\n      }\n      if (tab === TableTab.Other) {\n        const other = otherTabTitle || t('Other');\n        return welcomeTableWillAppear[tableName](other);\n      }\n      if (tab === TableTab.Edited) {\n        return t(`Recently edited charts, dashboards, and saved queries will appear here`);\n      }\n      return null;\n    })() }\n  );\n  // Mine and Recent Activity(all tabs) tab empty state\n  if (tab === TableTab.Mine ||\n  tableName === WelcomeTable.Recents ||\n  tab === TableTab.Other) {\n    return _jsx(EmptyContainer, { children:\n      _jsx(Empty, { image: `/static/assets/images/${tableIcon[tableName]}`, description: tableName === WelcomeTable.Recents || tab === TableTab.Other ?\n        recent :\n        mine, children:\n        tableName !== WelcomeTable.Recents && _jsx(ButtonContainer, { children:\n          _jsx(Link, { to: mineRedirects[tableName], children:\n            _jsxs(Button, { buttonStyle: \"primary\", children: [\n              _jsx(\"i\", { className: \"fa fa-plus\" }),\n              tableName === WelcomeTable.SavedQueries ?\n              t('SQL query') :\n              tableName.\n              split('').\n              slice(0, tableName.length - 1).\n              join('')] }\n            ) }\n          ) }\n        ) }\n      ) }\n    );\n  }\n  // Favorite tab empty state\n  return _jsx(EmptyContainer, { children:\n    _jsx(Empty, { image: \"/static/assets/images/star-circle.svg\", description: _jsx(\"span\", { className: \"no-favorites\", children:\n        t(\"You don't have any favorites yet!\") }\n      ), children:\n      _jsx(Button, { buttonStyle: \"primary\", onClick: () => {\n          window.location.href = favRedirects[tableName];\n        }, children:\n        t('See all %(tableName)s', {\n          tableName: tableName === WelcomeTable.SavedQueries ?\n          t('SQL Lab queries') :\n          welcomeTableLabels[tableName]\n        }) }\n      ) }\n    ) }\n  );\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(welcomeTableLabels, \"welcomeTableLabels\", \"/app/superset-frontend/src/features/home/EmptyState.tsx\");reactHotLoader.register(welcomeTableEmpty, \"welcomeTableEmpty\", \"/app/superset-frontend/src/features/home/EmptyState.tsx\");reactHotLoader.register(welcomeTableWillAppear, \"welcomeTableWillAppear\", \"/app/superset-frontend/src/features/home/EmptyState.tsx\");reactHotLoader.register(EmptyContainer, \"EmptyContainer\", \"/app/superset-frontend/src/features/home/EmptyState.tsx\");reactHotLoader.register(ButtonContainer, \"ButtonContainer\", \"/app/superset-frontend/src/features/home/EmptyState.tsx\");reactHotLoader.register(EmptyState, \"EmptyState\", \"/app/superset-frontend/src/features/home/EmptyState.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Link","Button","Empty","TableTab","styled","t","WelcomeTable","jsx","_jsx","jsxs","_jsxs","welcomeTableLabels","Charts","Dashboards","Recents","SavedQueries","welcomeTableEmpty","welcomeTableWillAppear","other","EmptyContainer","div","ButtonContainer","theme","colors","grayscale","light5","EmptyState","tableName","tab","otherTabTitle","mineRedirects","favRedirects","tableIcon","mine","children","recent","className","Viewed","Created","Other","Edited","Mine","image","description","to","buttonStyle","split","slice","length","join","onClick","window","location","href","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/features/home/EmptyState.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Link } from 'react-router-dom';\nimport Button from 'src/components/Button';\nimport { Empty } from 'src/components';\nimport { TableTab } from 'src/views/CRUD/types';\nimport { styled, t } from '@superset-ui/core';\nimport { WelcomeTable } from './types';\n\nconst welcomeTableLabels: Record<WelcomeTable, string> = {\n  [WelcomeTable.Charts]: t('charts'),\n  [WelcomeTable.Dashboards]: t('dashboards'),\n  [WelcomeTable.Recents]: t('recents'),\n  [WelcomeTable.SavedQueries]: t('saved queries'),\n};\n\nconst welcomeTableEmpty: Record<WelcomeTable, string> = {\n  [WelcomeTable.Charts]: t('No charts yet'),\n  [WelcomeTable.Dashboards]: t('No dashboards yet'),\n  [WelcomeTable.Recents]: t('No recents yet'),\n  [WelcomeTable.SavedQueries]: t('No saved queries yet'),\n};\n\nconst welcomeTableWillAppear: Record<WelcomeTable, (other: string) => string> =\n  {\n    [WelcomeTable.Charts]: (other: string) =>\n      t('%(other)s charts will appear here', { other }),\n    [WelcomeTable.Dashboards]: (other: string) =>\n      t('%(other)s dashboards will appear here', { other }),\n    [WelcomeTable.Recents]: (other: string) =>\n      t('%(other)s recents will appear here', { other }),\n    [WelcomeTable.SavedQueries]: (other: string) =>\n      t('%(other)s saved queries will appear here', { other }),\n  };\n\nexport interface EmptyStateProps {\n  tableName: WelcomeTable;\n  tab?: string;\n  otherTabTitle?: string;\n}\nconst EmptyContainer = styled.div`\n  min-height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\nconst ButtonContainer = styled.div`\n  Button {\n    svg {\n      color: ${({ theme }) => theme.colors.grayscale.light5};\n    }\n  }\n`;\n\ntype Redirects = Record<\n  WelcomeTable.Charts | WelcomeTable.Dashboards | WelcomeTable.SavedQueries,\n  string\n>;\n\nexport default function EmptyState({\n  tableName,\n  tab,\n  otherTabTitle,\n}: EmptyStateProps) {\n  const mineRedirects: Redirects = {\n    [WelcomeTable.Charts]: '/chart/add',\n    [WelcomeTable.Dashboards]: '/dashboard/new',\n    [WelcomeTable.SavedQueries]: '/sqllab?new=true',\n  };\n  const favRedirects: Redirects = {\n    [WelcomeTable.Charts]: '/chart/list',\n    [WelcomeTable.Dashboards]: '/dashboard/list/',\n    [WelcomeTable.SavedQueries]: '/savedqueryview/list/',\n  };\n  const tableIcon: Record<WelcomeTable, string> = {\n    [WelcomeTable.Charts]: 'empty-charts.svg',\n    [WelcomeTable.Dashboards]: 'empty-dashboard.svg',\n    [WelcomeTable.Recents]: 'union.svg',\n    [WelcomeTable.SavedQueries]: 'empty-queries.svg',\n  };\n  const mine = <span>{welcomeTableEmpty[tableName]}</span>;\n  const recent = (\n    <span className=\"no-recents\">\n      {(() => {\n        if (tab === TableTab.Viewed) {\n          return t(\n            `Recently viewed charts, dashboards, and saved queries will appear here`,\n          );\n        }\n        if (tab === TableTab.Created) {\n          return t(\n            'Recently created charts, dashboards, and saved queries will appear here',\n          );\n        }\n        if (tab === TableTab.Other) {\n          const other = otherTabTitle || t('Other');\n          return welcomeTableWillAppear[tableName](other);\n        }\n        if (tab === TableTab.Edited) {\n          return t(\n            `Recently edited charts, dashboards, and saved queries will appear here`,\n          );\n        }\n        return null;\n      })()}\n    </span>\n  );\n\n  // Mine and Recent Activity(all tabs) tab empty state\n  if (\n    tab === TableTab.Mine ||\n    tableName === WelcomeTable.Recents ||\n    tab === TableTab.Other\n  ) {\n    return (\n      <EmptyContainer>\n        <Empty\n          image={`/static/assets/images/${tableIcon[tableName]}`}\n          description={\n            tableName === WelcomeTable.Recents || tab === TableTab.Other\n              ? recent\n              : mine\n          }\n        >\n          {tableName !== WelcomeTable.Recents && (\n            <ButtonContainer>\n              <Link to={mineRedirects[tableName]}>\n                <Button buttonStyle=\"primary\">\n                  <i className=\"fa fa-plus\" />\n                  {tableName === WelcomeTable.SavedQueries\n                    ? t('SQL query')\n                    : tableName\n                        .split('')\n                        .slice(0, tableName.length - 1)\n                        .join('')}\n                </Button>\n              </Link>\n            </ButtonContainer>\n          )}\n        </Empty>\n      </EmptyContainer>\n    );\n  }\n  // Favorite tab empty state\n  return (\n    <EmptyContainer>\n      <Empty\n        image=\"/static/assets/images/star-circle.svg\"\n        description={\n          <span className=\"no-favorites\">\n            {t(\"You don't have any favorites yet!\")}\n          </span>\n        }\n      >\n        <Button\n          buttonStyle=\"primary\"\n          onClick={() => {\n            window.location.href = favRedirects[tableName];\n          }}\n        >\n          {t('See all %(tableName)s', {\n            tableName:\n              tableName === WelcomeTable.SavedQueries\n                ? t('SQL Lab queries')\n                : welcomeTableLabels[tableName],\n          })}\n        </Button>\n      </Empty>\n    </EmptyContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}