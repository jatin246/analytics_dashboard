{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, isAdhocColumn, isPhysicalColumn, SMART_DATE_ID, t, validateNonEmpty } from '@superset-ui/core';\nimport { D3_TIME_FORMAT_OPTIONS, sharedControls, getStandardizedControls } from '@superset-ui/chart-controls';\nimport { MetricsLayoutEnum } from '../types';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'groupbyColumns',\n      config: {\n        ...sharedControls.groupby,\n        label: t('Columns'),\n        description: t('Columns to group by on the columns')\n      }\n    }],\n\n    [\n    {\n      name: 'groupbyRows',\n      config: {\n        ...sharedControls.groupby,\n        label: t('Rows'),\n        description: t('Columns to group by on the rows')\n      }\n    }],\n\n    [\n    {\n      name: 'time_grain_sqla',\n      config: {\n        ...sharedControls.time_grain_sqla,\n        visibility: ({ controls }) => {var _controls$groupbyColu;\n          const dttmLookup = Object.fromEntries(ensureIsArray(controls == null ? void 0 : (_controls$groupbyColu = controls.groupbyColumns) == null ? void 0 : _controls$groupbyColu.options).map((option) => [option.column_name, option.is_dttm]));\n          return [\n          ...ensureIsArray(controls == null ? void 0 : controls.groupbyColumns.value),\n          ...ensureIsArray(controls == null ? void 0 : controls.groupbyRows.value)].\n\n          map((selection) => {\n            if (isAdhocColumn(selection)) {\n              return true;\n            }\n            if (isPhysicalColumn(selection)) {\n              return !!dttmLookup[selection];\n            }\n            return false;\n          }).\n          some(Boolean);\n        }\n      }\n    },\n    'temporal_columns_lookup'],\n\n    [\n    {\n      name: 'metrics',\n      config: {\n        ...sharedControls.metrics,\n        validators: [validateNonEmpty],\n        rerender: ['conditional_formatting']\n      }\n    }],\n\n    [\n    {\n      name: 'metricsLayout',\n      config: {\n        type: 'RadioButtonControl',\n        renderTrigger: true,\n        label: t('Apply metrics on'),\n        default: MetricsLayoutEnum.COLUMNS,\n        options: [\n        [MetricsLayoutEnum.COLUMNS, t('Columns')],\n        [MetricsLayoutEnum.ROWS, t('Rows')]],\n\n        description: t('Use metrics as a top level group for columns or for rows')\n      }\n    }],\n\n    ['adhoc_filters'],\n    ['series_limit'],\n    [\n    {\n      name: 'row_limit',\n      config: {\n        ...sharedControls.row_limit,\n        label: t('Cell limit'),\n        description: t('Limits the number of cells that get retrieved.')\n      }\n    }],\n\n    // TODO(kgabryje): add series_columns control after control panel is redesigned to avoid clutter\n    [\n    {\n      name: 'series_limit_metric',\n      config: {\n        ...sharedControls.series_limit_metric,\n        description: t('Metric used to define how the top series are sorted if a series or cell limit is present. ' +\n        'If undefined reverts to the first metric (where appropriate).')\n      }\n    }],\n\n    [\n    {\n      name: 'order_desc',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Sort Descending'),\n        default: true,\n        description: t('Whether to sort descending or ascending')\n      }\n    }]]\n\n\n  },\n  {\n    label: t('Options'),\n    expanded: true,\n    tabOverride: 'data',\n    controlSetRows: [\n    [\n    {\n      name: 'aggregateFunction',\n      config: {\n        type: 'SelectControl',\n        label: t('Aggregation function'),\n        clearable: false,\n        choices: [\n        ['Count', t('Count')],\n        ['Count Unique Values', t('Count Unique Values')],\n        ['List Unique Values', t('List Unique Values')],\n        ['Sum', t('Sum')],\n        ['Average', t('Average')],\n        ['Median', t('Median')],\n        ['Sample Variance', t('Sample Variance')],\n        ['Sample Standard Deviation', t('Sample Standard Deviation')],\n        ['Minimum', t('Minimum')],\n        ['Maximum', t('Maximum')],\n        ['First', t('First')],\n        ['Last', t('Last')],\n        ['Sum as Fraction of Total', t('Sum as Fraction of Total')],\n        ['Sum as Fraction of Rows', t('Sum as Fraction of Rows')],\n        ['Sum as Fraction of Columns', t('Sum as Fraction of Columns')],\n        ['Count as Fraction of Total', t('Count as Fraction of Total')],\n        ['Count as Fraction of Rows', t('Count as Fraction of Rows')],\n        [\n        'Count as Fraction of Columns',\n        t('Count as Fraction of Columns')]],\n\n\n        default: 'Sum',\n        description: t('Aggregate function to apply when pivoting and computing the total rows and columns'),\n        renderTrigger: true\n      }\n    }],\n\n    [\n    {\n      name: 'rowTotals',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show rows total'),\n        default: false,\n        renderTrigger: true,\n        description: t('Display row level total')\n      }\n    }],\n\n    [\n    {\n      name: 'rowSubTotals',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show rows subtotal'),\n        default: false,\n        renderTrigger: true,\n        description: t('Display row level subtotal')\n      }\n    }],\n\n    [\n    {\n      name: 'colTotals',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show columns total'),\n        default: false,\n        renderTrigger: true,\n        description: t('Display column level total')\n      }\n    }],\n\n    [\n    {\n      name: 'colSubTotals',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show columns subtotal'),\n        default: false,\n        renderTrigger: true,\n        description: t('Display column level subtotal')\n      }\n    }],\n\n    [\n    {\n      name: 'transposePivot',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Transpose pivot'),\n        default: false,\n        description: t('Swap rows and columns'),\n        renderTrigger: true\n      }\n    }],\n\n    [\n    {\n      name: 'combineMetric',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Combine metrics'),\n        default: false,\n        description: t('Display metrics side by side within each column, as ' +\n        'opposed to each column being displayed side by side for each metric.'),\n        renderTrigger: true\n      }\n    }]]\n\n\n  },\n  {\n    label: t('Options'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'valueFormat',\n      config: {\n        ...sharedControls.y_axis_format,\n        label: t('Value format')\n      }\n    }],\n\n    ['currency_format'],\n    [\n    {\n      name: 'date_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Date format'),\n        default: SMART_DATE_ID,\n        renderTrigger: true,\n        choices: D3_TIME_FORMAT_OPTIONS,\n        description: t('D3 time format for datetime columns')\n      }\n    }],\n\n    [\n    {\n      name: 'rowOrder',\n      config: {\n        type: 'SelectControl',\n        label: t('Sort rows by'),\n        default: 'key_a_to_z',\n        choices: [\n        // [value, label]\n        ['key_a_to_z', t('key a-z')],\n        ['key_z_to_a', t('key z-a')],\n        ['value_a_to_z', t('value ascending')],\n        ['value_z_to_a', t('value descending')]],\n\n        renderTrigger: true,\n        description: _jsxs(_Fragment, { children: [\n          _jsx(\"div\", { children: t('Change order of rows.') }),\n          _jsx(\"div\", { children: t('Available sorting modes:') }),\n          _jsxs(\"ul\", { children: [\n            _jsx(\"li\", { children: t('By key: use row names as sorting key') }),\n            _jsx(\"li\", { children: t('By value: use metric values as sorting key') })] }\n          )] }\n        )\n      }\n    }],\n\n    [\n    {\n      name: 'colOrder',\n      config: {\n        type: 'SelectControl',\n        label: t('Sort columns by'),\n        default: 'key_a_to_z',\n        choices: [\n        // [value, label]\n        ['key_a_to_z', t('key a-z')],\n        ['key_z_to_a', t('key z-a')],\n        ['value_a_to_z', t('value ascending')],\n        ['value_z_to_a', t('value descending')]],\n\n        renderTrigger: true,\n        description: _jsxs(_Fragment, { children: [\n          _jsx(\"div\", { children: t('Change order of columns.') }),\n          _jsx(\"div\", { children: t('Available sorting modes:') }),\n          _jsxs(\"ul\", { children: [\n            _jsx(\"li\", { children: t('By key: use column names as sorting key') }),\n            _jsx(\"li\", { children: t('By value: use metric values as sorting key') })] }\n          )] }\n        )\n      }\n    }],\n\n    [\n    {\n      name: 'rowSubtotalPosition',\n      config: {\n        type: 'SelectControl',\n        label: t('Rows subtotal position'),\n        default: false,\n        choices: [\n        // [value, label]\n        [true, t('Top')],\n        [false, t('Bottom')]],\n\n        renderTrigger: true,\n        description: t('Position of row level subtotal')\n      }\n    }],\n\n    [\n    {\n      name: 'colSubtotalPosition',\n      config: {\n        type: 'SelectControl',\n        label: t('Columns subtotal position'),\n        default: false,\n        choices: [\n        // [value, label]\n        [true, t('Left')],\n        [false, t('Right')]],\n\n        renderTrigger: true,\n        description: t('Position of column level subtotal')\n      }\n    }],\n\n    [\n    {\n      name: 'conditional_formatting',\n      config: {\n        type: 'ConditionalFormattingControl',\n        renderTrigger: true,\n        label: t('Conditional formatting'),\n        description: t('Apply conditional color formatting to metrics'),\n        mapStateToProps(explore, _, chart) {var _explore$controls$met, _explore$controls, _explore$controls$met2, _explore$datasource, _explore$datasource2, _explore$datasource$c, _explore$datasource3;\n          const values = (_explore$controls$met = explore == null ? void 0 : (_explore$controls = explore.controls) == null ? void 0 : (_explore$controls$met2 = _explore$controls.metrics) == null ? void 0 : _explore$controls$met2.value) != null ? _explore$controls$met :\n          [];\n          const verboseMap = explore != null && (_explore$datasource = explore.datasource) != null && _explore$datasource.hasOwnProperty('verbose_map') ?\n          explore == null ? void 0 : (_explore$datasource2 = explore.datasource) == null ? void 0 : _explore$datasource2.verbose_map : (_explore$datasource$c =\n          explore == null ? void 0 : (_explore$datasource3 = explore.datasource) == null ? void 0 : _explore$datasource3.columns) != null ? _explore$datasource$c : {};\n          const chartStatus = chart == null ? void 0 : chart.chartStatus;\n          const metricColumn = values.map((value) => {\n            if (typeof value === 'string') {var _verboseMap$value;\n              return { value, label: (_verboseMap$value = verboseMap[value]) != null ? _verboseMap$value : value };\n            }\n            return { value: value.label, label: value.label };\n          });\n          return {\n            removeIrrelevantConditions: chartStatus === 'success',\n            columnOptions: metricColumn,\n            verboseMap\n          };\n        }\n      }\n    }]]\n\n\n  }],\n\n  formDataOverrides: (formData) => {\n    const groupbyColumns = getStandardizedControls().controls.columns.filter((col) => !ensureIsArray(formData.groupbyRows).includes(col));\n    getStandardizedControls().controls.columns =\n    getStandardizedControls().controls.columns.filter((col) => !groupbyColumns.includes(col));\n    return {\n      ...formData,\n      metrics: getStandardizedControls().popAllMetrics(),\n      groupbyColumns\n    };\n  }\n};const _default =\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(config, \"config\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/plugin/controlPanel.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/plugins/plugin-chart-pivot-table/src/plugin/controlPanel.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","isAdhocColumn","isPhysicalColumn","SMART_DATE_ID","t","validateNonEmpty","D3_TIME_FORMAT_OPTIONS","sharedControls","getStandardizedControls","MetricsLayoutEnum","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","config","controlPanelSections","label","expanded","controlSetRows","name","groupby","description","time_grain_sqla","visibility","controls","_controls$groupbyColu","dttmLookup","Object","fromEntries","groupbyColumns","options","map","option","column_name","is_dttm","value","groupbyRows","selection","some","Boolean","metrics","validators","rerender","type","renderTrigger","default","COLUMNS","ROWS","row_limit","series_limit_metric","tabOverride","clearable","choices","y_axis_format","freeForm","children","mapStateToProps","explore","_","chart","_explore$controls$met","_explore$controls","_explore$controls$met2","_explore$datasource","_explore$datasource2","_explore$datasource$c","_explore$datasource3","values","verboseMap","datasource","hasOwnProperty","verbose_map","columns","chartStatus","metricColumn","_verboseMap$value","removeIrrelevantConditions","columnOptions","formDataOverrides","formData","filter","col","includes","popAllMetrics","_default","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/plugin-chart-pivot-table/src/plugin/controlPanel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  ensureIsArray,\n  isAdhocColumn,\n  isPhysicalColumn,\n  QueryFormMetric,\n  SMART_DATE_ID,\n  t,\n  validateNonEmpty,\n} from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  D3_TIME_FORMAT_OPTIONS,\n  sharedControls,\n  Dataset,\n  getStandardizedControls,\n} from '@superset-ui/chart-controls';\nimport { MetricsLayoutEnum } from '../types';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'groupbyColumns',\n            config: {\n              ...sharedControls.groupby,\n              label: t('Columns'),\n              description: t('Columns to group by on the columns'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'groupbyRows',\n            config: {\n              ...sharedControls.groupby,\n              label: t('Rows'),\n              description: t('Columns to group by on the rows'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'time_grain_sqla',\n            config: {\n              ...sharedControls.time_grain_sqla,\n              visibility: ({ controls }) => {\n                const dttmLookup = Object.fromEntries(\n                  ensureIsArray(controls?.groupbyColumns?.options).map(\n                    option => [option.column_name, option.is_dttm],\n                  ),\n                );\n\n                return [\n                  ...ensureIsArray(controls?.groupbyColumns.value),\n                  ...ensureIsArray(controls?.groupbyRows.value),\n                ]\n                  .map(selection => {\n                    if (isAdhocColumn(selection)) {\n                      return true;\n                    }\n                    if (isPhysicalColumn(selection)) {\n                      return !!dttmLookup[selection];\n                    }\n                    return false;\n                  })\n                  .some(Boolean);\n              },\n            },\n          },\n          'temporal_columns_lookup',\n        ],\n        [\n          {\n            name: 'metrics',\n            config: {\n              ...sharedControls.metrics,\n              validators: [validateNonEmpty],\n              rerender: ['conditional_formatting'],\n            },\n          },\n        ],\n        [\n          {\n            name: 'metricsLayout',\n            config: {\n              type: 'RadioButtonControl',\n              renderTrigger: true,\n              label: t('Apply metrics on'),\n              default: MetricsLayoutEnum.COLUMNS,\n              options: [\n                [MetricsLayoutEnum.COLUMNS, t('Columns')],\n                [MetricsLayoutEnum.ROWS, t('Rows')],\n              ],\n              description: t(\n                'Use metrics as a top level group for columns or for rows',\n              ),\n            },\n          },\n        ],\n        ['adhoc_filters'],\n        ['series_limit'],\n        [\n          {\n            name: 'row_limit',\n            config: {\n              ...sharedControls.row_limit,\n              label: t('Cell limit'),\n              description: t('Limits the number of cells that get retrieved.'),\n            },\n          },\n        ],\n        // TODO(kgabryje): add series_columns control after control panel is redesigned to avoid clutter\n        [\n          {\n            name: 'series_limit_metric',\n            config: {\n              ...sharedControls.series_limit_metric,\n              description: t(\n                'Metric used to define how the top series are sorted if a series or cell limit is present. ' +\n                  'If undefined reverts to the first metric (where appropriate).',\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'order_desc',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Sort Descending'),\n              default: true,\n              description: t('Whether to sort descending or ascending'),\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Options'),\n      expanded: true,\n      tabOverride: 'data',\n      controlSetRows: [\n        [\n          {\n            name: 'aggregateFunction',\n            config: {\n              type: 'SelectControl',\n              label: t('Aggregation function'),\n              clearable: false,\n              choices: [\n                ['Count', t('Count')],\n                ['Count Unique Values', t('Count Unique Values')],\n                ['List Unique Values', t('List Unique Values')],\n                ['Sum', t('Sum')],\n                ['Average', t('Average')],\n                ['Median', t('Median')],\n                ['Sample Variance', t('Sample Variance')],\n                ['Sample Standard Deviation', t('Sample Standard Deviation')],\n                ['Minimum', t('Minimum')],\n                ['Maximum', t('Maximum')],\n                ['First', t('First')],\n                ['Last', t('Last')],\n                ['Sum as Fraction of Total', t('Sum as Fraction of Total')],\n                ['Sum as Fraction of Rows', t('Sum as Fraction of Rows')],\n                ['Sum as Fraction of Columns', t('Sum as Fraction of Columns')],\n                ['Count as Fraction of Total', t('Count as Fraction of Total')],\n                ['Count as Fraction of Rows', t('Count as Fraction of Rows')],\n                [\n                  'Count as Fraction of Columns',\n                  t('Count as Fraction of Columns'),\n                ],\n              ],\n              default: 'Sum',\n              description: t(\n                'Aggregate function to apply when pivoting and computing the total rows and columns',\n              ),\n              renderTrigger: true,\n            },\n          },\n        ],\n        [\n          {\n            name: 'rowTotals',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show rows total'),\n              default: false,\n              renderTrigger: true,\n              description: t('Display row level total'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'rowSubTotals',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show rows subtotal'),\n              default: false,\n              renderTrigger: true,\n              description: t('Display row level subtotal'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'colTotals',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show columns total'),\n              default: false,\n              renderTrigger: true,\n              description: t('Display column level total'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'colSubTotals',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Show columns subtotal'),\n              default: false,\n              renderTrigger: true,\n              description: t('Display column level subtotal'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'transposePivot',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Transpose pivot'),\n              default: false,\n              description: t('Swap rows and columns'),\n              renderTrigger: true,\n            },\n          },\n        ],\n        [\n          {\n            name: 'combineMetric',\n            config: {\n              type: 'CheckboxControl',\n              label: t('Combine metrics'),\n              default: false,\n              description: t(\n                'Display metrics side by side within each column, as ' +\n                  'opposed to each column being displayed side by side for each metric.',\n              ),\n              renderTrigger: true,\n            },\n          },\n        ],\n      ],\n    },\n    {\n      label: t('Options'),\n      expanded: true,\n      controlSetRows: [\n        [\n          {\n            name: 'valueFormat',\n            config: {\n              ...sharedControls.y_axis_format,\n              label: t('Value format'),\n            },\n          },\n        ],\n        ['currency_format'],\n        [\n          {\n            name: 'date_format',\n            config: {\n              type: 'SelectControl',\n              freeForm: true,\n              label: t('Date format'),\n              default: SMART_DATE_ID,\n              renderTrigger: true,\n              choices: D3_TIME_FORMAT_OPTIONS,\n              description: t('D3 time format for datetime columns'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'rowOrder',\n            config: {\n              type: 'SelectControl',\n              label: t('Sort rows by'),\n              default: 'key_a_to_z',\n              choices: [\n                // [value, label]\n                ['key_a_to_z', t('key a-z')],\n                ['key_z_to_a', t('key z-a')],\n                ['value_a_to_z', t('value ascending')],\n                ['value_z_to_a', t('value descending')],\n              ],\n              renderTrigger: true,\n              description: (\n                <>\n                  <div>{t('Change order of rows.')}</div>\n                  <div>{t('Available sorting modes:')}</div>\n                  <ul>\n                    <li>{t('By key: use row names as sorting key')}</li>\n                    <li>{t('By value: use metric values as sorting key')}</li>\n                  </ul>\n                </>\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'colOrder',\n            config: {\n              type: 'SelectControl',\n              label: t('Sort columns by'),\n              default: 'key_a_to_z',\n              choices: [\n                // [value, label]\n                ['key_a_to_z', t('key a-z')],\n                ['key_z_to_a', t('key z-a')],\n                ['value_a_to_z', t('value ascending')],\n                ['value_z_to_a', t('value descending')],\n              ],\n              renderTrigger: true,\n              description: (\n                <>\n                  <div>{t('Change order of columns.')}</div>\n                  <div>{t('Available sorting modes:')}</div>\n                  <ul>\n                    <li>{t('By key: use column names as sorting key')}</li>\n                    <li>{t('By value: use metric values as sorting key')}</li>\n                  </ul>\n                </>\n              ),\n            },\n          },\n        ],\n        [\n          {\n            name: 'rowSubtotalPosition',\n            config: {\n              type: 'SelectControl',\n              label: t('Rows subtotal position'),\n              default: false,\n              choices: [\n                // [value, label]\n                [true, t('Top')],\n                [false, t('Bottom')],\n              ],\n              renderTrigger: true,\n              description: t('Position of row level subtotal'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'colSubtotalPosition',\n            config: {\n              type: 'SelectControl',\n              label: t('Columns subtotal position'),\n              default: false,\n              choices: [\n                // [value, label]\n                [true, t('Left')],\n                [false, t('Right')],\n              ],\n              renderTrigger: true,\n              description: t('Position of column level subtotal'),\n            },\n          },\n        ],\n        [\n          {\n            name: 'conditional_formatting',\n            config: {\n              type: 'ConditionalFormattingControl',\n              renderTrigger: true,\n              label: t('Conditional formatting'),\n              description: t('Apply conditional color formatting to metrics'),\n              mapStateToProps(explore, _, chart) {\n                const values =\n                  (explore?.controls?.metrics?.value as QueryFormMetric[]) ??\n                  [];\n                const verboseMap = explore?.datasource?.hasOwnProperty(\n                  'verbose_map',\n                )\n                  ? (explore?.datasource as Dataset)?.verbose_map\n                  : explore?.datasource?.columns ?? {};\n                const chartStatus = chart?.chartStatus;\n                const metricColumn = values.map(value => {\n                  if (typeof value === 'string') {\n                    return { value, label: verboseMap[value] ?? value };\n                  }\n                  return { value: value.label, label: value.label };\n                });\n                return {\n                  removeIrrelevantConditions: chartStatus === 'success',\n                  columnOptions: metricColumn,\n                  verboseMap,\n                };\n              },\n            },\n          },\n        ],\n      ],\n    },\n  ],\n  formDataOverrides: formData => {\n    const groupbyColumns = getStandardizedControls().controls.columns.filter(\n      col => !ensureIsArray(formData.groupbyRows).includes(col),\n    );\n    getStandardizedControls().controls.columns =\n      getStandardizedControls().controls.columns.filter(\n        col => !groupbyColumns.includes(col),\n      );\n    return {\n      ...formData,\n      metrics: getStandardizedControls().popAllMetrics(),\n      groupbyColumns,\n    };\n  },\n};\n\nexport default config;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}