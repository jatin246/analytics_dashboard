{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t } from '@superset-ui/core';\nimport { connect } from 'react-redux';\nimport { LineEditableTabs } from 'src/components/Tabs';\nimport { LOG_ACTIONS_SELECT_DASHBOARD_TAB } from 'src/logger/LogUtils';\nimport { AntdModal } from 'src/components';\nimport { Draggable } from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport HoverMenu from '../menu/HoverMenu';\nimport findTabIndexByComponentId from '../../util/findTabIndexByComponentId';\nimport getDirectPathToTabIndex from '../../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../../util/getLeafComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { NEW_TAB_ID } from '../../util/constants';\nimport { RENDER_TAB, RENDER_TAB_CONTENT } from './Tab';\nimport { TABS_TYPE, TAB_TYPE } from '../../util/componentTypes';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderTabContent: PropTypes.bool, // whether to render tabs + content or just tabs\n  editMode: PropTypes.bool.isRequired,\n  renderHoverMenu: PropTypes.bool,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  activeTabs: PropTypes.arrayOf(PropTypes.string),\n\n  // actions (from DashboardComponent.jsx)\n  logEvent: PropTypes.func.isRequired,\n  setActiveTab: PropTypes.func,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // dnd\n  createComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  onChangeTab: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired\n};\n\nconst defaultProps = {\n  renderTabContent: true,\n  renderHoverMenu: true,\n  availableColumnCount: 0,\n  columnWidth: 0,\n  activeTabs: [],\n  directPathToChild: [],\n  setActiveTab() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {}\n};\n\nconst StyledTabsContainer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  .dashboard-component-tabs-content {\n    min-height: ${({ theme }) => theme.gridUnit * 12}px;\n    margin-top: ${({ theme }) => theme.gridUnit / 4}px;\n    position: relative;\n  }\n\n  .ant-tabs {\n    overflow: visible;\n\n    .ant-tabs-nav-wrap {\n      min-height: ${({ theme }) => theme.gridUnit * 12.5}px;\n    }\n\n    .ant-tabs-content-holder {\n      overflow: visible;\n    }\n  }\n\n  div .ant-tabs-tab-btn {\n    text-transform: none;\n  }\n`;\n\nexport class Tabs extends PureComponent {\n  constructor(_props) {\n    super(_props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    getTabInfo = (props) => {var _props$activeTabs;\n      let tabIndex = Math.max(\n        0,\n        findTabIndexByComponentId({\n          currentComponent: props.component,\n          directPathToChild: props.directPathToChild\n        })\n      );\n      if (tabIndex === 0 && (_props$activeTabs = props.activeTabs) != null && _props$activeTabs.length) {\n        props.component.children.forEach((tabId, index) => {\n          if (tabIndex === 0 && props.activeTabs.includes(tabId)) {\n            tabIndex = index;\n          }\n        });\n      }\n      const { children: tabIds } = props.component;\n      const activeKey = tabIds[tabIndex];\n\n      return {\n        tabIndex,\n        activeKey\n      };\n    };this.\n\n    showDeleteConfirmModal = (key) => {\n      const { component, deleteComponent } = this.props;\n      AntdModal.confirm({\n        title: t('Delete dashboard tab?'),\n        content:\n        _jsxs(\"span\", { children: [\n          t(\n            'Deleting a tab will remove all content within it. You may still ' +\n            'reverse this action with the'\n          ), ' ',\n          _jsx(\"b\", { children: t('undo') }), ' ',\n          t('button (cmd + z) until you save your changes.')] }\n        ),\n\n        onOk: () => {\n          deleteComponent(key, component.id);\n          const tabIndex = component.children.indexOf(key);\n          this.handleDeleteTab(tabIndex);\n        },\n        okType: 'danger',\n        okText: t('DELETE'),\n        cancelText: t('CANCEL'),\n        icon: null\n      });\n    };this.\n\n    handleEdit = (event, action) => {\n      const { component, createComponent } = this.props;\n      if (action === 'add') {\n        // Prevent the tab container to be selected\n        event == null ? void 0 : event.stopPropagation == null ? void 0 : event.stopPropagation();\n\n        createComponent({\n          destination: {\n            id: component.id,\n            type: component.type,\n            index: component.children.length\n          },\n          dragging: {\n            id: NEW_TAB_ID,\n            type: TAB_TYPE\n          }\n        });\n      } else if (action === 'remove') {\n        this.showDeleteConfirmModal(event);\n      }\n    };const { tabIndex: _tabIndex, activeKey: _activeKey } = this.getTabInfo(_props);this.state = { tabIndex: _tabIndex, activeKey: _activeKey };this.handleClickTab = this.handleClickTab.bind(this);this.handleDeleteComponent = this.handleDeleteComponent.bind(this);this.handleDeleteTab = this.handleDeleteTab.bind(this);this.handleDropOnTab = this.handleDropOnTab.bind(this);this.handleDrop = this.handleDrop.bind(this);}componentDidMount() {this.props.setActiveTab(this.state.activeKey);}componentDidUpdate(prevProps, prevState) {if (prevState.activeKey !== this.state.activeKey) {this.props.setActiveTab(this.state.activeKey, prevState.activeKey);}}UNSAFE_componentWillReceiveProps(nextProps) {const maxIndex = Math.max(0, nextProps.component.children.length - 1);const currTabsIds = this.props.component.children;const nextTabsIds = nextProps.component.children;if (this.state.tabIndex > maxIndex) {this.setState(() => ({ tabIndex: maxIndex }));} // reset tab index if dashboard was changed\n    if (nextProps.dashboardId !== this.props.dashboardId) {const { tabIndex, activeKey } = this.getTabInfo(nextProps);this.setState(() => ({ tabIndex, activeKey }));}if (nextProps.isComponentVisible) {const nextFocusComponent = getLeafComponentIdFromPath(nextProps.directPathToChild);const currentFocusComponent = getLeafComponentIdFromPath(this.props.directPathToChild); // If the currently selected component is different than the new one,\n      // or the tab length/order changed, calculate the new tab index and\n      // replace it if it's different than the current one\n      if (nextFocusComponent !== currentFocusComponent || nextFocusComponent === currentFocusComponent && currTabsIds !== nextTabsIds) {const nextTabIndex = findTabIndexByComponentId({ currentComponent: nextProps.component, directPathToChild: nextProps.directPathToChild }); // make sure nextFocusComponent is under this tabs component\n        if (nextTabIndex > -1 && nextTabIndex !== this.state.tabIndex) {this.setState(() => ({ tabIndex: nextTabIndex, activeKey: nextTabsIds[nextTabIndex] }));}}}}handleClickTab(tabIndex) {const { component } = this.props;const { children: tabIds } = component;\n    if (tabIndex !== this.state.tabIndex) {\n      const pathToTabIndex = getDirectPathToTabIndex(component, tabIndex);\n      const targetTabId = pathToTabIndex[pathToTabIndex.length - 1];\n      this.props.logEvent(LOG_ACTIONS_SELECT_DASHBOARD_TAB, {\n        target_id: targetTabId,\n        index: tabIndex\n      });\n\n      this.props.onChangeTab({ pathToTabIndex });\n    }\n    this.setState(() => ({ activeKey: tabIds[tabIndex] }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleDeleteTab(tabIndex) {\n    // If we're removing the currently selected tab,\n    // select the previous one (if any)\n    if (this.state.tabIndex === tabIndex) {\n      this.handleClickTab(Math.max(0, tabIndex - 1));\n    }\n  }\n\n  handleDropOnTab(dropResult) {\n    const { component } = this.props;\n\n    // Ensure dropped tab is visible\n    const { destination } = dropResult;\n    if (destination) {\n      const dropTabIndex =\n      destination.id === component.id ?\n      destination.index // dropped ON tabs\n      : component.children.indexOf(destination.id); // dropped IN tab\n\n      if (dropTabIndex > -1) {\n        setTimeout(() => {\n          this.handleClickTab(dropTabIndex);\n        }, 30);\n      }\n    }\n  }\n\n  handleDrop(dropResult) {\n    if (dropResult.dragging.type !== TABS_TYPE) {\n      this.props.handleComponentDrop(dropResult);\n    }\n  }\n\n  render() {\n    const {\n      depth,\n      component: tabsComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      renderTabContent,\n      renderHoverMenu,\n      isComponentVisible: isCurrentTabVisible,\n      editMode,\n      nativeFilters\n    } = this.props;\n\n    const { children: tabIds } = tabsComponent;\n    const { tabIndex: selectedTabIndex, activeKey } = this.state;\n\n    let tabsToHighlight;\n    const highlightedFilterId =\n    (nativeFilters == null ? void 0 : nativeFilters.focusedFilterId) || (nativeFilters == null ? void 0 : nativeFilters.hoveredFilterId);\n    if (highlightedFilterId) {var _nativeFilters$filter;\n      tabsToHighlight = (_nativeFilters$filter = nativeFilters.filters[highlightedFilterId]) == null ? void 0 : _nativeFilters$filter.tabsInScope;\n    }\n    return (\n      _jsx(Draggable, {\n        component: tabsComponent,\n        parentComponent: parentComponent,\n        orientation: \"row\",\n        index: index,\n        depth: depth,\n        onDrop: this.handleDrop,\n        editMode: editMode, children:\n\n        ({ dragSourceRef: tabsDragSourceRef }) =>\n        _jsxs(StyledTabsContainer, {\n          className: \"dashboard-component dashboard-component-tabs\",\n          \"data-test\": \"dashboard-component-tabs\", children: [\n\n          editMode && renderHoverMenu &&\n          _jsxs(HoverMenu, { innerRef: tabsDragSourceRef, position: \"left\", children: [\n            _jsx(DragHandle, { position: \"left\" }),\n            _jsx(DeleteComponentButton, { onDelete: this.handleDeleteComponent })] }\n          ),\n\n\n          _jsx(LineEditableTabs, {\n            id: tabsComponent.id,\n            activeKey: activeKey,\n            onChange: (key) => {\n              this.handleClickTab(tabIds.indexOf(key));\n            },\n            onEdit: this.handleEdit,\n            \"data-test\": \"nav-list\",\n            type: editMode ? 'editable-card' : 'card', children:\n\n            tabIds.map((tabId, tabIndex) => {var _tabsToHighlight;return (\n                _jsx(LineEditableTabs.TabPane, {\n\n                  tab:\n                  _jsx(DashboardComponent, {\n                    id: tabId,\n                    parentId: tabsComponent.id,\n                    depth: depth,\n                    index: tabIndex,\n                    renderType: RENDER_TAB,\n                    availableColumnCount: availableColumnCount,\n                    columnWidth: columnWidth,\n                    onDropOnTab: this.handleDropOnTab,\n                    onHoverTab: () => this.handleClickTab(tabIndex),\n                    isFocused: activeKey === tabId,\n                    isHighlighted:\n                    activeKey !== tabId && ((_tabsToHighlight = tabsToHighlight) == null ? void 0 : _tabsToHighlight.includes(tabId)) }\n\n                  ), children:\n\n\n                  renderTabContent &&\n                  _jsx(DashboardComponent, {\n                    id: tabId,\n                    parentId: tabsComponent.id,\n                    depth: depth // see isValidChild.js for why tabs don't increment child depth\n                    , index: tabIndex,\n                    renderType: RENDER_TAB_CONTENT,\n                    availableColumnCount: availableColumnCount,\n                    columnWidth: columnWidth,\n                    onResizeStart: onResizeStart,\n                    onResize: onResize,\n                    onResizeStop: onResizeStop,\n                    onDropOnTab: this.handleDropOnTab,\n                    isComponentVisible:\n                    selectedTabIndex === tabIndex && isCurrentTabVisible }\n\n                  ) }, tabId\n\n                ));}\n            ) }\n          )] }\n        ) }\n\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    nativeFilters: state.nativeFilters,\n    activeTabs: state.dashboardState.activeTabs,\n    directPathToChild: state.dashboardState.directPathToChild\n  };\n}const _default =\n\nconnect(mapStateToProps)(Tabs);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(StyledTabsContainer, \"StyledTabsContainer\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(Tabs, \"Tabs\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["PureComponent","PropTypes","styled","t","connect","LineEditableTabs","LOG_ACTIONS_SELECT_DASHBOARD_TAB","AntdModal","Draggable","DragHandle","DashboardComponent","DeleteComponentButton","HoverMenu","findTabIndexByComponentId","getDirectPathToTabIndex","getLeafComponentIdFromPath","componentShape","NEW_TAB_ID","RENDER_TAB","RENDER_TAB_CONTENT","TABS_TYPE","TAB_TYPE","jsx","_jsx","jsxs","_jsxs","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","renderTabContent","bool","editMode","renderHoverMenu","directPathToChild","arrayOf","activeTabs","logEvent","func","setActiveTab","availableColumnCount","columnWidth","onResizeStart","onResize","onResizeStop","createComponent","handleComponentDrop","onChangeTab","deleteComponent","updateComponents","defaultProps","StyledTabsContainer","div","theme","colors","grayscale","light5","gridUnit","Tabs","constructor","props","getTabInfo","_props$activeTabs","tabIndex","Math","max","currentComponent","length","children","forEach","tabId","includes","tabIds","activeKey","showDeleteConfirmModal","key","confirm","title","content","onOk","indexOf","handleDeleteTab","okType","okText","cancelText","icon","handleEdit","event","action","stopPropagation","destination","type","dragging","state","handleClickTab","bind","handleDeleteComponent","handleDropOnTab","handleDrop","componentDidMount","componentDidUpdate","prevProps","prevState","UNSAFE_componentWillReceiveProps","nextProps","maxIndex","currTabsIds","nextTabsIds","setState","dashboardId","isComponentVisible","nextFocusComponent","currentFocusComponent","nextTabIndex","pathToTabIndex","targetTabId","target_id","dropResult","dropTabIndex","setTimeout","render","tabsComponent","isCurrentTabVisible","nativeFilters","selectedTabIndex","tabsToHighlight","highlightedFilterId","focusedFilterId","hoveredFilterId","_nativeFilters$filter","filters","tabsInScope","orientation","onDrop","dragSourceRef","tabsDragSourceRef","className","innerRef","position","onDelete","onChange","onEdit","map","_tabsToHighlight","TabPane","tab","renderType","onDropOnTab","onHoverTab","isFocused","isHighlighted","__reactstandin__regenerateByEval","code","eval","mapStateToProps","dashboardState","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/dashboard/components/gridComponents/Tabs.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, t } from '@superset-ui/core';\nimport { connect } from 'react-redux';\nimport { LineEditableTabs } from 'src/components/Tabs';\nimport { LOG_ACTIONS_SELECT_DASHBOARD_TAB } from 'src/logger/LogUtils';\nimport { AntdModal } from 'src/components';\nimport { Draggable } from '../dnd/DragDroppable';\nimport DragHandle from '../dnd/DragHandle';\nimport DashboardComponent from '../../containers/DashboardComponent';\nimport DeleteComponentButton from '../DeleteComponentButton';\nimport HoverMenu from '../menu/HoverMenu';\nimport findTabIndexByComponentId from '../../util/findTabIndexByComponentId';\nimport getDirectPathToTabIndex from '../../util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from '../../util/getLeafComponentIdFromPath';\nimport { componentShape } from '../../util/propShapes';\nimport { NEW_TAB_ID } from '../../util/constants';\nimport { RENDER_TAB, RENDER_TAB_CONTENT } from './Tab';\nimport { TABS_TYPE, TAB_TYPE } from '../../util/componentTypes';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  renderTabContent: PropTypes.bool, // whether to render tabs + content or just tabs\n  editMode: PropTypes.bool.isRequired,\n  renderHoverMenu: PropTypes.bool,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  activeTabs: PropTypes.arrayOf(PropTypes.string),\n\n  // actions (from DashboardComponent.jsx)\n  logEvent: PropTypes.func.isRequired,\n  setActiveTab: PropTypes.func,\n\n  // grid related\n  availableColumnCount: PropTypes.number,\n  columnWidth: PropTypes.number,\n  onResizeStart: PropTypes.func,\n  onResize: PropTypes.func,\n  onResizeStop: PropTypes.func,\n\n  // dnd\n  createComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  onChangeTab: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  renderTabContent: true,\n  renderHoverMenu: true,\n  availableColumnCount: 0,\n  columnWidth: 0,\n  activeTabs: [],\n  directPathToChild: [],\n  setActiveTab() {},\n  onResizeStart() {},\n  onResize() {},\n  onResizeStop() {},\n};\n\nconst StyledTabsContainer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n\n  .dashboard-component-tabs-content {\n    min-height: ${({ theme }) => theme.gridUnit * 12}px;\n    margin-top: ${({ theme }) => theme.gridUnit / 4}px;\n    position: relative;\n  }\n\n  .ant-tabs {\n    overflow: visible;\n\n    .ant-tabs-nav-wrap {\n      min-height: ${({ theme }) => theme.gridUnit * 12.5}px;\n    }\n\n    .ant-tabs-content-holder {\n      overflow: visible;\n    }\n  }\n\n  div .ant-tabs-tab-btn {\n    text-transform: none;\n  }\n`;\n\nexport class Tabs extends PureComponent {\n  constructor(props) {\n    super(props);\n    const { tabIndex, activeKey } = this.getTabInfo(props);\n\n    this.state = {\n      tabIndex,\n      activeKey,\n    };\n    this.handleClickTab = this.handleClickTab.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleDeleteTab = this.handleDeleteTab.bind(this);\n    this.handleDropOnTab = this.handleDropOnTab.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.setActiveTab(this.state.activeKey);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.activeKey !== this.state.activeKey) {\n      this.props.setActiveTab(this.state.activeKey, prevState.activeKey);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const maxIndex = Math.max(0, nextProps.component.children.length - 1);\n    const currTabsIds = this.props.component.children;\n    const nextTabsIds = nextProps.component.children;\n\n    if (this.state.tabIndex > maxIndex) {\n      this.setState(() => ({ tabIndex: maxIndex }));\n    }\n\n    // reset tab index if dashboard was changed\n    if (nextProps.dashboardId !== this.props.dashboardId) {\n      const { tabIndex, activeKey } = this.getTabInfo(nextProps);\n      this.setState(() => ({\n        tabIndex,\n        activeKey,\n      }));\n    }\n\n    if (nextProps.isComponentVisible) {\n      const nextFocusComponent = getLeafComponentIdFromPath(\n        nextProps.directPathToChild,\n      );\n      const currentFocusComponent = getLeafComponentIdFromPath(\n        this.props.directPathToChild,\n      );\n\n      // If the currently selected component is different than the new one,\n      // or the tab length/order changed, calculate the new tab index and\n      // replace it if it's different than the current one\n      if (\n        nextFocusComponent !== currentFocusComponent ||\n        (nextFocusComponent === currentFocusComponent &&\n          currTabsIds !== nextTabsIds)\n      ) {\n        const nextTabIndex = findTabIndexByComponentId({\n          currentComponent: nextProps.component,\n          directPathToChild: nextProps.directPathToChild,\n        });\n\n        // make sure nextFocusComponent is under this tabs component\n        if (nextTabIndex > -1 && nextTabIndex !== this.state.tabIndex) {\n          this.setState(() => ({\n            tabIndex: nextTabIndex,\n            activeKey: nextTabsIds[nextTabIndex],\n          }));\n        }\n      }\n    }\n  }\n\n  getTabInfo = props => {\n    let tabIndex = Math.max(\n      0,\n      findTabIndexByComponentId({\n        currentComponent: props.component,\n        directPathToChild: props.directPathToChild,\n      }),\n    );\n    if (tabIndex === 0 && props.activeTabs?.length) {\n      props.component.children.forEach((tabId, index) => {\n        if (tabIndex === 0 && props.activeTabs.includes(tabId)) {\n          tabIndex = index;\n        }\n      });\n    }\n    const { children: tabIds } = props.component;\n    const activeKey = tabIds[tabIndex];\n\n    return {\n      tabIndex,\n      activeKey,\n    };\n  };\n\n  showDeleteConfirmModal = key => {\n    const { component, deleteComponent } = this.props;\n    AntdModal.confirm({\n      title: t('Delete dashboard tab?'),\n      content: (\n        <span>\n          {t(\n            'Deleting a tab will remove all content within it. You may still ' +\n              'reverse this action with the',\n          )}{' '}\n          <b>{t('undo')}</b>{' '}\n          {t('button (cmd + z) until you save your changes.')}\n        </span>\n      ),\n      onOk: () => {\n        deleteComponent(key, component.id);\n        const tabIndex = component.children.indexOf(key);\n        this.handleDeleteTab(tabIndex);\n      },\n      okType: 'danger',\n      okText: t('DELETE'),\n      cancelText: t('CANCEL'),\n      icon: null,\n    });\n  };\n\n  handleEdit = (event, action) => {\n    const { component, createComponent } = this.props;\n    if (action === 'add') {\n      // Prevent the tab container to be selected\n      event?.stopPropagation?.();\n\n      createComponent({\n        destination: {\n          id: component.id,\n          type: component.type,\n          index: component.children.length,\n        },\n        dragging: {\n          id: NEW_TAB_ID,\n          type: TAB_TYPE,\n        },\n      });\n    } else if (action === 'remove') {\n      this.showDeleteConfirmModal(event);\n    }\n  };\n\n  handleClickTab(tabIndex) {\n    const { component } = this.props;\n    const { children: tabIds } = component;\n\n    if (tabIndex !== this.state.tabIndex) {\n      const pathToTabIndex = getDirectPathToTabIndex(component, tabIndex);\n      const targetTabId = pathToTabIndex[pathToTabIndex.length - 1];\n      this.props.logEvent(LOG_ACTIONS_SELECT_DASHBOARD_TAB, {\n        target_id: targetTabId,\n        index: tabIndex,\n      });\n\n      this.props.onChangeTab({ pathToTabIndex });\n    }\n    this.setState(() => ({ activeKey: tabIds[tabIndex] }));\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleDeleteTab(tabIndex) {\n    // If we're removing the currently selected tab,\n    // select the previous one (if any)\n    if (this.state.tabIndex === tabIndex) {\n      this.handleClickTab(Math.max(0, tabIndex - 1));\n    }\n  }\n\n  handleDropOnTab(dropResult) {\n    const { component } = this.props;\n\n    // Ensure dropped tab is visible\n    const { destination } = dropResult;\n    if (destination) {\n      const dropTabIndex =\n        destination.id === component.id\n          ? destination.index // dropped ON tabs\n          : component.children.indexOf(destination.id); // dropped IN tab\n\n      if (dropTabIndex > -1) {\n        setTimeout(() => {\n          this.handleClickTab(dropTabIndex);\n        }, 30);\n      }\n    }\n  }\n\n  handleDrop(dropResult) {\n    if (dropResult.dragging.type !== TABS_TYPE) {\n      this.props.handleComponentDrop(dropResult);\n    }\n  }\n\n  render() {\n    const {\n      depth,\n      component: tabsComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      renderTabContent,\n      renderHoverMenu,\n      isComponentVisible: isCurrentTabVisible,\n      editMode,\n      nativeFilters,\n    } = this.props;\n\n    const { children: tabIds } = tabsComponent;\n    const { tabIndex: selectedTabIndex, activeKey } = this.state;\n\n    let tabsToHighlight;\n    const highlightedFilterId =\n      nativeFilters?.focusedFilterId || nativeFilters?.hoveredFilterId;\n    if (highlightedFilterId) {\n      tabsToHighlight = nativeFilters.filters[highlightedFilterId]?.tabsInScope;\n    }\n    return (\n      <Draggable\n        component={tabsComponent}\n        parentComponent={parentComponent}\n        orientation=\"row\"\n        index={index}\n        depth={depth}\n        onDrop={this.handleDrop}\n        editMode={editMode}\n      >\n        {({ dragSourceRef: tabsDragSourceRef }) => (\n          <StyledTabsContainer\n            className=\"dashboard-component dashboard-component-tabs\"\n            data-test=\"dashboard-component-tabs\"\n          >\n            {editMode && renderHoverMenu && (\n              <HoverMenu innerRef={tabsDragSourceRef} position=\"left\">\n                <DragHandle position=\"left\" />\n                <DeleteComponentButton onDelete={this.handleDeleteComponent} />\n              </HoverMenu>\n            )}\n\n            <LineEditableTabs\n              id={tabsComponent.id}\n              activeKey={activeKey}\n              onChange={key => {\n                this.handleClickTab(tabIds.indexOf(key));\n              }}\n              onEdit={this.handleEdit}\n              data-test=\"nav-list\"\n              type={editMode ? 'editable-card' : 'card'}\n            >\n              {tabIds.map((tabId, tabIndex) => (\n                <LineEditableTabs.TabPane\n                  key={tabId}\n                  tab={\n                    <DashboardComponent\n                      id={tabId}\n                      parentId={tabsComponent.id}\n                      depth={depth}\n                      index={tabIndex}\n                      renderType={RENDER_TAB}\n                      availableColumnCount={availableColumnCount}\n                      columnWidth={columnWidth}\n                      onDropOnTab={this.handleDropOnTab}\n                      onHoverTab={() => this.handleClickTab(tabIndex)}\n                      isFocused={activeKey === tabId}\n                      isHighlighted={\n                        activeKey !== tabId && tabsToHighlight?.includes(tabId)\n                      }\n                    />\n                  }\n                >\n                  {renderTabContent && (\n                    <DashboardComponent\n                      id={tabId}\n                      parentId={tabsComponent.id}\n                      depth={depth} // see isValidChild.js for why tabs don't increment child depth\n                      index={tabIndex}\n                      renderType={RENDER_TAB_CONTENT}\n                      availableColumnCount={availableColumnCount}\n                      columnWidth={columnWidth}\n                      onResizeStart={onResizeStart}\n                      onResize={onResize}\n                      onResizeStop={onResizeStop}\n                      onDropOnTab={this.handleDropOnTab}\n                      isComponentVisible={\n                        selectedTabIndex === tabIndex && isCurrentTabVisible\n                      }\n                    />\n                  )}\n                </LineEditableTabs.TabPane>\n              ))}\n            </LineEditableTabs>\n          </StyledTabsContainer>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nTabs.propTypes = propTypes;\nTabs.defaultProps = defaultProps;\n\nfunction mapStateToProps(state) {\n  return {\n    nativeFilters: state.nativeFilters,\n    activeTabs: state.dashboardState.activeTabs,\n    directPathToChild: state.dashboardState.directPathToChild,\n  };\n}\n\nexport default connect(mapStateToProps)(Tabs);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}