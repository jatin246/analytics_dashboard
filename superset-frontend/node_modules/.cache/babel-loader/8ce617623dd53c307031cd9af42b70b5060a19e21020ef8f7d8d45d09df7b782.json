{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Input, Tooltip } from 'antd';\nimport { styled, css, t } from '@superset-ui/core';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport Icons from 'src/components/Icons';\nimport Button from 'src/components/Button';\nimport errorIcon from 'src/assets/images/icons/error.svg';\nimport FormItem from './FormItem';\nimport FormLabel from './FormLabel';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst StyledInput = styled(Input)`\n  margin: ${({ theme }) => `${theme.gridUnit}px 0 ${theme.gridUnit * 2}px`};\n`;\nconst StyledInputPassword = styled(Input.Password)`\n  margin: ${({ theme }) => `${theme.gridUnit}px 0 ${theme.gridUnit * 2}px`};\n`;\nconst alertIconStyles = (theme, hasError) => css`\n  .ant-form-item-children-icon {\n    display: none;\n  }\n  ${hasError &&\n`.ant-form-item-control-input-content {\n      position: relative;\n      &:after {\n        content: ' ';\n        display: inline-block;\n        background: ${theme.colors.error.base};\n        mask: url(${errorIcon});\n        mask-size: cover;\n        width: ${theme.gridUnit * 4}px;\n        height: ${theme.gridUnit * 4}px;\n        position: absolute;\n        right: ${theme.gridUnit * 1.25}px;\n        top: ${theme.gridUnit * 2.75}px;\n      }\n    }`}\n`;\nconst StyledFormGroup = styled('div')`\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n`;\nconst StyledAlignment = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst StyledFormLabel = styled(FormLabel)`\n  margin-bottom: 0;\n`;\nconst iconReset = css`\n  &.anticon > * {\n    line-height: 0;\n  }\n`;\nconst LabeledErrorBoundInput = ({ label, validationMethods, errorMessage, helpText, required = false, hasTooltip = false, tooltipText, id, className, visibilityToggle, get_url, description, ...props }) => _jsxs(StyledFormGroup, { className: className, children: [\n  _jsxs(StyledAlignment, { children: [\n    _jsx(StyledFormLabel, { htmlFor: id, required: required, children:\n      label }\n    ),\n    hasTooltip && _jsx(InfoTooltip, { tooltip: `${tooltipText}` })] }\n  ),\n  _jsxs(FormItem, { css: (theme) => alertIconStyles(theme, !!errorMessage), validateTrigger: Object.keys(validationMethods), validateStatus: errorMessage ? 'error' : 'success', help: errorMessage || helpText, hasFeedback: !!errorMessage, children: [\n    visibilityToggle || props.name === 'password' ? _jsx(StyledInputPassword, { ...props, ...validationMethods, iconRender: (visible) => visible ? _jsx(Tooltip, { title: t('Hide password.'), children:\n        _jsx(Icons.EyeInvisibleOutlined, { iconSize: \"m\", css: iconReset }) }\n      ) : _jsx(Tooltip, { title: t('Show password.'), children:\n        _jsx(Icons.EyeOutlined, { iconSize: \"m\", css: iconReset, \"data-test\": \"icon-eye\" }) }\n      ), role: \"textbox\" }) : _jsx(StyledInput, { ...props, ...validationMethods }),\n    get_url && description ? _jsxs(Button, { type: \"link\", htmlType: \"button\", buttonStyle: \"default\", onClick: () => {\n        window.open(get_url);\n        return true;\n      }, children: [\"Get \",\n      description] }\n    ) : _jsx(\"br\", {})] }\n  )] }\n);const _default =\nLabeledErrorBoundInput;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledInput, \"StyledInput\", \"/app/superset-frontend/src/components/Form/LabeledErrorBoundInput.tsx\");reactHotLoader.register(StyledInputPassword, \"StyledInputPassword\", \"/app/superset-frontend/src/components/Form/LabeledErrorBoundInput.tsx\");reactHotLoader.register(alertIconStyles, \"alertIconStyles\", \"/app/superset-frontend/src/components/Form/LabeledErrorBoundInput.tsx\");reactHotLoader.register(StyledFormGroup, \"StyledFormGroup\", \"/app/superset-frontend/src/components/Form/LabeledErrorBoundInput.tsx\");reactHotLoader.register(StyledAlignment, \"StyledAlignment\", \"/app/superset-frontend/src/components/Form/LabeledErrorBoundInput.tsx\");reactHotLoader.register(StyledFormLabel, \"StyledFormLabel\", \"/app/superset-frontend/src/components/Form/LabeledErrorBoundInput.tsx\");reactHotLoader.register(iconReset, \"iconReset\", \"/app/superset-frontend/src/components/Form/LabeledErrorBoundInput.tsx\");reactHotLoader.register(LabeledErrorBoundInput, \"LabeledErrorBoundInput\", \"/app/superset-frontend/src/components/Form/LabeledErrorBoundInput.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/Form/LabeledErrorBoundInput.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Input","Tooltip","styled","css","t","InfoTooltip","Icons","Button","errorIcon","FormItem","FormLabel","jsx","_jsx","jsxs","_jsxs","StyledInput","theme","gridUnit","StyledInputPassword","Password","alertIconStyles","hasError","colors","error","base","StyledFormGroup","StyledAlignment","div","StyledFormLabel","iconReset","LabeledErrorBoundInput","label","validationMethods","errorMessage","helpText","required","hasTooltip","tooltipText","id","className","visibilityToggle","get_url","description","props","children","htmlFor","tooltip","validateTrigger","Object","keys","validateStatus","help","hasFeedback","name","iconRender","visible","title","EyeInvisibleOutlined","iconSize","EyeOutlined","role","type","htmlType","buttonStyle","onClick","window","open","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/components/Form/LabeledErrorBoundInput.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Input, Tooltip } from 'antd';\nimport { styled, css, SupersetTheme, t } from '@superset-ui/core';\nimport InfoTooltip from 'src/components/InfoTooltip';\nimport Icons from 'src/components/Icons';\nimport Button from 'src/components/Button';\nimport errorIcon from 'src/assets/images/icons/error.svg';\nimport FormItem from './FormItem';\nimport FormLabel from './FormLabel';\n\nexport interface LabeledErrorBoundInputProps {\n  label?: string;\n  validationMethods:\n    | { onBlur: (value: any) => void }\n    | { onChange: (value: any) => void };\n  errorMessage?: string | null;\n  helpText?: string;\n  required?: boolean;\n  hasTooltip?: boolean;\n  tooltipText?: string | null;\n  id?: string;\n  classname?: string;\n  visibilityToggle?: boolean;\n  [x: string]: any;\n}\n\nconst StyledInput = styled(Input)`\n  margin: ${({ theme }) => `${theme.gridUnit}px 0 ${theme.gridUnit * 2}px`};\n`;\n\nconst StyledInputPassword = styled(Input.Password)`\n  margin: ${({ theme }) => `${theme.gridUnit}px 0 ${theme.gridUnit * 2}px`};\n`;\n\nconst alertIconStyles = (theme: SupersetTheme, hasError: boolean) => css`\n  .ant-form-item-children-icon {\n    display: none;\n  }\n  ${hasError &&\n  `.ant-form-item-control-input-content {\n      position: relative;\n      &:after {\n        content: ' ';\n        display: inline-block;\n        background: ${theme.colors.error.base};\n        mask: url(${errorIcon});\n        mask-size: cover;\n        width: ${theme.gridUnit * 4}px;\n        height: ${theme.gridUnit * 4}px;\n        position: absolute;\n        right: ${theme.gridUnit * 1.25}px;\n        top: ${theme.gridUnit * 2.75}px;\n      }\n    }`}\n`;\n\nconst StyledFormGroup = styled('div')`\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  margin-bottom: ${({ theme }) => theme.gridUnit * 3}px;\n  .ant-form-item {\n    margin-bottom: 0;\n  }\n`;\n\nconst StyledAlignment = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledFormLabel = styled(FormLabel)`\n  margin-bottom: 0;\n`;\n\nconst iconReset = css`\n  &.anticon > * {\n    line-height: 0;\n  }\n`;\n\nconst LabeledErrorBoundInput = ({\n  label,\n  validationMethods,\n  errorMessage,\n  helpText,\n  required = false,\n  hasTooltip = false,\n  tooltipText,\n  id,\n  className,\n  visibilityToggle,\n  get_url,\n  description,\n  ...props\n}: LabeledErrorBoundInputProps) => (\n  <StyledFormGroup className={className}>\n    <StyledAlignment>\n      <StyledFormLabel htmlFor={id} required={required}>\n        {label}\n      </StyledFormLabel>\n      {hasTooltip && <InfoTooltip tooltip={`${tooltipText}`} />}\n    </StyledAlignment>\n    <FormItem\n      css={(theme: SupersetTheme) => alertIconStyles(theme, !!errorMessage)}\n      validateTrigger={Object.keys(validationMethods)}\n      validateStatus={errorMessage ? 'error' : 'success'}\n      help={errorMessage || helpText}\n      hasFeedback={!!errorMessage}\n    >\n      {visibilityToggle || props.name === 'password' ? (\n        <StyledInputPassword\n          {...props}\n          {...validationMethods}\n          iconRender={visible =>\n            visible ? (\n              <Tooltip title={t('Hide password.')}>\n                <Icons.EyeInvisibleOutlined iconSize=\"m\" css={iconReset} />\n              </Tooltip>\n            ) : (\n              <Tooltip title={t('Show password.')}>\n                <Icons.EyeOutlined\n                  iconSize=\"m\"\n                  css={iconReset}\n                  data-test=\"icon-eye\"\n                />\n              </Tooltip>\n            )\n          }\n          role=\"textbox\"\n        />\n      ) : (\n        <StyledInput {...props} {...validationMethods} />\n      )}\n      {get_url && description ? (\n        <Button\n          type=\"link\"\n          htmlType=\"button\"\n          buttonStyle=\"default\"\n          onClick={() => {\n            window.open(get_url);\n            return true;\n          }}\n        >\n          Get {description}\n        </Button>\n      ) : (\n        <br />\n      )}\n    </FormItem>\n  </StyledFormGroup>\n);\n\nexport default LabeledErrorBoundInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}