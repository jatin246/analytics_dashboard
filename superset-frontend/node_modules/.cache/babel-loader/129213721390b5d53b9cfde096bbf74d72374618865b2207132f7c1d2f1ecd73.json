{"ast":null,"code":"import _isArray from \"lodash/isArray\";import _mergeWith from \"lodash/mergeWith\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeSanitize, { defaultSchema } from 'rehype-sanitize';\nimport rehypeRaw from 'rehype-raw';\nimport remarkGfm from 'remark-gfm';\n\nimport { FeatureFlag, isFeatureEnabled } from '../utils';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function getOverrideHtmlSchema(originalSchema, htmlSchemaOverrides) {\n  return _mergeWith(originalSchema, htmlSchemaOverrides, (objValue, srcValue) => _isArray(objValue) ? objValue.concat(srcValue) : undefined);\n}\nfunction SafeMarkdown({ source, htmlSanitization = true, htmlSchemaOverrides = {} }) {\n  const escapeHtml = isFeatureEnabled(FeatureFlag.EscapeMarkdownHtml);\n  const rehypePlugins = useMemo(() => {\n    const rehypePlugins = [];\n    if (!escapeHtml) {\n      rehypePlugins.push(rehypeRaw);\n      if (htmlSanitization) {\n        const schema = getOverrideHtmlSchema(defaultSchema, htmlSchemaOverrides);\n        rehypePlugins.push([rehypeSanitize, schema]);\n      }\n    }\n    return rehypePlugins;\n  }, [escapeHtml, htmlSanitization, htmlSchemaOverrides]);\n  // React Markdown escapes HTML by default\n  return _jsx(ReactMarkdown, { rehypePlugins: rehypePlugins, remarkPlugins: [remarkGfm], skipHtml: false, transformLinkUri: null, children:\n    source }\n  );\n}__signature__(SafeMarkdown, \"useMemo{rehypePlugins}\");const _default =\nSafeMarkdown;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getOverrideHtmlSchema, \"getOverrideHtmlSchema\", \"/app/superset-frontend/packages/superset-ui-core/src/components/SafeMarkdown.tsx\");reactHotLoader.register(SafeMarkdown, \"SafeMarkdown\", \"/app/superset-frontend/packages/superset-ui-core/src/components/SafeMarkdown.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/packages/superset-ui-core/src/components/SafeMarkdown.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","ReactMarkdown","rehypeSanitize","defaultSchema","rehypeRaw","remarkGfm","FeatureFlag","isFeatureEnabled","jsx","_jsx","getOverrideHtmlSchema","originalSchema","htmlSchemaOverrides","_mergeWith","objValue","srcValue","_isArray","concat","undefined","SafeMarkdown","source","htmlSanitization","escapeHtml","EscapeMarkdownHtml","rehypePlugins","push","schema","remarkPlugins","skipHtml","transformLinkUri","children","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/packages/superset-ui-core/src/components/SafeMarkdown.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeSanitize, { defaultSchema } from 'rehype-sanitize';\nimport rehypeRaw from 'rehype-raw';\nimport remarkGfm from 'remark-gfm';\nimport { mergeWith, isArray } from 'lodash';\nimport { FeatureFlag, isFeatureEnabled } from '../utils';\n\ninterface SafeMarkdownProps {\n  source: string;\n  htmlSanitization?: boolean;\n  htmlSchemaOverrides?: typeof defaultSchema;\n}\n\nexport function getOverrideHtmlSchema(\n  originalSchema: typeof defaultSchema,\n  htmlSchemaOverrides: SafeMarkdownProps['htmlSchemaOverrides'],\n) {\n  return mergeWith(originalSchema, htmlSchemaOverrides, (objValue, srcValue) =>\n    isArray(objValue) ? objValue.concat(srcValue) : undefined,\n  );\n}\n\nfunction SafeMarkdown({\n  source,\n  htmlSanitization = true,\n  htmlSchemaOverrides = {},\n}: SafeMarkdownProps) {\n  const escapeHtml = isFeatureEnabled(FeatureFlag.EscapeMarkdownHtml);\n\n  const rehypePlugins = useMemo(() => {\n    const rehypePlugins: any = [];\n    if (!escapeHtml) {\n      rehypePlugins.push(rehypeRaw);\n      if (htmlSanitization) {\n        const schema = getOverrideHtmlSchema(\n          defaultSchema,\n          htmlSchemaOverrides,\n        );\n        rehypePlugins.push([rehypeSanitize, schema]);\n      }\n    }\n    return rehypePlugins;\n  }, [escapeHtml, htmlSanitization, htmlSchemaOverrides]);\n\n  // React Markdown escapes HTML by default\n  return (\n    <ReactMarkdown\n      rehypePlugins={rehypePlugins}\n      remarkPlugins={[remarkGfm]}\n      skipHtml={false}\n      transformLinkUri={null}\n    >\n      {source}\n    </ReactMarkdown>\n  );\n}\n\nexport default SafeMarkdown;\n"],"mappings":"wXAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAOC,cAAc,IAAIC,aAAa,QAAQ,iBAAiB;AAC/D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,SAAS,MAAM,YAAY;;AAElC,SAASC,WAAW,EAAEC,gBAAgB,QAAQ,UAAU,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAQzD,OAAM,SAAUC,qBAAqBA,CACnCC,cAAoC,EACpCC,mBAA6D;EAE7D,OAAOC,UAAA,CAAUF,cAAc,EAAEC,mBAAmB,EAAE,CAACE,QAAQ,EAAEC,QAAQ,KACvEC,QAAA,CAAQF,QAAQ,CAAC,GAAGA,QAAQ,CAACG,MAAM,CAACF,QAAQ,CAAC,GAAGG,SAAS,CAC1D;AACH;AAEA,SAASC,YAAYA,CAAC,EACpBC,MAAM,EACNC,gBAAgB,GAAG,IAAI,EACvBT,mBAAmB,GAAG,EAAE,EACN;EAClB,MAAMU,UAAU,GAAGf,gBAAgB,CAACD,WAAW,CAACiB,kBAAkB,CAAC;EAEnE,MAAMC,aAAa,GAAGxB,OAAO,CAAC,MAAK;IACjC,MAAMwB,aAAa,GAAQ,EAAE;IAC7B,IAAI,CAACF,UAAU,EAAE;MACfE,aAAa,CAACC,IAAI,CAACrB,SAAS,CAAC;MAC7B,IAAIiB,gBAAgB,EAAE;QACpB,MAAMK,MAAM,GAAGhB,qBAAqB,CAClCP,aAAa,EACbS,mBAAmB,CACpB;QACDY,aAAa,CAACC,IAAI,CAAC,CAACvB,cAAc,EAAEwB,MAAM,CAAC,CAAC;;;IAGhD,OAAOF,aAAa;EACtB,CAAC,EAAE,CAACF,UAAU,EAAED,gBAAgB,EAAET,mBAAmB,CAAC,CAAC;EAEvD;EACA,OACEH,IAAA,CAACR,aAAa,IACZuB,aAAa,EAAEA,aAAc,EAC7BG,aAAa,EAAE,CAACtB,SAAS,CAAE,EAC3BuB,QAAQ,EAAE,KAAM,EAChBC,gBAAgB,EAAE,IAAK,EAAAC,QAAA;IAEtBV,MAAM;EACM,CAAC;AAEpB,CAACW,aAAA,CAjCQZ,YAAY,kCAAAa,QAAA;AAmCNb,YAAY,CAA3B,eAAAa,QAAA,CAA4B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAjB,SAAA,MAAAe,cAAA,WAAAA,cAAA,CAAAG,QAAA,CA5CZ1B,qBAAqB,+GAAAuB,cAAA,CAAAG,QAAA,CAS5BjB,YAAY,sGAAAc,cAAA,CAAAG,QAAA,CAAAJ,QAAA,yHAAAK,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAnB,SAAA,CAAAmB,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}