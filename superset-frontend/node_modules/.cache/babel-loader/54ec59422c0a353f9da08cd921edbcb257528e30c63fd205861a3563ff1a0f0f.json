{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nconst TAB_ID_CHANNEL_NAME = 'tab_id_channel';\nconst channel = new BroadcastChannel(TAB_ID_CHANNEL_NAME);\nexport function useTabId() {\n  const [tabId, setTabId] = useState();\n  function isStorageAvailable() {\n    try {\n      return window.localStorage && window.sessionStorage;\n    }\n    catch (error) {\n      return false;\n    }\n  }\n  useEffect(() => {\n    if (!isStorageAvailable()) {\n      if (!tabId) {\n        setTabId(nanoid());\n      }\n      return;\n    }\n    const updateTabId = () => {\n      let lastTabId;\n      try {\n        lastTabId = window.localStorage.getItem('last_tab_id');\n      }\n      catch (error) {\n\n        // continue regardless of error\n      }const newTabId = String(lastTabId ? Number.parseInt(lastTabId, 10) + 1 : 1);\n      try {\n        window.sessionStorage.setItem('tab_id', newTabId);\n        window.localStorage.setItem('last_tab_id', newTabId);\n      }\n      catch (error) {\n\n        // continue regardless of error\n      }setTabId(newTabId);\n    };\n    let storedTabId;\n    try {\n      storedTabId = window.sessionStorage.getItem('tab_id');\n    }\n    catch (error) {\n\n      // continue regardless of error\n    }if (storedTabId) {\n      channel.postMessage({\n        type: 'REQUESTING_TAB_ID',\n        tabId: storedTabId\n      });\n      setTabId(storedTabId);\n    } else\n    {\n      updateTabId();\n    }\n    channel.onmessage = (messageEvent) => {\n      if (messageEvent.data.tabId === tabId) {\n        if (messageEvent.data.type === 'REQUESTING_TAB_ID') {\n          const message = {\n            type: 'TAB_ID_DENIED',\n            tabId: messageEvent.data.tabId\n          };\n          channel.postMessage(message);\n        } else\n        if (messageEvent.data.type === 'TAB_ID_DENIED') {\n          updateTabId();\n        }\n      }\n    };\n  }, [tabId]);\n  return tabId;\n}__signature__(useTabId, \"useState{[tabId, setTabId]}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TAB_ID_CHANNEL_NAME, \"TAB_ID_CHANNEL_NAME\", \"/app/superset-frontend/src/hooks/useTabId.ts\");reactHotLoader.register(channel, \"channel\", \"/app/superset-frontend/src/hooks/useTabId.ts\");reactHotLoader.register(useTabId, \"useTabId\", \"/app/superset-frontend/src/hooks/useTabId.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useState","nanoid","TAB_ID_CHANNEL_NAME","channel","BroadcastChannel","useTabId","tabId","setTabId","isStorageAvailable","window","localStorage","sessionStorage","error","updateTabId","lastTabId","getItem","newTabId","String","Number","parseInt","setItem","storedTabId","postMessage","type","onmessage","messageEvent","data","message","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/hooks/useTabId.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  StrictBroadcastChannel,\n  TabIdChannelMessage,\n} from './strictBroadcastChannel';\n\nconst TAB_ID_CHANNEL_NAME = 'tab_id_channel';\n\nconst channel: StrictBroadcastChannel<TabIdChannelMessage> =\n  new BroadcastChannel(TAB_ID_CHANNEL_NAME);\n\nexport function useTabId() {\n  const [tabId, setTabId] = useState<string>();\n\n  function isStorageAvailable() {\n    try {\n      return window.localStorage && window.sessionStorage;\n    } catch (error) {\n      return false;\n    }\n  }\n  useEffect(() => {\n    if (!isStorageAvailable()) {\n      if (!tabId) {\n        setTabId(nanoid());\n      }\n      return;\n    }\n\n    const updateTabId = () => {\n      let lastTabId;\n      try {\n        lastTabId = window.localStorage.getItem('last_tab_id');\n      } catch (error) {\n        // continue regardless of error\n      }\n      const newTabId = String(\n        lastTabId ? Number.parseInt(lastTabId, 10) + 1 : 1,\n      );\n      try {\n        window.sessionStorage.setItem('tab_id', newTabId);\n        window.localStorage.setItem('last_tab_id', newTabId);\n      } catch (error) {\n        // continue regardless of error\n      }\n      setTabId(newTabId);\n    };\n    let storedTabId;\n    try {\n      storedTabId = window.sessionStorage.getItem('tab_id');\n    } catch (error) {\n      // continue regardless of error\n    }\n    if (storedTabId) {\n      channel.postMessage({\n        type: 'REQUESTING_TAB_ID',\n        tabId: storedTabId,\n      });\n      setTabId(storedTabId);\n    } else {\n      updateTabId();\n    }\n\n    channel.onmessage = messageEvent => {\n      if (messageEvent.data.tabId === tabId) {\n        if (messageEvent.data.type === 'REQUESTING_TAB_ID') {\n          const message: TabIdChannelMessage = {\n            type: 'TAB_ID_DENIED',\n            tabId: messageEvent.data.tabId,\n          };\n          channel.postMessage(message);\n        } else if (messageEvent.data.type === 'TAB_ID_DENIED') {\n          updateTabId();\n        }\n      }\n    };\n  }, [tabId]);\n\n  return tabId;\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAM/B,MAAMC,mBAAmB,GAAG,gBAAgB;AAE5C,MAAMC,OAAO,GACX,IAAIC,gBAAgB,CAACF,mBAAmB,CAAC;AAE3C,OAAM,SAAUG,QAAQA,CAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,EAAU;EAE5C,SAASQ,kBAAkBA,CAAA;IACzB,IAAI;MACF,OAAOC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,cAAc;;IACnD,OAAOC,KAAK,EAAE;MACd,OAAO,KAAK;;EAEhB;EACAb,SAAS,CAAC,MAAK;IACb,IAAI,CAACS,kBAAkB,EAAE,EAAE;MACzB,IAAI,CAACF,KAAK,EAAE;QACVC,QAAQ,CAACN,MAAM,EAAE,CAAC;;MAEpB;;IAGF,MAAMY,WAAW,GAAGA,CAAA,KAAK;MACvB,IAAIC,SAAS;MACb,IAAI;QACFA,SAAS,GAAGL,MAAM,CAACC,YAAY,CAACK,OAAO,CAAC,aAAa,CAAC;;MACtD,OAAOH,KAAK,EAAE;;QACd;MAAA,CAEF,MAAMI,QAAQ,GAAGC,MAAM,CACrBH,SAAS,GAAGI,MAAM,CAACC,QAAQ,CAACL,SAAS,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CACnD;MACD,IAAI;QACFL,MAAM,CAACE,cAAc,CAACS,OAAO,CAAC,QAAQ,EAAEJ,QAAQ,CAAC;QACjDP,MAAM,CAACC,YAAY,CAACU,OAAO,CAAC,aAAa,EAAEJ,QAAQ,CAAC;;MACpD,OAAOJ,KAAK,EAAE;;QACd;MAAA,CAEFL,QAAQ,CAACS,QAAQ,CAAC;IACpB,CAAC;IACD,IAAIK,WAAW;IACf,IAAI;MACFA,WAAW,GAAGZ,MAAM,CAACE,cAAc,CAACI,OAAO,CAAC,QAAQ,CAAC;;IACrD,OAAOH,KAAK,EAAE;;MACd;IAAA,CAEF,IAAIS,WAAW,EAAE;MACflB,OAAO,CAACmB,WAAW,CAAC;QAClBC,IAAI,EAAE,mBAAmB;QACzBjB,KAAK,EAAEe;OACR,CAAC;MACFd,QAAQ,CAACc,WAAW,CAAC;KACtB;IAAM;MACLR,WAAW,EAAE;;IAGfV,OAAO,CAACqB,SAAS,GAAG,CAAAC,YAAY,KAAG;MACjC,IAAIA,YAAY,CAACC,IAAI,CAACpB,KAAK,KAAKA,KAAK,EAAE;QACrC,IAAImB,YAAY,CAACC,IAAI,CAACH,IAAI,KAAK,mBAAmB,EAAE;UAClD,MAAMI,OAAO,GAAwB;YACnCJ,IAAI,EAAE,eAAe;YACrBjB,KAAK,EAAEmB,YAAY,CAACC,IAAI,CAACpB;WAC1B;UACDH,OAAO,CAACmB,WAAW,CAACK,OAAO,CAAC;SAC7B;QAAM,IAAIF,YAAY,CAACC,IAAI,CAACH,IAAI,KAAK,eAAe,EAAE;UACrDV,WAAW,EAAE;;;IAGnB,CAAC;EACH,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,OAAOA,KAAK;AACd,CAACsB,aAAA,CApEevB,QAAQ,iEAAAwB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CALlB/B,mBAAmB,yEAAA2B,cAAA,CAAAI,QAAA,CAEnB9B,OAAO,6DAAA0B,cAAA,CAAAI,QAAA,CAGG5B,QAAQ,sFAAA6B,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}