{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-continue, no-bitwise */\n/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport { scaleLinear } from 'd3-scale';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nexport const DEFAULT_COLORS = [\n'#313695',\n'#4575b4',\n'#74add1',\n'#abd9e9',\n'#fee090',\n'#fdae61',\n'#f46d43',\n'#d73027'];\n\n\nconst propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      y: PropTypes.number\n    })\n  ).isRequired,\n  bands: PropTypes.number,\n  colors: PropTypes.arrayOf(PropTypes.string),\n  colorScale: PropTypes.string,\n  mode: PropTypes.string,\n  offsetX: PropTypes.number,\n  title: PropTypes.string,\n  yDomain: PropTypes.arrayOf(PropTypes.number)\n};\n\nconst defaultProps = {\n  className: '',\n  width: 800,\n  height: 20,\n  bands: DEFAULT_COLORS.length >> 1,\n  colors: DEFAULT_COLORS,\n  colorScale: 'series',\n  mode: 'offset',\n  offsetX: 0,\n  title: '',\n  yDomain: undefined\n};\n\nclass HorizonRow extends PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    this.drawChart();\n  }\n\n  componentWillUnmount() {\n    this.canvas = null;\n  }\n\n  drawChart() {\n    if (this.canvas) {\n      const {\n        data: rawData,\n        yDomain,\n        width,\n        height,\n        bands,\n        colors,\n        colorScale,\n        offsetX,\n        mode\n      } = this.props;\n\n      const data =\n      colorScale === 'change' ?\n      rawData.map((d) => ({ ...d, y: d.y - rawData[0].y })) :\n      rawData;\n\n      const context = this.canvas.getContext('2d');\n      context.imageSmoothingEnabled = false;\n      context.clearRect(0, 0, width, height);\n      // Reset transform\n      context.setTransform(1, 0, 0, 1, 0, 0);\n      context.translate(0.5, 0.5);\n\n      const step = width / data.length;\n      // the data frame currently being shown:\n      const startIndex = Math.floor(Math.max(0, -(offsetX / step)));\n      const endIndex = Math.floor(\n        Math.min(data.length, startIndex + width / step)\n      );\n\n      // skip drawing if there's no data to be drawn\n      if (startIndex > data.length) {\n        return;\n      }\n\n      // Create y-scale\n      const [min, max] = yDomain || d3Extent(data, (d) => d.y);\n      const y = scaleLinear().\n      domain([0, Math.max(-min, max)]).\n      range([0, height]);\n\n      // we are drawing positive & negative bands separately to avoid mutating canvas state\n      // http://www.html5rocks.com/en/tutorials/canvas/performance/\n      let hasNegative = false;\n      // draw positive bands\n      let value;\n      let bExtents;\n      for (let b = 0; b < bands; b += 1) {\n        context.fillStyle = colors[bands + b];\n\n        // Adjust the range based on the current band index.\n        bExtents = (b + 1 - bands) * height;\n        y.range([bands * height + bExtents, bExtents]);\n\n        // only the current data frame is being drawn i.e. what's visible:\n        for (let i = startIndex; i < endIndex; i += 1) {\n          value = data[i].y;\n          if (value <= 0) {\n            hasNegative = true;\n            continue;\n          }\n          if (value !== undefined) {\n            context.fillRect(\n              offsetX + i * step,\n              y(value),\n              step + 1,\n              y(0) - y(value)\n            );\n          }\n        }\n      }\n\n      // draw negative bands\n      if (hasNegative) {\n        // mirror the negative bands, by flipping the canvas\n        if (mode === 'offset') {\n          context.translate(0, height);\n          context.scale(1, -1);\n        }\n\n        for (let b = 0; b < bands; b += 1) {\n          context.fillStyle = colors[bands - b - 1];\n\n          // Adjust the range based on the current band index.\n          bExtents = (b + 1 - bands) * height;\n          y.range([bands * height + bExtents, bExtents]);\n\n          // only the current data frame is being drawn i.e. what's visible:\n          for (let ii = startIndex; ii < endIndex; ii += 1) {\n            value = data[ii].y;\n            if (value >= 0) {\n              continue;\n            }\n            context.fillRect(\n              offsetX + ii * step,\n              y(-value),\n              step + 1,\n              y(0) - y(-value)\n            );\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const { className, title, width, height } = this.props;\n\n    return (\n      _jsxs(\"div\", { className: `horizon-row ${className}`, children: [\n        _jsx(\"span\", { className: \"title\", children: title }),\n        _jsx(\"canvas\", {\n          ref: (c) => {\n            this.canvas = c;\n          },\n          width: width,\n          height: height }\n        )] }\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nHorizonRow.propTypes = propTypes;\nHorizonRow.defaultProps = defaultProps;const _default =\n\nHorizonRow;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_COLORS, \"DEFAULT_COLORS\", \"/app/superset-frontend/plugins/legacy-plugin-chart-horizon/src/HorizonRow.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/plugins/legacy-plugin-chart-horizon/src/HorizonRow.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/plugins/legacy-plugin-chart-horizon/src/HorizonRow.jsx\");reactHotLoader.register(HorizonRow, \"HorizonRow\", \"/app/superset-frontend/plugins/legacy-plugin-chart-horizon/src/HorizonRow.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/plugins/legacy-plugin-chart-horizon/src/HorizonRow.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["PureComponent","PropTypes","extent","d3Extent","scaleLinear","jsx","_jsx","jsxs","_jsxs","DEFAULT_COLORS","propTypes","className","string","width","number","height","data","arrayOf","shape","y","isRequired","bands","colors","colorScale","mode","offsetX","title","yDomain","defaultProps","length","undefined","HorizonRow","componentDidMount","drawChart","componentDidUpdate","componentWillUnmount","canvas","rawData","props","map","d","context","getContext","imageSmoothingEnabled","clearRect","setTransform","translate","step","startIndex","Math","floor","max","endIndex","min","domain","range","hasNegative","value","bExtents","b","fillStyle","i","fillRect","scale","ii","render","children","ref","c","__reactstandin__regenerateByEval","key","code","eval","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/legacy-plugin-chart-horizon/src/HorizonRow.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable no-continue, no-bitwise */\n/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { extent as d3Extent } from 'd3-array';\nimport { scaleLinear } from 'd3-scale';\n\nexport const DEFAULT_COLORS = [\n  '#313695',\n  '#4575b4',\n  '#74add1',\n  '#abd9e9',\n  '#fee090',\n  '#fdae61',\n  '#f46d43',\n  '#d73027',\n];\n\nconst propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      y: PropTypes.number,\n    }),\n  ).isRequired,\n  bands: PropTypes.number,\n  colors: PropTypes.arrayOf(PropTypes.string),\n  colorScale: PropTypes.string,\n  mode: PropTypes.string,\n  offsetX: PropTypes.number,\n  title: PropTypes.string,\n  yDomain: PropTypes.arrayOf(PropTypes.number),\n};\n\nconst defaultProps = {\n  className: '',\n  width: 800,\n  height: 20,\n  bands: DEFAULT_COLORS.length >> 1,\n  colors: DEFAULT_COLORS,\n  colorScale: 'series',\n  mode: 'offset',\n  offsetX: 0,\n  title: '',\n  yDomain: undefined,\n};\n\nclass HorizonRow extends PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  componentDidUpdate() {\n    this.drawChart();\n  }\n\n  componentWillUnmount() {\n    this.canvas = null;\n  }\n\n  drawChart() {\n    if (this.canvas) {\n      const {\n        data: rawData,\n        yDomain,\n        width,\n        height,\n        bands,\n        colors,\n        colorScale,\n        offsetX,\n        mode,\n      } = this.props;\n\n      const data =\n        colorScale === 'change'\n          ? rawData.map(d => ({ ...d, y: d.y - rawData[0].y }))\n          : rawData;\n\n      const context = this.canvas.getContext('2d');\n      context.imageSmoothingEnabled = false;\n      context.clearRect(0, 0, width, height);\n      // Reset transform\n      context.setTransform(1, 0, 0, 1, 0, 0);\n      context.translate(0.5, 0.5);\n\n      const step = width / data.length;\n      // the data frame currently being shown:\n      const startIndex = Math.floor(Math.max(0, -(offsetX / step)));\n      const endIndex = Math.floor(\n        Math.min(data.length, startIndex + width / step),\n      );\n\n      // skip drawing if there's no data to be drawn\n      if (startIndex > data.length) {\n        return;\n      }\n\n      // Create y-scale\n      const [min, max] = yDomain || d3Extent(data, d => d.y);\n      const y = scaleLinear()\n        .domain([0, Math.max(-min, max)])\n        .range([0, height]);\n\n      // we are drawing positive & negative bands separately to avoid mutating canvas state\n      // http://www.html5rocks.com/en/tutorials/canvas/performance/\n      let hasNegative = false;\n      // draw positive bands\n      let value;\n      let bExtents;\n      for (let b = 0; b < bands; b += 1) {\n        context.fillStyle = colors[bands + b];\n\n        // Adjust the range based on the current band index.\n        bExtents = (b + 1 - bands) * height;\n        y.range([bands * height + bExtents, bExtents]);\n\n        // only the current data frame is being drawn i.e. what's visible:\n        for (let i = startIndex; i < endIndex; i += 1) {\n          value = data[i].y;\n          if (value <= 0) {\n            hasNegative = true;\n            continue;\n          }\n          if (value !== undefined) {\n            context.fillRect(\n              offsetX + i * step,\n              y(value),\n              step + 1,\n              y(0) - y(value),\n            );\n          }\n        }\n      }\n\n      // draw negative bands\n      if (hasNegative) {\n        // mirror the negative bands, by flipping the canvas\n        if (mode === 'offset') {\n          context.translate(0, height);\n          context.scale(1, -1);\n        }\n\n        for (let b = 0; b < bands; b += 1) {\n          context.fillStyle = colors[bands - b - 1];\n\n          // Adjust the range based on the current band index.\n          bExtents = (b + 1 - bands) * height;\n          y.range([bands * height + bExtents, bExtents]);\n\n          // only the current data frame is being drawn i.e. what's visible:\n          for (let ii = startIndex; ii < endIndex; ii += 1) {\n            value = data[ii].y;\n            if (value >= 0) {\n              continue;\n            }\n            context.fillRect(\n              offsetX + ii * step,\n              y(-value),\n              step + 1,\n              y(0) - y(-value),\n            );\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const { className, title, width, height } = this.props;\n\n    return (\n      <div className={`horizon-row ${className}`}>\n        <span className=\"title\">{title}</span>\n        <canvas\n          ref={c => {\n            this.canvas = c;\n          }}\n          width={width}\n          height={height}\n        />\n      </div>\n    );\n  }\n}\n\nHorizonRow.propTypes = propTypes;\nHorizonRow.defaultProps = defaultProps;\n\nexport default HorizonRow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}