{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { memo, useMemo } from 'react';\nimport { t, useTruncation } from '@superset-ui/core';\nimport { useFilterScope } from './useFilterScope';\nimport { Row, RowLabel, RowTruncationCount, RowValue, TooltipList, TooltipSectionLabel } from './Styles';\nimport { TooltipWithTruncation } from './TooltipWithTruncation';import { jsxs as _jsxs, jsx as _jsx, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst getTooltipSection = (items, label) => Array.isArray(items) && items.length > 0 ? _jsxs(_Fragment, { children: [\n  _jsxs(TooltipSectionLabel, { children: [label, \":\"] }),\n  _jsx(TooltipList, { children:\n    items.map((item) => _jsx(\"li\", { children: item })) }\n  )] }\n) : null;\nexport const ScopeRow = /*#__PURE__*/memo(__signature__(({ filter }) => {\n  const scope = useFilterScope(filter);\n  const [scopeRef, plusRef, elementsTruncated, hasHiddenElements] = useTruncation();\n  const tooltipText = useMemo(() => {\n    if (elementsTruncated === 0 || !scope) {\n      return null;\n    }\n    if (scope.all) {\n      return _jsx(\"span\", { children: t('All charts') });\n    }\n    return _jsxs(\"div\", { children: [\n      getTooltipSection(scope.tabs, t('Tabs')),\n      getTooltipSection(scope.charts, t('Charts'))] }\n    );\n  }, [elementsTruncated, scope]);\n  return _jsxs(Row, { children: [\n    _jsx(RowLabel, { children: t('Scope') }),\n    _jsxs(TooltipWithTruncation, { title: tooltipText, children: [\n      _jsx(RowValue, { ref: scopeRef, children:\n        scope ?\n        Object.values(scope).\n        flat().\n        map((element, index) => _jsx(\"span\", { children:\n          index === 0 ? element : `, ${element}` }, element\n        )) :\n        t('None') }\n      ),\n      hasHiddenElements && _jsxs(RowTruncationCount, { ref: plusRef, children: [\"+\",\n        elementsTruncated] }\n      )] }\n    )] }\n  );\n}, \"useFilterScope{scope}\\nuseTruncation{[scopeRef, plusRef, elementsTruncated, hasHiddenElements]}\\nuseMemo{tooltipText}\", () => [useFilterScope, useTruncation]));;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getTooltipSection, \"getTooltipSection\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/ScopeRow.tsx\");reactHotLoader.register(ScopeRow, \"ScopeRow\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/ScopeRow.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["memo","useMemo","t","useTruncation","useFilterScope","Row","RowLabel","RowTruncationCount","RowValue","TooltipList","TooltipSectionLabel","TooltipWithTruncation","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","getTooltipSection","items","label","Array","isArray","length","children","map","item","ScopeRow","__signature__","filter","scope","scopeRef","plusRef","elementsTruncated","hasHiddenElements","tooltipText","all","tabs","charts","title","ref","Object","values","flat","element","index","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/ScopeRow.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { memo, useMemo } from 'react';\nimport { t, useTruncation } from '@superset-ui/core';\nimport { useFilterScope } from './useFilterScope';\nimport {\n  Row,\n  RowLabel,\n  RowTruncationCount,\n  RowValue,\n  TooltipList,\n  TooltipSectionLabel,\n} from './Styles';\nimport { FilterCardRowProps } from './types';\nimport { TooltipWithTruncation } from './TooltipWithTruncation';\n\nconst getTooltipSection = (items: string[] | undefined, label: string) =>\n  Array.isArray(items) && items.length > 0 ? (\n    <>\n      <TooltipSectionLabel>{label}:</TooltipSectionLabel>\n      <TooltipList>\n        {items.map(item => (\n          <li>{item}</li>\n        ))}\n      </TooltipList>\n    </>\n  ) : null;\n\nexport const ScopeRow = memo(({ filter }: FilterCardRowProps) => {\n  const scope = useFilterScope(filter);\n\n  const [scopeRef, plusRef, elementsTruncated, hasHiddenElements] =\n    useTruncation();\n  const tooltipText = useMemo(() => {\n    if (elementsTruncated === 0 || !scope) {\n      return null;\n    }\n    if (scope.all) {\n      return <span>{t('All charts')}</span>;\n    }\n    return (\n      <div>\n        {getTooltipSection(scope.tabs, t('Tabs'))}\n        {getTooltipSection(scope.charts, t('Charts'))}\n      </div>\n    );\n  }, [elementsTruncated, scope]);\n\n  return (\n    <Row>\n      <RowLabel>{t('Scope')}</RowLabel>\n      <TooltipWithTruncation title={tooltipText}>\n        <RowValue ref={scopeRef}>\n          {scope\n            ? Object.values(scope)\n                .flat()\n                .map((element, index) => (\n                  <span key={element}>\n                    {index === 0 ? element : `, ${element}`}\n                  </span>\n                ))\n            : t('None')}\n        </RowValue>\n        {hasHiddenElements && (\n          <RowTruncationCount ref={plusRef}>\n            +{elementsTruncated}\n          </RowTruncationCount>\n        )}\n      </TooltipWithTruncation>\n    </Row>\n  );\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}