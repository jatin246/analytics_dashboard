{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport {\n  css,\n  DatasourceType,\n  ensureIsArray,\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  styled,\n  SupersetClient,\n  t,\n  useTheme } from\n'@superset-ui/core';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys } from\n'src/utils/localStorageHelpers';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { buildV1ChartDataPayload } from 'src/explore/exploreUtils';\nimport { getChartRequiredFieldsMissingMessage } from 'src/utils/getChartRequiredFieldsMissingMessage';\nimport { DataTablesPane } from '../DataTablesPane';\nimport { ChartPills } from '../ChartPills';\nimport { ExploreAlert } from '../ExploreAlert';\nimport useResizeDetectorByObserver from './useResizeDetectorByObserver';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onQuery: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  datasource: PropTypes.object,\n  dashboardId: PropTypes.number,\n  column_formats: PropTypes.object,\n  containerId: PropTypes.string.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  vizType: PropTypes.string.isRequired,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  standalone: PropTypes.bool,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  chartIsStale: PropTypes.bool,\n  chart: chartPropShape,\n  errorMessage: PropTypes.node,\n  triggerRender: PropTypes.bool\n};\n\nconst GUTTER_SIZE_FACTOR = 1.25;\n\nconst INITIAL_SIZES = [100, 0];\nconst MIN_SIZES = [300, 65];\nconst DEFAULT_SOUTH_PANE_HEIGHT_PERCENT = 40;\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: stretch;\n  overflow: auto;\n  box-shadow: none;\n  height: 100%;\n\n  & > div {\n    height: 100%;\n  }\n\n  .gutter {\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    width: ${({ theme }) => theme.gridUnit * 9}px;\n    margin: ${({ theme }) => theme.gridUnit * GUTTER_SIZE_FACTOR}px auto;\n  }\n\n  .gutter.gutter-vertical {\n    display: ${({ showSplite }) => showSplite ? 'block' : 'none'};\n    cursor: row-resize;\n  }\n\n  .ant-collapse {\n    .ant-tabs {\n      height: 100%;\n      .ant-tabs-nav {\n        padding-left: ${({ theme }) => theme.gridUnit * 5}px;\n        margin: 0;\n      }\n      .ant-tabs-content-holder {\n        overflow: hidden;\n        .ant-tabs-content {\n          height: 100%;\n        }\n      }\n    }\n  }\n`;var _ref = process.env.NODE_ENV === \"production\" ? { name: \"1wbll7q\", styles: \"text-decoration:underline\" } : { name: \"1iriwhq-panelBody\", styles: \"text-decoration:underline;label:panelBody;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\n\nconst ExploreChartPanel = ({\n  chart,\n  slice,\n  vizType,\n  ownState,\n  triggerRender,\n  force,\n  datasource,\n  errorMessage,\n  form_data: formData,\n  onQuery,\n  actions,\n  timeout,\n  standalone,\n  chartIsStale,\n  chartAlert,\n  can_download: canDownload\n}) => {var _metaDataRegistry$get;\n  const theme = useTheme();\n  const gutterMargin = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const gutterHeight = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const {\n    ref: chartPanelRef,\n    observerRef: resizeObserverRef,\n    width: chartPanelWidth,\n    height: chartPanelHeight\n  } = useResizeDetectorByObserver();\n  const [splitSizes, setSplitSizes] = useState(\n    isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault) ?\n    INITIAL_SIZES :\n    getItem(LocalStorageKeys.ChartSplitSizes, INITIAL_SIZES)\n  );\n  const [showSplite, setShowSplit] = useState(\n    isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault) ?\n    false :\n    getItem(LocalStorageKeys.IsDatapanelOpen, false)\n  );\n\n  const [showDatasetModal, setShowDatasetModal] = useState(false);\n\n  const metaDataRegistry = getChartMetadataRegistry();\n  const { useLegacyApi } = (_metaDataRegistry$get = metaDataRegistry.get(vizType)) != null ? _metaDataRegistry$get : {};\n  const vizTypeNeedsDataset =\n  useLegacyApi && datasource.type !== DatasourceType.Table;\n  // added boolean column to below show boolean so that the errors aren't overlapping\n  const showAlertBanner =\n  !chartAlert &&\n  chartIsStale &&\n  !vizTypeNeedsDataset &&\n  chart.chartStatus !== 'failed' &&\n  ensureIsArray(chart.queriesResponse).length > 0;\n\n  const updateQueryContext = useCallback(\n    async function fetchChartData() {\n      if (slice && slice.query_context === null) {\n        const queryContext = buildV1ChartDataPayload({\n          formData: slice.form_data,\n          force,\n          resultFormat: 'json',\n          resultType: 'full',\n          setDataMask: null,\n          ownState: null\n        });\n\n        await SupersetClient.put({\n          endpoint: `/api/v1/chart/${slice.slice_id}`,\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            query_context: JSON.stringify(queryContext),\n            query_context_generation: true\n          })\n        });\n      }\n    },\n    [slice]\n  );\n\n  useEffect(() => {\n    updateQueryContext();\n  }, [updateQueryContext]);\n\n  useEffect(() => {\n    setItem(LocalStorageKeys.ChartSplitSizes, splitSizes);\n  }, [splitSizes]);\n\n  const onDragEnd = useCallback((sizes) => {\n    setSplitSizes(sizes);\n  }, []);\n\n  const refreshCachedQuery = useCallback(() => {\n    actions.setForceQuery(true);\n    actions.postChartFormData(\n      formData,\n      true,\n      timeout,\n      chart.id,\n      undefined,\n      ownState\n    );\n    actions.updateQueryFormData(formData, chart.id);\n  }, [actions, chart.id, formData, ownState, timeout]);\n\n  const onCollapseChange = useCallback((isOpen) => {\n    let splitSizes;\n    if (!isOpen) {\n      splitSizes = INITIAL_SIZES;\n    } else {\n      splitSizes = [\n      100 - DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n      DEFAULT_SOUTH_PANE_HEIGHT_PERCENT];\n\n    }\n    setSplitSizes(splitSizes);\n    setShowSplit(isOpen);\n  }, []);\n\n  const renderChart = useCallback(\n    () =>\n    _jsx(\"div\", {\n      css: css`\n          min-height: 0;\n          flex: 1;\n          overflow: auto;\n        `,\n      ref: chartPanelRef, children:\n\n      chartPanelWidth && chartPanelHeight &&\n      _jsx(ChartContainer, {\n        width: Math.floor(chartPanelWidth),\n        height: chartPanelHeight,\n        ownState: ownState,\n        annotationData: chart.annotationData,\n        chartAlert: chart.chartAlert,\n        chartStackTrace: chart.chartStackTrace,\n        chartId: chart.id,\n        chartStatus: chart.chartStatus,\n        triggerRender: triggerRender,\n        force: force,\n        datasource: datasource,\n        errorMessage: errorMessage,\n        formData: formData,\n        latestQueryFormData: chart.latestQueryFormData,\n        onQuery: onQuery,\n        queriesResponse: chart.queriesResponse,\n        chartIsStale: chartIsStale,\n        setControlValue: actions.setControlValue,\n        timeout: timeout,\n        triggerQuery: chart.triggerQuery,\n        vizType: vizType }\n      ) }\n\n    ),\n\n    [\n    actions.setControlValue,\n    chart.annotationData,\n    chart.chartAlert,\n    chart.chartStackTrace,\n    chart.chartStatus,\n    chart.id,\n    chart.latestQueryFormData,\n    chart.queriesResponse,\n    chart.triggerQuery,\n    chartIsStale,\n    chartPanelHeight,\n    chartPanelRef,\n    chartPanelWidth,\n    datasource,\n    errorMessage,\n    force,\n    formData,\n    onQuery,\n    ownState,\n    timeout,\n    triggerRender,\n    vizType]\n\n  );\n\n  const panelBody = useMemo(\n    () =>\n    _jsxs(\"div\", {\n      className: \"panel-body\",\n      css: css`\n          display: flex;\n          flex-direction: column;\n        `,\n      ref: resizeObserverRef, children: [\n\n      vizTypeNeedsDataset &&\n      _jsx(Alert, {\n        message: t('Chart type requires a dataset'),\n        type: \"error\",\n        css: (theme) => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `,\n        description:\n        _jsxs(_Fragment, { children: [\n          t(\n            'This chart type is not supported when using an unsaved query as a chart source. '\n          ),\n          _jsx(\"span\", {\n            role: \"button\",\n            tabIndex: 0,\n            onClick: () => setShowDatasetModal(true),\n            css: _ref, children:\n\n            t('Create a dataset') }\n          ),\n          t(' to visualize your data.')] }\n        ) }\n\n      ),\n\n      showAlertBanner &&\n      _jsx(ExploreAlert, {\n        title:\n        errorMessage ?\n        t('Required control values have been removed') :\n        t('Your chart is not up to date'),\n\n        bodyText:\n        errorMessage ?\n        getChartRequiredFieldsMissingMessage(false) :\n\n        _jsxs(\"span\", { children: [\n          t(\n            'You updated the values in the control panel, but the chart was not updated automatically. Run the query by clicking on the \"Update chart\" button or'\n          ), ' ',\n          _jsx(\"span\", { role: \"button\", tabIndex: 0, onClick: onQuery, children:\n            t('click here') }\n          ), \".\"] }\n\n        ),\n\n\n        type: \"warning\",\n        css: (theme) => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            ` }\n      ),\n\n      _jsx(ChartPills, {\n        queriesResponse: chart.queriesResponse,\n        chartStatus: chart.chartStatus,\n        chartUpdateStartTime: chart.chartUpdateStartTime,\n        chartUpdateEndTime: chart.chartUpdateEndTime,\n        refreshCachedQuery: refreshCachedQuery,\n        rowLimit: formData == null ? void 0 : formData.row_limit }\n      ),\n      renderChart()] }\n    ),\n\n    [\n    resizeObserverRef,\n    showAlertBanner,\n    errorMessage,\n    onQuery,\n    chart.queriesResponse,\n    chart.chartStatus,\n    chart.chartUpdateStartTime,\n    chart.chartUpdateEndTime,\n    refreshCachedQuery,\n    formData == null ? void 0 : formData.row_limit,\n    renderChart]\n\n  );\n\n  const standaloneChartBody = useMemo(() => renderChart(), [renderChart]);\n\n  const [queryFormData, setQueryFormData] = useState(chart.latestQueryFormData);\n\n  useEffect(() => {\n    // only update when `latestQueryFormData` changes AND `triggerRender`\n    // is false. No update should be done when only `triggerRender` changes,\n    // as this can trigger a query downstream based on incomplete form data.\n    // (`latestQueryFormData` is only updated when a a valid request has been\n    // triggered).\n    if (!triggerRender) {\n      setQueryFormData(chart.latestQueryFormData);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chart.latestQueryFormData]);\n\n  const elementStyle = useCallback(\n    (dimension, elementSize, gutterSize) => ({\n      [dimension]: `calc(${elementSize}% - ${gutterSize + gutterMargin}px)`\n    }),\n    [gutterMargin]\n  );\n\n  if (standalone) {\n    // dom manipulation hack to get rid of the bootstrap theme's body background\n    const standaloneClass = 'background-transparent';\n    const bodyClasses = document.body.className.split(' ');\n    if (!bodyClasses.includes(standaloneClass)) {\n      document.body.className += ` ${standaloneClass}`;\n    }\n    return (\n      _jsx(\"div\", { id: \"app\", \"data-test\": \"standalone-app\", ref: resizeObserverRef, children:\n        standaloneChartBody }\n      ));\n\n  }\n\n  return (\n    _jsxs(Styles, {\n      className: \"panel panel-default chart-container\",\n      showSplite: showSplite, children: [\n\n      _jsxs(Split, {\n        sizes: splitSizes,\n        minSize: MIN_SIZES,\n        direction: \"vertical\",\n        gutterSize: gutterHeight,\n        onDragEnd: onDragEnd,\n        elementStyle: elementStyle,\n        expandToMin: true, children: [\n\n        panelBody,\n        _jsx(DataTablesPane, {\n          ownState: ownState,\n          queryFormData: queryFormData,\n          datasource: datasource,\n          queryForce: force,\n          onCollapseChange: onCollapseChange,\n          chartStatus: chart.chartStatus,\n          errorMessage: errorMessage,\n          actions: actions,\n          canDownload: canDownload }\n        )] }\n      ),\n      showDatasetModal &&\n      _jsx(SaveDatasetModal, {\n        visible: showDatasetModal,\n        onHide: () => setShowDatasetModal(false),\n        buttonTextOnSave: t('Save'),\n        buttonTextOnOverwrite: t('Overwrite'),\n        datasource: getDatasourceAsSaveableDataset(datasource),\n        openWindow: false,\n        formData: formData }\n      )] }\n\n    ));\n\n};__signature__(ExploreChartPanel, \"useTheme{theme}\\nuseResizeDetectorByObserver{{\\n    ref: chartPanelRef,\\n    observerRef: resizeObserverRef,\\n    width: chartPanelWidth,\\n    height: chartPanelHeight,\\n  }}\\nuseState{[splitSizes, setSplitSizes](isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault)\\n      ? INITIAL_SIZES\\n      : getItem(LocalStorageKeys.ChartSplitSizes, INITIAL_SIZES))}\\nuseState{[showSplite, setShowSplit](isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault)\\n      ? false\\n      : getItem(LocalStorageKeys.IsDatapanelOpen, false))}\\nuseState{[showDatasetModal, setShowDatasetModal](false)}\\nuseCallback{updateQueryContext}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{onDragEnd}\\nuseCallback{refreshCachedQuery}\\nuseCallback{onCollapseChange}\\nuseCallback{renderChart}\\nuseMemo{panelBody}\\nuseMemo{standaloneChartBody}\\nuseState{[queryFormData, setQueryFormData](chart.latestQueryFormData)}\\nuseEffect{}\\nuseCallback{elementStyle}\", () => [useTheme, useResizeDetectorByObserver]);\n\nExploreChartPanel.propTypes = propTypes;const _default =\n\nExploreChartPanel;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(GUTTER_SIZE_FACTOR, \"GUTTER_SIZE_FACTOR\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(INITIAL_SIZES, \"INITIAL_SIZES\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(MIN_SIZES, \"MIN_SIZES\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(DEFAULT_SOUTH_PANE_HEIGHT_PERCENT, \"DEFAULT_SOUTH_PANE_HEIGHT_PERCENT\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(Styles, \"Styles\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(ExploreChartPanel, \"ExploreChartPanel\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","PropTypes","Split","css","DatasourceType","ensureIsArray","isFeatureEnabled","FeatureFlag","getChartMetadataRegistry","styled","SupersetClient","t","useTheme","chartPropShape","ChartContainer","getItem","setItem","LocalStorageKeys","Alert","SaveDatasetModal","getDatasourceAsSaveableDataset","buildV1ChartDataPayload","getChartRequiredFieldsMissingMessage","DataTablesPane","ChartPills","ExploreAlert","useResizeDetectorByObserver","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","propTypes","actions","object","isRequired","onQuery","func","can_overwrite","bool","can_download","datasource","dashboardId","number","column_formats","containerId","string","isStarred","slice","sliceName","table_name","vizType","form_data","ownState","standalone","force","timeout","chartIsStale","chart","errorMessage","node","triggerRender","GUTTER_SIZE_FACTOR","INITIAL_SIZES","MIN_SIZES","DEFAULT_SOUTH_PANE_HEIGHT_PERCENT","Styles","div","theme","colors","grayscale","light2","gridUnit","showSplite","_ref","process","env","NODE_ENV","name","styles","map","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","ExploreChartPanel","formData","chartAlert","canDownload","_metaDataRegistry$get","gutterMargin","gutterHeight","ref","chartPanelRef","observerRef","resizeObserverRef","width","chartPanelWidth","height","chartPanelHeight","splitSizes","setSplitSizes","DatapanelClosedByDefault","ChartSplitSizes","setShowSplit","IsDatapanelOpen","showDatasetModal","setShowDatasetModal","metaDataRegistry","useLegacyApi","get","vizTypeNeedsDataset","type","Table","showAlertBanner","chartStatus","queriesResponse","length","updateQueryContext","fetchChartData","query_context","queryContext","resultFormat","resultType","setDataMask","put","endpoint","slice_id","headers","body","JSON","stringify","query_context_generation","onDragEnd","sizes","refreshCachedQuery","setForceQuery","postChartFormData","id","undefined","updateQueryFormData","onCollapseChange","isOpen","renderChart","children","Math","floor","annotationData","chartStackTrace","chartId","latestQueryFormData","setControlValue","triggerQuery","panelBody","className","message","description","role","tabIndex","onClick","title","bodyText","chartUpdateStartTime","chartUpdateEndTime","rowLimit","row_limit","standaloneChartBody","queryFormData","setQueryFormData","elementStyle","dimension","elementSize","gutterSize","standaloneClass","bodyClasses","document","split","includes","minSize","direction","expandToMin","queryForce","visible","onHide","buttonTextOnSave","buttonTextOnOverwrite","openWindow","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/ExploreChartPanel/index.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Split from 'react-split';\nimport {\n  css,\n  DatasourceType,\n  ensureIsArray,\n  isFeatureEnabled,\n  FeatureFlag,\n  getChartMetadataRegistry,\n  styled,\n  SupersetClient,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport { chartPropShape } from 'src/dashboard/util/propShapes';\nimport ChartContainer from 'src/components/Chart/ChartContainer';\nimport {\n  getItem,\n  setItem,\n  LocalStorageKeys,\n} from 'src/utils/localStorageHelpers';\nimport Alert from 'src/components/Alert';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport { buildV1ChartDataPayload } from 'src/explore/exploreUtils';\nimport { getChartRequiredFieldsMissingMessage } from 'src/utils/getChartRequiredFieldsMissingMessage';\nimport { DataTablesPane } from '../DataTablesPane';\nimport { ChartPills } from '../ChartPills';\nimport { ExploreAlert } from '../ExploreAlert';\nimport useResizeDetectorByObserver from './useResizeDetectorByObserver';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onQuery: PropTypes.func,\n  can_overwrite: PropTypes.bool.isRequired,\n  can_download: PropTypes.bool.isRequired,\n  datasource: PropTypes.object,\n  dashboardId: PropTypes.number,\n  column_formats: PropTypes.object,\n  containerId: PropTypes.string.isRequired,\n  isStarred: PropTypes.bool.isRequired,\n  slice: PropTypes.object,\n  sliceName: PropTypes.string,\n  table_name: PropTypes.string,\n  vizType: PropTypes.string.isRequired,\n  form_data: PropTypes.object,\n  ownState: PropTypes.object,\n  standalone: PropTypes.bool,\n  force: PropTypes.bool,\n  timeout: PropTypes.number,\n  chartIsStale: PropTypes.bool,\n  chart: chartPropShape,\n  errorMessage: PropTypes.node,\n  triggerRender: PropTypes.bool,\n};\n\nconst GUTTER_SIZE_FACTOR = 1.25;\n\nconst INITIAL_SIZES = [100, 0];\nconst MIN_SIZES = [300, 65];\nconst DEFAULT_SOUTH_PANE_HEIGHT_PERCENT = 40;\n\nconst Styles = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: stretch;\n  overflow: auto;\n  box-shadow: none;\n  height: 100%;\n\n  & > div {\n    height: 100%;\n  }\n\n  .gutter {\n    border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    width: ${({ theme }) => theme.gridUnit * 9}px;\n    margin: ${({ theme }) => theme.gridUnit * GUTTER_SIZE_FACTOR}px auto;\n  }\n\n  .gutter.gutter-vertical {\n    display: ${({ showSplite }) => (showSplite ? 'block' : 'none')};\n    cursor: row-resize;\n  }\n\n  .ant-collapse {\n    .ant-tabs {\n      height: 100%;\n      .ant-tabs-nav {\n        padding-left: ${({ theme }) => theme.gridUnit * 5}px;\n        margin: 0;\n      }\n      .ant-tabs-content-holder {\n        overflow: hidden;\n        .ant-tabs-content {\n          height: 100%;\n        }\n      }\n    }\n  }\n`;\n\nconst ExploreChartPanel = ({\n  chart,\n  slice,\n  vizType,\n  ownState,\n  triggerRender,\n  force,\n  datasource,\n  errorMessage,\n  form_data: formData,\n  onQuery,\n  actions,\n  timeout,\n  standalone,\n  chartIsStale,\n  chartAlert,\n  can_download: canDownload,\n}) => {\n  const theme = useTheme();\n  const gutterMargin = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const gutterHeight = theme.gridUnit * GUTTER_SIZE_FACTOR;\n  const {\n    ref: chartPanelRef,\n    observerRef: resizeObserverRef,\n    width: chartPanelWidth,\n    height: chartPanelHeight,\n  } = useResizeDetectorByObserver();\n  const [splitSizes, setSplitSizes] = useState(\n    isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault)\n      ? INITIAL_SIZES\n      : getItem(LocalStorageKeys.ChartSplitSizes, INITIAL_SIZES),\n  );\n  const [showSplite, setShowSplit] = useState(\n    isFeatureEnabled(FeatureFlag.DatapanelClosedByDefault)\n      ? false\n      : getItem(LocalStorageKeys.IsDatapanelOpen, false),\n  );\n\n  const [showDatasetModal, setShowDatasetModal] = useState(false);\n\n  const metaDataRegistry = getChartMetadataRegistry();\n  const { useLegacyApi } = metaDataRegistry.get(vizType) ?? {};\n  const vizTypeNeedsDataset =\n    useLegacyApi && datasource.type !== DatasourceType.Table;\n  // added boolean column to below show boolean so that the errors aren't overlapping\n  const showAlertBanner =\n    !chartAlert &&\n    chartIsStale &&\n    !vizTypeNeedsDataset &&\n    chart.chartStatus !== 'failed' &&\n    ensureIsArray(chart.queriesResponse).length > 0;\n\n  const updateQueryContext = useCallback(\n    async function fetchChartData() {\n      if (slice && slice.query_context === null) {\n        const queryContext = buildV1ChartDataPayload({\n          formData: slice.form_data,\n          force,\n          resultFormat: 'json',\n          resultType: 'full',\n          setDataMask: null,\n          ownState: null,\n        });\n\n        await SupersetClient.put({\n          endpoint: `/api/v1/chart/${slice.slice_id}`,\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            query_context: JSON.stringify(queryContext),\n            query_context_generation: true,\n          }),\n        });\n      }\n    },\n    [slice],\n  );\n\n  useEffect(() => {\n    updateQueryContext();\n  }, [updateQueryContext]);\n\n  useEffect(() => {\n    setItem(LocalStorageKeys.ChartSplitSizes, splitSizes);\n  }, [splitSizes]);\n\n  const onDragEnd = useCallback(sizes => {\n    setSplitSizes(sizes);\n  }, []);\n\n  const refreshCachedQuery = useCallback(() => {\n    actions.setForceQuery(true);\n    actions.postChartFormData(\n      formData,\n      true,\n      timeout,\n      chart.id,\n      undefined,\n      ownState,\n    );\n    actions.updateQueryFormData(formData, chart.id);\n  }, [actions, chart.id, formData, ownState, timeout]);\n\n  const onCollapseChange = useCallback(isOpen => {\n    let splitSizes;\n    if (!isOpen) {\n      splitSizes = INITIAL_SIZES;\n    } else {\n      splitSizes = [\n        100 - DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n        DEFAULT_SOUTH_PANE_HEIGHT_PERCENT,\n      ];\n    }\n    setSplitSizes(splitSizes);\n    setShowSplit(isOpen);\n  }, []);\n\n  const renderChart = useCallback(\n    () => (\n      <div\n        css={css`\n          min-height: 0;\n          flex: 1;\n          overflow: auto;\n        `}\n        ref={chartPanelRef}\n      >\n        {chartPanelWidth && chartPanelHeight && (\n          <ChartContainer\n            width={Math.floor(chartPanelWidth)}\n            height={chartPanelHeight}\n            ownState={ownState}\n            annotationData={chart.annotationData}\n            chartAlert={chart.chartAlert}\n            chartStackTrace={chart.chartStackTrace}\n            chartId={chart.id}\n            chartStatus={chart.chartStatus}\n            triggerRender={triggerRender}\n            force={force}\n            datasource={datasource}\n            errorMessage={errorMessage}\n            formData={formData}\n            latestQueryFormData={chart.latestQueryFormData}\n            onQuery={onQuery}\n            queriesResponse={chart.queriesResponse}\n            chartIsStale={chartIsStale}\n            setControlValue={actions.setControlValue}\n            timeout={timeout}\n            triggerQuery={chart.triggerQuery}\n            vizType={vizType}\n          />\n        )}\n      </div>\n    ),\n    [\n      actions.setControlValue,\n      chart.annotationData,\n      chart.chartAlert,\n      chart.chartStackTrace,\n      chart.chartStatus,\n      chart.id,\n      chart.latestQueryFormData,\n      chart.queriesResponse,\n      chart.triggerQuery,\n      chartIsStale,\n      chartPanelHeight,\n      chartPanelRef,\n      chartPanelWidth,\n      datasource,\n      errorMessage,\n      force,\n      formData,\n      onQuery,\n      ownState,\n      timeout,\n      triggerRender,\n      vizType,\n    ],\n  );\n\n  const panelBody = useMemo(\n    () => (\n      <div\n        className=\"panel-body\"\n        css={css`\n          display: flex;\n          flex-direction: column;\n        `}\n        ref={resizeObserverRef}\n      >\n        {vizTypeNeedsDataset && (\n          <Alert\n            message={t('Chart type requires a dataset')}\n            type=\"error\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n            description={\n              <>\n                {t(\n                  'This chart type is not supported when using an unsaved query as a chart source. ',\n                )}\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  onClick={() => setShowDatasetModal(true)}\n                  css={{ textDecoration: 'underline' }}\n                >\n                  {t('Create a dataset')}\n                </span>\n                {t(' to visualize your data.')}\n              </>\n            }\n          />\n        )}\n        {showAlertBanner && (\n          <ExploreAlert\n            title={\n              errorMessage\n                ? t('Required control values have been removed')\n                : t('Your chart is not up to date')\n            }\n            bodyText={\n              errorMessage ? (\n                getChartRequiredFieldsMissingMessage(false)\n              ) : (\n                <span>\n                  {t(\n                    'You updated the values in the control panel, but the chart was not updated automatically. Run the query by clicking on the \"Update chart\" button or',\n                  )}{' '}\n                  <span role=\"button\" tabIndex={0} onClick={onQuery}>\n                    {t('click here')}\n                  </span>\n                  .\n                </span>\n              )\n            }\n            type=\"warning\"\n            css={theme => css`\n              margin: 0 0 ${theme.gridUnit * 4}px 0;\n            `}\n          />\n        )}\n        <ChartPills\n          queriesResponse={chart.queriesResponse}\n          chartStatus={chart.chartStatus}\n          chartUpdateStartTime={chart.chartUpdateStartTime}\n          chartUpdateEndTime={chart.chartUpdateEndTime}\n          refreshCachedQuery={refreshCachedQuery}\n          rowLimit={formData?.row_limit}\n        />\n        {renderChart()}\n      </div>\n    ),\n    [\n      resizeObserverRef,\n      showAlertBanner,\n      errorMessage,\n      onQuery,\n      chart.queriesResponse,\n      chart.chartStatus,\n      chart.chartUpdateStartTime,\n      chart.chartUpdateEndTime,\n      refreshCachedQuery,\n      formData?.row_limit,\n      renderChart,\n    ],\n  );\n\n  const standaloneChartBody = useMemo(() => renderChart(), [renderChart]);\n\n  const [queryFormData, setQueryFormData] = useState(chart.latestQueryFormData);\n\n  useEffect(() => {\n    // only update when `latestQueryFormData` changes AND `triggerRender`\n    // is false. No update should be done when only `triggerRender` changes,\n    // as this can trigger a query downstream based on incomplete form data.\n    // (`latestQueryFormData` is only updated when a a valid request has been\n    // triggered).\n    if (!triggerRender) {\n      setQueryFormData(chart.latestQueryFormData);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chart.latestQueryFormData]);\n\n  const elementStyle = useCallback(\n    (dimension, elementSize, gutterSize) => ({\n      [dimension]: `calc(${elementSize}% - ${gutterSize + gutterMargin}px)`,\n    }),\n    [gutterMargin],\n  );\n\n  if (standalone) {\n    // dom manipulation hack to get rid of the bootstrap theme's body background\n    const standaloneClass = 'background-transparent';\n    const bodyClasses = document.body.className.split(' ');\n    if (!bodyClasses.includes(standaloneClass)) {\n      document.body.className += ` ${standaloneClass}`;\n    }\n    return (\n      <div id=\"app\" data-test=\"standalone-app\" ref={resizeObserverRef}>\n        {standaloneChartBody}\n      </div>\n    );\n  }\n\n  return (\n    <Styles\n      className=\"panel panel-default chart-container\"\n      showSplite={showSplite}\n    >\n      <Split\n        sizes={splitSizes}\n        minSize={MIN_SIZES}\n        direction=\"vertical\"\n        gutterSize={gutterHeight}\n        onDragEnd={onDragEnd}\n        elementStyle={elementStyle}\n        expandToMin\n      >\n        {panelBody}\n        <DataTablesPane\n          ownState={ownState}\n          queryFormData={queryFormData}\n          datasource={datasource}\n          queryForce={force}\n          onCollapseChange={onCollapseChange}\n          chartStatus={chart.chartStatus}\n          errorMessage={errorMessage}\n          actions={actions}\n          canDownload={canDownload}\n        />\n      </Split>\n      {showDatasetModal && (\n        <SaveDatasetModal\n          visible={showDatasetModal}\n          onHide={() => setShowDatasetModal(false)}\n          buttonTextOnSave={t('Save')}\n          buttonTextOnOverwrite={t('Overwrite')}\n          datasource={getDatasourceAsSaveableDataset(datasource)}\n          openWindow={false}\n          formData={formData}\n        />\n      )}\n    </Styles>\n  );\n};\n\nExploreChartPanel.propTypes = propTypes;\n\nexport default ExploreChartPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}