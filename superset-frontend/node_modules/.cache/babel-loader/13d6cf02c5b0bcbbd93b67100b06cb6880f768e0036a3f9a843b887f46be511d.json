{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createRef, useMemo } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Tabs from 'src/components/Tabs';\nimport { styled, t } from '@superset-ui/core';\nimport { setActiveSouthPaneTab } from 'src/SqlLab/actions/sqlLab';\nimport Label from 'src/components/Label';\nimport QueryHistory from '../QueryHistory';\nimport ResultSet from '../ResultSet';\nimport { STATUS_OPTIONS, STATE_TYPE_MAP, STATUS_OPTIONS_LOCALIZED } from '../../constants';\nimport Results from './Results';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst TAB_HEIGHT = 130;\nconst StyledPane = styled.div`\n  width: 100%;\n  height: ${(props) => props.height}px;\n  .ant-tabs .ant-tabs-content-holder {\n    overflow: visible;\n  }\n  .SouthPaneTabs {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    .scrollable {\n      overflow-y: auto;\n    }\n  }\n  .ant-tabs-tabpane {\n    .scrollable {\n      overflow-y: auto;\n    }\n  }\n  .tab-content {\n    .alert {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    button.fetch {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n`;\nconst SouthPane = ({ queryEditorId, latestQueryId, height, displayLimit, defaultQueryLimit }) => {var _useSelector;\n  const dispatch = useDispatch();\n  const { offline, tables } = useSelector(({ sqlLab: { offline, tables } }) => ({\n    offline,\n    tables\n  }), shallowEqual);\n  const queries = useSelector(({ sqlLab: { queries } }) => Object.keys(queries), shallowEqual);\n  const activeSouthPaneTab = (_useSelector = useSelector((state) => state.sqlLab.activeSouthPaneTab)) != null ? _useSelector : 'Results';\n  const querySet = useMemo(() => new Set(queries), [queries]);\n  const dataPreviewQueries = useMemo(() => tables.filter(({ dataPreviewQueryId, queryEditorId: qeId }) => dataPreviewQueryId &&\n  queryEditorId === qeId &&\n  querySet.has(dataPreviewQueryId)), [queryEditorId, tables, querySet]);\n  const innerTabContentHeight = height - TAB_HEIGHT;\n  const southPaneRef = /*#__PURE__*/createRef();\n  const switchTab = (id) => {\n    dispatch(setActiveSouthPaneTab(id));\n  };\n  return offline ? _jsx(Label, { className: \"m-r-3\", type: STATE_TYPE_MAP[STATUS_OPTIONS.offline], children:\n    STATUS_OPTIONS_LOCALIZED.offline }\n  ) : _jsx(StyledPane, { \"data-test\": \"south-pane\", className: \"SouthPane\", height: height, ref: southPaneRef, children:\n    _jsxs(Tabs, { activeKey: activeSouthPaneTab, className: \"SouthPaneTabs\", onChange: switchTab, id: nanoid(11), fullWidth: false, animated: false, children: [\n      _jsx(Tabs.TabPane, { tab: t('Results'), children:\n        _jsx(Results, { height: innerTabContentHeight, latestQueryId: latestQueryId, displayLimit: displayLimit, defaultQueryLimit: defaultQueryLimit }) }, \"Results\"\n      ),\n      _jsx(Tabs.TabPane, { tab: t('Query history'), children:\n        _jsx(QueryHistory, { queryEditorId: queryEditorId, displayLimit: displayLimit, latestQueryId: latestQueryId }) }, \"History\"\n      ),\n      dataPreviewQueries.map(({ name, dataPreviewQueryId }) => dataPreviewQueryId && _jsx(Tabs.TabPane, { tab: t('Preview: `%s`', decodeURIComponent(name)), children:\n        _jsx(ResultSet, { queryId: dataPreviewQueryId, visualize: false, csv: false, cache: true, height: innerTabContentHeight, displayLimit: displayLimit, defaultQueryLimit: defaultQueryLimit }) }, dataPreviewQueryId\n      ))] }\n    ) }\n  );\n};__signature__(SouthPane, \"useDispatch{dispatch}\\nuseSelector{{ offline, tables }}\\nuseSelector{queries}\\nuseSelector{}\\nuseMemo{querySet}\\nuseMemo{dataPreviewQueries}\", () => [useDispatch, useSelector, useSelector, useSelector]);const _default =\nSouthPane;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TAB_HEIGHT, \"TAB_HEIGHT\", \"/app/superset-frontend/src/SqlLab/components/SouthPane/index.tsx\");reactHotLoader.register(StyledPane, \"StyledPane\", \"/app/superset-frontend/src/SqlLab/components/SouthPane/index.tsx\");reactHotLoader.register(SouthPane, \"SouthPane\", \"/app/superset-frontend/src/SqlLab/components/SouthPane/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/SouthPane/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["createRef","useMemo","shallowEqual","useDispatch","useSelector","nanoid","Tabs","styled","t","setActiveSouthPaneTab","Label","QueryHistory","ResultSet","STATUS_OPTIONS","STATE_TYPE_MAP","STATUS_OPTIONS_LOCALIZED","Results","jsx","_jsx","jsxs","_jsxs","TAB_HEIGHT","StyledPane","div","props","height","theme","gridUnit","SouthPane","queryEditorId","latestQueryId","displayLimit","defaultQueryLimit","_useSelector","dispatch","offline","tables","sqlLab","queries","Object","keys","activeSouthPaneTab","state","querySet","Set","dataPreviewQueries","filter","dataPreviewQueryId","qeId","has","innerTabContentHeight","southPaneRef","switchTab","id","className","type","children","ref","activeKey","onChange","fullWidth","animated","TabPane","tab","map","name","decodeURIComponent","queryId","visualize","csv","cache","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/SqlLab/components/SouthPane/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createRef, useMemo } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Tabs from 'src/components/Tabs';\nimport { styled, t } from '@superset-ui/core';\n\nimport { setActiveSouthPaneTab } from 'src/SqlLab/actions/sqlLab';\n\nimport Label from 'src/components/Label';\nimport { SqlLabRootState } from 'src/SqlLab/types';\nimport QueryHistory from '../QueryHistory';\nimport ResultSet from '../ResultSet';\nimport {\n  STATUS_OPTIONS,\n  STATE_TYPE_MAP,\n  STATUS_OPTIONS_LOCALIZED,\n} from '../../constants';\nimport Results from './Results';\n\nconst TAB_HEIGHT = 130;\n\n/*\n    editorQueries are queries executed by users passed from SqlEditor component\n    dataPreviewQueries are all queries executed for preview of table data (from SqlEditorLeft)\n*/\nexport interface SouthPaneProps {\n  queryEditorId: string;\n  latestQueryId?: string;\n  height: number;\n  displayLimit: number;\n  defaultQueryLimit: number;\n}\n\ntype StyledPaneProps = {\n  height: number;\n};\n\nconst StyledPane = styled.div<StyledPaneProps>`\n  width: 100%;\n  height: ${props => props.height}px;\n  .ant-tabs .ant-tabs-content-holder {\n    overflow: visible;\n  }\n  .SouthPaneTabs {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    .scrollable {\n      overflow-y: auto;\n    }\n  }\n  .ant-tabs-tabpane {\n    .scrollable {\n      overflow-y: auto;\n    }\n  }\n  .tab-content {\n    .alert {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    button.fetch {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n`;\n\nconst SouthPane = ({\n  queryEditorId,\n  latestQueryId,\n  height,\n  displayLimit,\n  defaultQueryLimit,\n}: SouthPaneProps) => {\n  const dispatch = useDispatch();\n  const { offline, tables } = useSelector(\n    ({ sqlLab: { offline, tables } }: SqlLabRootState) => ({\n      offline,\n      tables,\n    }),\n    shallowEqual,\n  );\n  const queries = useSelector(\n    ({ sqlLab: { queries } }: SqlLabRootState) => Object.keys(queries),\n    shallowEqual,\n  );\n  const activeSouthPaneTab =\n    useSelector<SqlLabRootState, string>(\n      state => state.sqlLab.activeSouthPaneTab as string,\n    ) ?? 'Results';\n\n  const querySet = useMemo(() => new Set(queries), [queries]);\n  const dataPreviewQueries = useMemo(\n    () =>\n      tables.filter(\n        ({ dataPreviewQueryId, queryEditorId: qeId }) =>\n          dataPreviewQueryId &&\n          queryEditorId === qeId &&\n          querySet.has(dataPreviewQueryId),\n      ),\n    [queryEditorId, tables, querySet],\n  );\n  const innerTabContentHeight = height - TAB_HEIGHT;\n  const southPaneRef = createRef<HTMLDivElement>();\n  const switchTab = (id: string) => {\n    dispatch(setActiveSouthPaneTab(id));\n  };\n\n  return offline ? (\n    <Label className=\"m-r-3\" type={STATE_TYPE_MAP[STATUS_OPTIONS.offline]}>\n      {STATUS_OPTIONS_LOCALIZED.offline}\n    </Label>\n  ) : (\n    <StyledPane\n      data-test=\"south-pane\"\n      className=\"SouthPane\"\n      height={height}\n      ref={southPaneRef}\n    >\n      <Tabs\n        activeKey={activeSouthPaneTab}\n        className=\"SouthPaneTabs\"\n        onChange={switchTab}\n        id={nanoid(11)}\n        fullWidth={false}\n        animated={false}\n      >\n        <Tabs.TabPane tab={t('Results')} key=\"Results\">\n          <Results\n            height={innerTabContentHeight}\n            latestQueryId={latestQueryId}\n            displayLimit={displayLimit}\n            defaultQueryLimit={defaultQueryLimit}\n          />\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={t('Query history')} key=\"History\">\n          <QueryHistory\n            queryEditorId={queryEditorId}\n            displayLimit={displayLimit}\n            latestQueryId={latestQueryId}\n          />\n        </Tabs.TabPane>\n        {dataPreviewQueries.map(\n          ({ name, dataPreviewQueryId }) =>\n            dataPreviewQueryId && (\n              <Tabs.TabPane\n                tab={t('Preview: `%s`', decodeURIComponent(name))}\n                key={dataPreviewQueryId}\n              >\n                <ResultSet\n                  queryId={dataPreviewQueryId}\n                  visualize={false}\n                  csv={false}\n                  cache\n                  height={innerTabContentHeight}\n                  displayLimit={displayLimit}\n                  defaultQueryLimit={defaultQueryLimit}\n                />\n              </Tabs.TabPane>\n            ),\n        )}\n      </Tabs>\n    </StyledPane>\n  );\n};\n\nexport default SouthPane;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}