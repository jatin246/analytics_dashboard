{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState } from 'react';\nimport { styled, t, useTheme } from '@superset-ui/core';\nimport { ColorSchemeEnum } from '@superset-ui/plugin-chart-table';\nimport { Comparator, MultipleValueComparators } from '@superset-ui/chart-controls';\nimport { Form, FormItem } from 'src/components/Form';\nimport Select from 'src/components/Select/Select';\nimport { Col, Row } from 'src/components';\nimport { InputNumber } from 'src/components/Input';\nimport Button from 'src/components/Button';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst FullWidthInputNumber = styled(InputNumber)`\n  width: 100%;\n`;\nconst JustifyEnd = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\nconst colorSchemeOptions = (theme) => [\n{ value: theme.colors.success.light1, label: t('success') },\n{ value: theme.colors.alert.light1, label: t('alert') },\n{ value: theme.colors.error.light1, label: t('error') },\n{ value: theme.colors.success.dark1, label: t('success dark') },\n{ value: theme.colors.alert.dark1, label: t('alert dark') },\n{ value: theme.colors.error.dark1, label: t('error dark') }];\n\nconst operatorOptions = [\n{ value: Comparator.None, label: t('None') },\n{ value: Comparator.GreaterThan, label: '>' },\n{ value: Comparator.LessThan, label: '<' },\n{ value: Comparator.GreaterOrEqual, label: '≥' },\n{ value: Comparator.LessOrEqual, label: '≤' },\n{ value: Comparator.Equal, label: '=' },\n{ value: Comparator.NotEqual, label: '≠' },\n{ value: Comparator.Between, label: '< x <' },\n{ value: Comparator.BetweenOrEqual, label: '≤ x ≤' },\n{ value: Comparator.BetweenOrLeftEqual, label: '≤ x <' },\n{ value: Comparator.BetweenOrRightEqual, label: '< x ≤' }];\n\nconst targetValueValidator = (compare, rejectMessage) => (targetValue) => (_, compareValue) => {\n  if (!targetValue ||\n  !compareValue ||\n  compare(Number(targetValue), Number(compareValue))) {\n    return Promise.resolve();\n  }\n  return Promise.reject(new Error(rejectMessage));\n};\nconst targetValueLeftValidator = targetValueValidator((target, val) => target > val, t('This value should be smaller than the right target value'));\nconst targetValueRightValidator = targetValueValidator((target, val) => target < val, t('This value should be greater than the left target value'));\nconst isOperatorMultiValue = (operator) => operator && MultipleValueComparators.includes(operator);\nconst isOperatorNone = (operator) => !operator || operator === Comparator.None;\nconst rulesRequired = [{ required: true, message: t('Required') }];\nconst rulesTargetValueLeft = [\n{ required: true, message: t('Required') },\n({ getFieldValue }) => ({\n  validator: targetValueLeftValidator(getFieldValue('targetValueRight'))\n})];\n\nconst rulesTargetValueRight = [\n{ required: true, message: t('Required') },\n({ getFieldValue }) => ({\n  validator: targetValueRightValidator(getFieldValue('targetValueLeft'))\n})];\n\nconst targetValueLeftDeps = ['targetValueRight'];\nconst targetValueRightDeps = ['targetValueLeft'];\nconst shouldFormItemUpdate = (prevValues, currentValues) => isOperatorNone(prevValues.operator) !==\nisOperatorNone(currentValues.operator) ||\nisOperatorMultiValue(prevValues.operator) !==\nisOperatorMultiValue(currentValues.operator);\nconst renderOperator = ({ showOnlyNone } = {}) => _jsx(FormItem, { name: \"operator\", label: t('Operator'), rules: rulesRequired, initialValue: operatorOptions[0].value, children:\n  _jsx(Select, { ariaLabel: t('Operator'), options: showOnlyNone ? [operatorOptions[0]] : operatorOptions }) }\n);\nconst renderOperatorFields = ({ getFieldValue }) => isOperatorNone(getFieldValue('operator')) ? _jsx(Row, { gutter: 12, children:\n  _jsx(Col, { span: 6, children: renderOperator() }) }\n) : isOperatorMultiValue(getFieldValue('operator')) ? _jsxs(Row, { gutter: 12, children: [\n  _jsx(Col, { span: 9, children:\n    _jsx(FormItem, { name: \"targetValueLeft\", label: t('Left value'), rules: rulesTargetValueLeft, dependencies: targetValueLeftDeps, validateTrigger: \"onBlur\", trigger: \"onBlur\", children:\n      _jsx(FullWidthInputNumber, {}) }\n    ) }\n  ),\n  _jsx(Col, { span: 6, children: renderOperator() }),\n  _jsx(Col, { span: 9, children:\n    _jsx(FormItem, { name: \"targetValueRight\", label: t('Right value'), rules: rulesTargetValueRight, dependencies: targetValueRightDeps, validateTrigger: \"onBlur\", trigger: \"onBlur\", children:\n      _jsx(FullWidthInputNumber, {}) }\n    ) }\n  )] }\n) : _jsxs(Row, { gutter: 12, children: [\n  _jsx(Col, { span: 6, children: renderOperator() }),\n  _jsx(Col, { span: 18, children:\n    _jsx(FormItem, { name: \"targetValue\", label: t('Target value'), rules: rulesRequired, children:\n      _jsx(FullWidthInputNumber, {}) }\n    ) }\n  )] }\n);\nexport const FormattingPopoverContent = ({ config, onChange, columns = [], extraColorChoices = [] }) => {var _columns$;\n  const theme = useTheme();\n  const colorScheme = colorSchemeOptions(theme);\n  const [showOperatorFields, setShowOperatorFields] = useState(config === undefined ||\n  (config == null ? void 0 : config.colorScheme) !== ColorSchemeEnum.Green &&\n  (config == null ? void 0 : config.colorScheme) !== ColorSchemeEnum.Red);\n  const handleChange = (event) => {\n    setShowOperatorFields(!(event === ColorSchemeEnum.Green || event === ColorSchemeEnum.Red));\n  };\n  return _jsxs(Form, { onFinish: onChange, initialValues: config, requiredMark: \"optional\", layout: \"vertical\", children: [\n    _jsxs(Row, { gutter: 12, children: [\n      _jsx(Col, { span: 12, children:\n        _jsx(FormItem, { name: \"column\", label: t('Column'), rules: rulesRequired, initialValue: (_columns$ = columns[0]) == null ? void 0 : _columns$.value, children:\n          _jsx(Select, { ariaLabel: t('Select column'), options: columns }) }\n        ) }\n      ),\n      _jsx(Col, { span: 12, children:\n        _jsx(FormItem, { name: \"colorScheme\", label: t('Color scheme'), rules: rulesRequired, initialValue: colorScheme[0].value, children:\n          _jsx(Select, { onChange: (event) => handleChange(event), ariaLabel: t('Color scheme'), options: [...colorScheme, ...extraColorChoices] }) }\n        ) }\n      )] }\n    ),\n    _jsx(FormItem, { noStyle: true, shouldUpdate: shouldFormItemUpdate, children:\n      showOperatorFields ? renderOperatorFields : _jsx(Row, { gutter: 12, children:\n        _jsx(Col, { span: 6, children: renderOperator({ showOnlyNone: true }) }) }\n      ) }\n    ),\n    _jsx(FormItem, { children:\n      _jsx(JustifyEnd, { children:\n        _jsx(Button, { htmlType: \"submit\", buttonStyle: \"primary\", children:\n          t('Apply') }\n        ) }\n      ) }\n    )] }\n  );\n};__signature__(FormattingPopoverContent, \"useTheme{theme}\\nuseState{[showOperatorFields, setShowOperatorFields](config === undefined ||\\n        (config?.colorScheme !== ColorSchemeEnum.Green &&\\n            config?.colorScheme !== ColorSchemeEnum.Red))}\", () => [useTheme]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(FullWidthInputNumber, \"FullWidthInputNumber\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(JustifyEnd, \"JustifyEnd\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(colorSchemeOptions, \"colorSchemeOptions\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(operatorOptions, \"operatorOptions\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(targetValueValidator, \"targetValueValidator\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(targetValueLeftValidator, \"targetValueLeftValidator\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(targetValueRightValidator, \"targetValueRightValidator\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(isOperatorMultiValue, \"isOperatorMultiValue\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(isOperatorNone, \"isOperatorNone\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(rulesRequired, \"rulesRequired\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(rulesTargetValueLeft, \"rulesTargetValueLeft\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(rulesTargetValueRight, \"rulesTargetValueRight\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(targetValueLeftDeps, \"targetValueLeftDeps\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(targetValueRightDeps, \"targetValueRightDeps\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(shouldFormItemUpdate, \"shouldFormItemUpdate\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(renderOperator, \"renderOperator\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(renderOperatorFields, \"renderOperatorFields\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");reactHotLoader.register(FormattingPopoverContent, \"FormattingPopoverContent\", \"/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","styled","t","useTheme","ColorSchemeEnum","Comparator","MultipleValueComparators","Form","FormItem","Select","Col","Row","InputNumber","Button","jsx","_jsx","jsxs","_jsxs","FullWidthInputNumber","JustifyEnd","div","colorSchemeOptions","theme","value","colors","success","light1","label","alert","error","dark1","operatorOptions","None","GreaterThan","LessThan","GreaterOrEqual","LessOrEqual","Equal","NotEqual","Between","BetweenOrEqual","BetweenOrLeftEqual","BetweenOrRightEqual","targetValueValidator","compare","rejectMessage","targetValue","_","compareValue","Number","Promise","resolve","reject","Error","targetValueLeftValidator","target","val","targetValueRightValidator","isOperatorMultiValue","operator","includes","isOperatorNone","rulesRequired","required","message","rulesTargetValueLeft","getFieldValue","validator","rulesTargetValueRight","targetValueLeftDeps","targetValueRightDeps","shouldFormItemUpdate","prevValues","currentValues","renderOperator","showOnlyNone","name","rules","initialValue","children","ariaLabel","options","renderOperatorFields","gutter","span","dependencies","validateTrigger","trigger","FormattingPopoverContent","config","onChange","columns","extraColorChoices","_columns$","colorScheme","showOperatorFields","setShowOperatorFields","undefined","Green","Red","handleChange","event","onFinish","initialValues","requiredMark","layout","noStyle","shouldUpdate","htmlType","buttonStyle","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/controls/ConditionalFormattingControl/FormattingPopoverContent.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState } from 'react';\nimport { styled, SupersetTheme, t, useTheme } from '@superset-ui/core';\nimport { ColorSchemeEnum } from '@superset-ui/plugin-chart-table';\nimport {\n  Comparator,\n  MultipleValueComparators,\n} from '@superset-ui/chart-controls';\nimport { Form, FormItem, FormProps } from 'src/components/Form';\nimport Select from 'src/components/Select/Select';\nimport { Col, Row } from 'src/components';\nimport { InputNumber } from 'src/components/Input';\nimport Button from 'src/components/Button';\nimport { ConditionalFormattingConfig } from './types';\n\nconst FullWidthInputNumber = styled(InputNumber)`\n  width: 100%;\n`;\n\nconst JustifyEnd = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst colorSchemeOptions = (theme: SupersetTheme) => [\n  { value: theme.colors.success.light1, label: t('success') },\n  { value: theme.colors.alert.light1, label: t('alert') },\n  { value: theme.colors.error.light1, label: t('error') },\n  { value: theme.colors.success.dark1, label: t('success dark') },\n  { value: theme.colors.alert.dark1, label: t('alert dark') },\n  { value: theme.colors.error.dark1, label: t('error dark') },\n];\n\nconst operatorOptions = [\n  { value: Comparator.None, label: t('None') },\n  { value: Comparator.GreaterThan, label: '>' },\n  { value: Comparator.LessThan, label: '<' },\n  { value: Comparator.GreaterOrEqual, label: '≥' },\n  { value: Comparator.LessOrEqual, label: '≤' },\n  { value: Comparator.Equal, label: '=' },\n  { value: Comparator.NotEqual, label: '≠' },\n  { value: Comparator.Between, label: '< x <' },\n  { value: Comparator.BetweenOrEqual, label: '≤ x ≤' },\n  { value: Comparator.BetweenOrLeftEqual, label: '≤ x <' },\n  { value: Comparator.BetweenOrRightEqual, label: '< x ≤' },\n];\n\nconst targetValueValidator =\n  (\n    compare: (targetValue: number, compareValue: number) => boolean,\n    rejectMessage: string,\n  ) =>\n  (targetValue: number | string) =>\n  (_: any, compareValue: number | string) => {\n    if (\n      !targetValue ||\n      !compareValue ||\n      compare(Number(targetValue), Number(compareValue))\n    ) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error(rejectMessage));\n  };\n\nconst targetValueLeftValidator = targetValueValidator(\n  (target: number, val: number) => target > val,\n  t('This value should be smaller than the right target value'),\n);\n\nconst targetValueRightValidator = targetValueValidator(\n  (target: number, val: number) => target < val,\n  t('This value should be greater than the left target value'),\n);\n\nconst isOperatorMultiValue = (operator?: Comparator) =>\n  operator && MultipleValueComparators.includes(operator);\n\nconst isOperatorNone = (operator?: Comparator) =>\n  !operator || operator === Comparator.None;\n\nconst rulesRequired = [{ required: true, message: t('Required') }];\n\ntype GetFieldValue = Pick<Required<FormProps>['form'], 'getFieldValue'>;\nconst rulesTargetValueLeft = [\n  { required: true, message: t('Required') },\n  ({ getFieldValue }: GetFieldValue) => ({\n    validator: targetValueLeftValidator(getFieldValue('targetValueRight')),\n  }),\n];\n\nconst rulesTargetValueRight = [\n  { required: true, message: t('Required') },\n  ({ getFieldValue }: GetFieldValue) => ({\n    validator: targetValueRightValidator(getFieldValue('targetValueLeft')),\n  }),\n];\n\nconst targetValueLeftDeps = ['targetValueRight'];\nconst targetValueRightDeps = ['targetValueLeft'];\n\nconst shouldFormItemUpdate = (\n  prevValues: ConditionalFormattingConfig,\n  currentValues: ConditionalFormattingConfig,\n) =>\n  isOperatorNone(prevValues.operator) !==\n    isOperatorNone(currentValues.operator) ||\n  isOperatorMultiValue(prevValues.operator) !==\n    isOperatorMultiValue(currentValues.operator);\n\nconst renderOperator = ({ showOnlyNone }: { showOnlyNone?: boolean } = {}) => (\n  <FormItem\n    name=\"operator\"\n    label={t('Operator')}\n    rules={rulesRequired}\n    initialValue={operatorOptions[0].value}\n  >\n    <Select\n      ariaLabel={t('Operator')}\n      options={showOnlyNone ? [operatorOptions[0]] : operatorOptions}\n    />\n  </FormItem>\n);\n\nconst renderOperatorFields = ({ getFieldValue }: GetFieldValue) =>\n  isOperatorNone(getFieldValue('operator')) ? (\n    <Row gutter={12}>\n      <Col span={6}>{renderOperator()}</Col>\n    </Row>\n  ) : isOperatorMultiValue(getFieldValue('operator')) ? (\n    <Row gutter={12}>\n      <Col span={9}>\n        <FormItem\n          name=\"targetValueLeft\"\n          label={t('Left value')}\n          rules={rulesTargetValueLeft}\n          dependencies={targetValueLeftDeps}\n          validateTrigger=\"onBlur\"\n          trigger=\"onBlur\"\n        >\n          <FullWidthInputNumber />\n        </FormItem>\n      </Col>\n      <Col span={6}>{renderOperator()}</Col>\n      <Col span={9}>\n        <FormItem\n          name=\"targetValueRight\"\n          label={t('Right value')}\n          rules={rulesTargetValueRight}\n          dependencies={targetValueRightDeps}\n          validateTrigger=\"onBlur\"\n          trigger=\"onBlur\"\n        >\n          <FullWidthInputNumber />\n        </FormItem>\n      </Col>\n    </Row>\n  ) : (\n    <Row gutter={12}>\n      <Col span={6}>{renderOperator()}</Col>\n      <Col span={18}>\n        <FormItem\n          name=\"targetValue\"\n          label={t('Target value')}\n          rules={rulesRequired}\n        >\n          <FullWidthInputNumber />\n        </FormItem>\n      </Col>\n    </Row>\n  );\n\nexport const FormattingPopoverContent = ({\n  config,\n  onChange,\n  columns = [],\n  extraColorChoices = [],\n}: {\n  config?: ConditionalFormattingConfig;\n  onChange: (config: ConditionalFormattingConfig) => void;\n  columns: { label: string; value: string }[];\n  extraColorChoices?: { label: string; value: string }[];\n}) => {\n  const theme = useTheme();\n  const colorScheme = colorSchemeOptions(theme);\n  const [showOperatorFields, setShowOperatorFields] = useState(\n    config === undefined ||\n      (config?.colorScheme !== ColorSchemeEnum.Green &&\n        config?.colorScheme !== ColorSchemeEnum.Red),\n  );\n  const handleChange = (event: any) => {\n    setShowOperatorFields(\n      !(event === ColorSchemeEnum.Green || event === ColorSchemeEnum.Red),\n    );\n  };\n\n  return (\n    <Form\n      onFinish={onChange}\n      initialValues={config}\n      requiredMark=\"optional\"\n      layout=\"vertical\"\n    >\n      <Row gutter={12}>\n        <Col span={12}>\n          <FormItem\n            name=\"column\"\n            label={t('Column')}\n            rules={rulesRequired}\n            initialValue={columns[0]?.value}\n          >\n            <Select ariaLabel={t('Select column')} options={columns} />\n          </FormItem>\n        </Col>\n        <Col span={12}>\n          <FormItem\n            name=\"colorScheme\"\n            label={t('Color scheme')}\n            rules={rulesRequired}\n            initialValue={colorScheme[0].value}\n          >\n            <Select\n              onChange={event => handleChange(event)}\n              ariaLabel={t('Color scheme')}\n              options={[...colorScheme, ...extraColorChoices]}\n            />\n          </FormItem>\n        </Col>\n      </Row>\n      <FormItem noStyle shouldUpdate={shouldFormItemUpdate}>\n        {showOperatorFields ? (\n          renderOperatorFields\n        ) : (\n          <Row gutter={12}>\n            <Col span={6}>{renderOperator({ showOnlyNone: true })}</Col>\n          </Row>\n        )}\n      </FormItem>\n      <FormItem>\n        <JustifyEnd>\n          <Button htmlType=\"submit\" buttonStyle=\"primary\">\n            {t('Apply')}\n          </Button>\n        </JustifyEnd>\n      </FormItem>\n    </Form>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}