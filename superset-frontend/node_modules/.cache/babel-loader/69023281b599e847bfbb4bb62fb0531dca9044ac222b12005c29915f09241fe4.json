{"ast":null,"code":"import _isNumber from \"lodash/isNumber\";import _isEmpty from \"lodash/isEmpty\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useLayoutEffect, useMemo, useState } from 'react';\nimport { extent as d3Extent, max as d3Max } from 'd3-array';\nimport { FaSort } from '@react-icons/all-files/fa/FaSort';\nimport { FaSortDown as FaSortDesc } from '@react-icons/all-files/fa/FaSortDown';\nimport { FaSortUp as FaSortAsc } from '@react-icons/all-files/fa/FaSortUp';\nimport cx from 'classnames';\nimport { DTTM_ALIAS, ensureIsArray, GenericDataType, getSelectedText, getTimeFormatterForGranularity, styled, css, t, tn, useTheme } from '@superset-ui/core';\nimport { Dropdown, Menu, Tooltip } from '@superset-ui/chart-controls';\nimport { CheckOutlined, InfoCircleOutlined, DownOutlined, MinusCircleOutlined, PlusCircleOutlined, TableOutlined } from '@ant-design/icons';\n\nimport { ColorSchemeEnum } from './types';\nimport DataTable from './DataTable';\nimport Styles from './Styles';\nimport { formatColumnValue } from './utils/formatValue';\nimport { PAGE_SIZE_OPTIONS } from './consts';\nimport { updateExternalFormData } from './DataTable/utils/externalAPIs';\nimport getScrollBarSize from './DataTable/utils/getScrollBarSize';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst ACTION_KEYS = {\n  enter: 'Enter',\n  spacebar: 'Spacebar',\n  space: ' '\n};\n/**\n * Return sortType based on data type\n */\nfunction getSortTypeByDataType(dataType) {\n  if (dataType === GenericDataType.Temporal) {\n    return 'datetime';\n  }\n  if (dataType === GenericDataType.String) {\n    return 'alphanumeric';\n  }\n  return 'basic';\n}\n/**\n * Cell background width calculation for horizontal bar chart\n */\nfunction cellWidth({ value, valueRange, alignPositiveNegative }) {\n  const [minValue, maxValue] = valueRange;\n  if (alignPositiveNegative) {\n    const perc = Math.abs(Math.round(value / maxValue * 100));\n    return perc;\n  }\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  const perc2 = Math.round(Math.abs(value) / tot * 100);\n  return perc2;\n}\n/**\n * Cell left margin (offset) calculation for horizontal bar chart elements\n * when alignPositiveNegative is not set\n */\nfunction cellOffset({ value, valueRange, alignPositiveNegative }) {\n  if (alignPositiveNegative) {\n    return 0;\n  }\n  const [minValue, maxValue] = valueRange;\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  return Math.round(Math.min(negExtent + value, negExtent) / tot * 100);\n}\n/**\n * Cell background color calculation for horizontal bar chart\n */\nfunction cellBackground({ value, colorPositiveNegative = false }) {\n  const r = colorPositiveNegative && value < 0 ? 150 : 0;\n  return `rgba(${r},0,0,0.2)`;\n}\nfunction SortIcon({ column }) {\n  const { isSorted, isSortedDesc } = column;\n  let sortIcon = _jsx(FaSort, {});\n  if (isSorted) {\n    sortIcon = isSortedDesc ? _jsx(FaSortDesc, {}) : _jsx(FaSortAsc, {});\n  }\n  return sortIcon;\n}\nfunction SearchInput({ count, value, onChange }) {\n  return _jsxs(\"span\", { className: \"dt-global-filter\", children: [\n    t('Search'), ' ',\n    _jsx(\"input\", { \"aria-label\": t('Search %s records', count), className: \"form-control input-sm\", placeholder: tn('search.num_records', count), value: value, onChange: onChange })] }\n  );\n}\nfunction SelectPageSize({ options, current, onChange }) {\n  return _jsxs(\"span\", { className: \"dt-select-page-size form-inline\", children: [\n    t('page_size.show'), ' ',\n    _jsx(\"select\", { className: \"form-control input-sm\", value: current, onBlur: () => {}, onChange: (e) => {\n        onChange(Number(e.target.value));\n      }, children:\n      options.map((option) => {\n        const [size, text] = Array.isArray(option) ?\n        option :\n        [option, option];\n        const sizeLabel = size === 0 ? t('all') : size;\n        return _jsx(\"option\", { \"aria-label\": t('Show %s entries', sizeLabel), value: size, children:\n          text }, size\n        );\n      }) }\n    ), ' ',\n    t('page_size.entries')] }\n  );\n}\nconst getNoResultsMessage = (filter) => filter ? t('No matching records found') : t('No records found');var _ref = process.env.NODE_ENV === \"production\" ? { name: \"tvoj80\", styles: \"display:inline-flex;align-items:flex-end\" } : { name: \"1f5n49p-Header\", styles: \"display:inline-flex;align-items:flex-end;label:Header;\", map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\nexport default function TableChart(props) {\n  const { timeGrain, height, width, data, totals, isRawRecords, rowCount = 0, columns: columnsMeta, alignPositiveNegative: defaultAlignPN = false, colorPositiveNegative: defaultColorPN = false, includeSearch = false, pageSize = 0, serverPagination = false, serverPaginationData, setDataMask, showCellBars = true, sortDesc = false, filters, sticky = true, // whether to use sticky header\n    columnColorFormatters, allowRearrangeColumns = false, allowRenderHtml = true, onContextMenu, emitCrossFilters, isUsingTimeComparison, basicColorFormatters, basicColorColumnFormatters } = props;\n  const comparisonColumns = [\n  { key: 'all', label: t('Display all') },\n  { key: '#', label: '#' },\n  { key: '△', label: '△' },\n  { key: '%', label: '%' }];\n\n  const timestampFormatter = useCallback((value) => getTimeFormatterForGranularity(timeGrain)(value), [timeGrain]);\n  const [tableSize, setTableSize] = useState({\n    width: 0,\n    height: 0\n  });\n  // keep track of whether column order changed, so that column widths can too\n  const [columnOrderToggle, setColumnOrderToggle] = useState(false);\n  const [showComparisonDropdown, setShowComparisonDropdown] = useState(false);\n  const [selectedComparisonColumns, setSelectedComparisonColumns] = useState([\n  comparisonColumns[0].key]\n  );\n  const [hideComparisonKeys, setHideComparisonKeys] = useState([]);\n  const theme = useTheme();\n  // only take relevant page size options\n  const pageSizeOptions = useMemo(() => {\n    const getServerPagination = (n) => n <= rowCount;\n    return PAGE_SIZE_OPTIONS.filter(([n]) => serverPagination ? getServerPagination(n) : n <= 2 * data.length);\n  }, [data.length, rowCount, serverPagination]);\n  const getValueRange = useCallback(function getValueRange(key, alignPositiveNegative) {var _data$;\n    if (typeof (data == null ? void 0 : (_data$ = data[0]) == null ? void 0 : _data$[key]) === 'number') {\n      const nums = data.map((row) => row[key]);\n      return alignPositiveNegative ?\n      [0, d3Max(nums.map(Math.abs))] :\n      d3Extent(nums);\n    }\n    return null;\n  }, [data]);\n  const isActiveFilterValue = useCallback(function isActiveFilterValue(key, val) {var _filters$key;\n    return !!filters && ((_filters$key = filters[key]) == null ? void 0 : _filters$key.includes(val));\n  }, [filters]);\n  const getCrossFilterDataMask = (key, value) => {\n    let updatedFilters = { ...(filters || {}) };\n    if (filters && isActiveFilterValue(key, value)) {\n      updatedFilters = {};\n    } else\n    {\n      updatedFilters = {\n        [key]: [value]\n      };\n    }\n    if (Array.isArray(updatedFilters[key]) &&\n    updatedFilters[key].length === 0) {\n      delete updatedFilters[key];\n    }\n    const groupBy = Object.keys(updatedFilters);\n    const groupByValues = Object.values(updatedFilters);\n    const labelElements = [];\n    groupBy.forEach((col) => {var _updatedFilters;\n      const isTimestamp = col === DTTM_ALIAS;\n      const filterValues = ensureIsArray((_updatedFilters = updatedFilters) == null ? void 0 : _updatedFilters[col]);\n      if (filterValues.length) {\n        const valueLabels = filterValues.map((value) => isTimestamp ? timestampFormatter(value) : value);\n        labelElements.push(`${valueLabels.join(', ')}`);\n      }\n    });\n    return {\n      dataMask: {\n        extraFormData: {\n          filters: groupBy.length === 0 ?\n          [] :\n          groupBy.map((col) => {var _updatedFilters2;\n            const val = ensureIsArray((_updatedFilters2 = updatedFilters) == null ? void 0 : _updatedFilters2[col]);\n            if (!val.length)\n            return {\n              col,\n              op: 'IS NULL'\n            };\n            return {\n              col,\n              op: 'IN',\n              val: val.map((el) => el instanceof Date ? el.getTime() : el),\n              grain: col === DTTM_ALIAS ? timeGrain : undefined\n            };\n          })\n        },\n        filterState: {\n          label: labelElements.join(', '),\n          value: groupByValues.length ? groupByValues : null,\n          filters: updatedFilters && Object.keys(updatedFilters).length ?\n          updatedFilters :\n          null\n        }\n      },\n      isCurrentValueSelected: isActiveFilterValue(key, value)\n    };\n  };\n  const toggleFilter = useCallback(function toggleFilter(key, val) {\n    if (!emitCrossFilters) {\n      return;\n    }\n    setDataMask(getCrossFilterDataMask(key, val).dataMask);\n  }, [emitCrossFilters, getCrossFilterDataMask, setDataMask]);\n  const getSharedStyle = (column) => {\n    const { isNumeric, config = {} } = column;\n    const textAlign = config.horizontalAlign || (\n    isNumeric && !isUsingTimeComparison ? 'right' : 'left');\n    return {\n      textAlign\n    };\n  };\n  const comparisonLabels = [t('Main'), '#', '△', '%'];\n  const filteredColumnsMeta = useMemo(() => {\n    if (!isUsingTimeComparison) {\n      return columnsMeta;\n    }\n    const allColumns = comparisonColumns[0].key;\n    const main = comparisonLabels[0];\n    const showAllColumns = selectedComparisonColumns.includes(allColumns);\n    return columnsMeta.filter(({ label, key }) => {\n      // Extract the key portion after the space, assuming the format is always \"label key\"\n      const keyPortion = key.substring(label.length);\n      const isKeyHidded = hideComparisonKeys.includes(keyPortion);\n      const isLableMain = label === main;\n      return isLableMain ||\n      !isKeyHidded && (\n      !comparisonLabels.includes(label) ||\n      showAllColumns ||\n      selectedComparisonColumns.includes(label));\n    });\n  }, [\n  columnsMeta,\n  comparisonColumns,\n  comparisonLabels,\n  isUsingTimeComparison,\n  hideComparisonKeys,\n  selectedComparisonColumns]\n  );\n  const handleContextMenu = onContextMenu && !isRawRecords ?\n  (value, cellPoint, clientX, clientY) => {\n    const drillToDetailFilters = [];\n    filteredColumnsMeta.forEach((col) => {\n      if (!col.isMetric) {\n        const dataRecordValue = value[col.key];\n        drillToDetailFilters.push({\n          col: col.key,\n          op: '==',\n          val: dataRecordValue,\n          formattedVal: formatColumnValue(col, dataRecordValue)[1]\n        });\n      }\n    });\n    onContextMenu(clientX, clientY, {\n      drillToDetail: drillToDetailFilters,\n      crossFilter: cellPoint.isMetric ?\n      undefined :\n      getCrossFilterDataMask(cellPoint.key, cellPoint.value),\n      drillBy: cellPoint.isMetric ?\n      undefined :\n      {\n        filters: [\n        {\n          col: cellPoint.key,\n          op: '==',\n          val: cellPoint.value\n        }],\n\n        groupbyFieldName: 'groupby'\n      }\n    });\n  } :\n  undefined;\n  const getHeaderColumns = (columnsMeta, enableTimeComparison) => {\n    const resultMap = {};\n    if (!enableTimeComparison) {\n      return resultMap;\n    }\n    columnsMeta.forEach((element, index) => {\n      // Check if element's label is one of the comparison labels\n      if (comparisonLabels.includes(element.label)) {\n        // Extract the key portion after the space, assuming the format is always \"label key\"\n        const keyPortion = element.key.substring(element.label.length);\n        // If the key portion is not in the map, initialize it with the current index\n        if (!resultMap[keyPortion]) {\n          resultMap[keyPortion] = [index];\n        } else\n        {\n          // Add the index to the existing array\n          resultMap[keyPortion].push(index);\n        }\n      }\n    });\n    return resultMap;\n  };\n  const renderTimeComparisonDropdown = () => {\n    const allKey = comparisonColumns[0].key;\n    const handleOnClick = (data) => {\n      const { key } = data;\n      // Toggle 'All' key selection\n      if (key === allKey) {\n        setSelectedComparisonColumns([allKey]);\n      } else\n      if (selectedComparisonColumns.includes(allKey)) {\n        setSelectedComparisonColumns([key]);\n      } else\n      {\n        // Toggle selection for other keys\n        setSelectedComparisonColumns(selectedComparisonColumns.includes(key) ?\n        selectedComparisonColumns.filter((k) => k !== key) // Deselect if already selected\n        : [...selectedComparisonColumns, key]); // Select if not already selected\n      }\n    };\n    const handleOnBlur = () => {\n      if (selectedComparisonColumns.length === 3) {\n        setSelectedComparisonColumns([comparisonColumns[0].key]);\n      }\n    };\n    return _jsx(Dropdown, { placement: \"bottomRight\", visible: showComparisonDropdown, onVisibleChange: (flag) => {\n        setShowComparisonDropdown(flag);\n      }, overlay: _jsxs(Menu, { multiple: true, onClick: handleOnClick, onBlur: handleOnBlur, selectedKeys: selectedComparisonColumns, children: [\n        _jsx(\"div\", { css: css`\n                max-width: 242px;\n                padding: 0 ${theme.gridUnit * 2}px;\n                color: ${theme.colors.grayscale.base};\n                font-size: ${theme.typography.sizes.s}px;\n              `, children:\n          t('Select columns that will be displayed in the table. You can multiselect columns.') }\n        ),\n        comparisonColumns.map((column) => _jsxs(Menu.Item, { children: [\n          _jsx(\"span\", { css: css`\n                    color: ${theme.colors.grayscale.dark2};\n                  `, children:\n            column.label }\n          ),\n          _jsx(\"span\", { css: css`\n                    float: right;\n                    font-size: ${theme.typography.sizes.s}px;\n                  `, children:\n            selectedComparisonColumns.includes(column.key) && _jsx(CheckOutlined, {}) }\n          )] }, column.key\n        ))] }\n      ), trigger: ['click'], children:\n      _jsxs(\"span\", { children: [\n        _jsx(TableOutlined, {}), \" \", _jsx(DownOutlined, {})] }\n      ) }\n    );\n  };\n  const renderGroupingHeaders = () => {\n    // TODO: Make use of ColumnGroup to render the aditional headers\n    const headers = [];\n    let currentColumnIndex = 0;\n    Object.entries(groupHeaderColumns || {}).forEach(([key, value]) => {\n      // Calculate the number of placeholder columns needed before the current header\n      const startPosition = value[0];\n      const colSpan = value.length;\n      // Add placeholder <th> for columns before this header\n      for (let i = currentColumnIndex; i < startPosition; i += 1) {\n        headers.push(_jsx(\"th\", { style: { borderBottom: 0 }, \"aria-label\": `Header-${i}` }, `placeholder-${i}`));\n      }\n      // Add the current header <th>\n      headers.push(_jsxs(\"th\", { colSpan: colSpan, style: { borderBottom: 0 }, children: [\n        key,\n        _jsx(\"span\", { css: css`\n              float: right;\n              & svg {\n                color: ${theme.colors.grayscale.base} !important;\n              }\n            `, children:\n          hideComparisonKeys.includes(key) ? _jsx(PlusCircleOutlined, { onClick: () => setHideComparisonKeys(hideComparisonKeys.filter((k) => k !== key)) }) : _jsx(MinusCircleOutlined, { onClick: () => setHideComparisonKeys([...hideComparisonKeys, key]) }) }\n        )] }, `header-${key}`\n      ));\n      // Update the current column index\n      currentColumnIndex = startPosition + colSpan;\n    });\n    return _jsx(\"tr\", { css: css`\n          th {\n            border-right: 2px solid ${theme.colors.grayscale.light2};\n          }\n          th:first-child {\n            border-left: none;\n          }\n          th:last-child {\n            border-right: none;\n          }\n        `, children:\n      headers }\n    );\n  };\n  const groupHeaderColumns = useMemo(() => getHeaderColumns(filteredColumnsMeta, isUsingTimeComparison), [filteredColumnsMeta, isUsingTimeComparison]);\n  const getColumnConfigs = useCallback((column, i) => {\n    const { key, label, isNumeric, dataType, isMetric, isPercentMetric, config = {} } = column;\n    const columnWidth = Number.isNaN(Number(config.columnWidth)) ?\n    config.columnWidth :\n    Number(config.columnWidth);\n    // inline style for both th and td cell\n    const sharedStyle = getSharedStyle(column);\n    const alignPositiveNegative = config.alignPositiveNegative === undefined ?\n    defaultAlignPN :\n    config.alignPositiveNegative;\n    const colorPositiveNegative = config.colorPositiveNegative === undefined ?\n    defaultColorPN :\n    config.colorPositiveNegative;\n    const { truncateLongCells } = config;\n    const hasColumnColorFormatters = isNumeric &&\n    Array.isArray(columnColorFormatters) &&\n    columnColorFormatters.length > 0;\n    const hasBasicColorFormatters = isUsingTimeComparison &&\n    Array.isArray(basicColorFormatters) &&\n    basicColorFormatters.length > 0;\n    const valueRange = !hasBasicColorFormatters &&\n    !hasColumnColorFormatters && (\n    config.showCellBars === undefined ?\n    showCellBars :\n    config.showCellBars) && (\n    isMetric || isRawRecords || isPercentMetric) &&\n    getValueRange(key, alignPositiveNegative);\n    let className = '';\n    if (emitCrossFilters && !isMetric) {\n      className += ' dt-is-filter';\n    }\n    if (!isMetric && !isPercentMetric) {\n      className += ' right-border-only';\n    } else\n    if (comparisonLabels.includes(label)) {\n      const groupinHeader = key.substring(label.length);\n      const columnsUnderHeader = groupHeaderColumns[groupinHeader] || [];\n      if (i === columnsUnderHeader[columnsUnderHeader.length - 1]) {\n        className += ' right-border-only';\n      }\n    }\n    return {\n      id: String(i),\n      // must use custom accessor to allow `.` in column names\n      // typing is incorrect in current version of `@types/react-table`\n      // so we ask TS not to check.\n      accessor: (datum) => datum[key],\n      Cell: ({ value, row }) => {var _basicColorFormatters3;\n        const [isHtml, text] = formatColumnValue(column, value);\n        const html = isHtml && allowRenderHtml ? { __html: text } : undefined;\n        let backgroundColor;\n        let arrow = '';\n        const originKey = column.key.substring(column.label.length).trim();\n        if (!hasColumnColorFormatters && hasBasicColorFormatters) {var _basicColorFormatters, _basicColorFormatters2;\n          backgroundColor = (_basicColorFormatters =\n          basicColorFormatters[row.index][originKey]) == null ? void 0 : _basicColorFormatters.backgroundColor;\n          arrow =\n          column.label === comparisonLabels[0] ? (_basicColorFormatters2 =\n          basicColorFormatters[row.index][originKey]) == null ? void 0 : _basicColorFormatters2.mainArrow :\n          '';\n        }\n        if (hasColumnColorFormatters) {\n          columnColorFormatters.\n          filter((formatter) => formatter.column === column.key).\n          forEach((formatter) => {\n            const formatterResult = value || value === 0 ?\n            formatter.getColorFromValue(value) :\n            false;\n            if (formatterResult) {\n              backgroundColor = formatterResult;\n            }\n          });\n        }\n        if (basicColorColumnFormatters &&\n        (basicColorColumnFormatters == null ? void 0 : basicColorColumnFormatters.length) > 0) {var _basicColorColumnForm, _basicColorColumnForm2;\n          backgroundColor =\n          ((_basicColorColumnForm = basicColorColumnFormatters[row.index][column.key]) == null ? void 0 : _basicColorColumnForm.\n          backgroundColor) || backgroundColor;\n          arrow =\n          column.label === comparisonLabels[0] ? (_basicColorColumnForm2 =\n          basicColorColumnFormatters[row.index][column.key]) == null ? void 0 : _basicColorColumnForm2.mainArrow :\n          '';\n        }\n        const StyledCell = styled.td`\n            text-align: ${sharedStyle.textAlign};\n            white-space: ${value instanceof Date ? 'nowrap' : undefined};\n            position: relative;\n            background: ${backgroundColor || undefined};\n          `;\n        const cellBarStyles = css`\n            position: absolute;\n            height: 100%;\n            display: block;\n            top: 0;\n            ${valueRange &&\n        `\n                width: ${`${cellWidth({\n          value: value,\n          valueRange,\n          alignPositiveNegative\n        })}%`};\n                left: ${`${cellOffset({\n          value: value,\n          valueRange,\n          alignPositiveNegative\n        })}%`};\n                background-color: ${cellBackground({\n          value: value,\n          colorPositiveNegative\n        })};\n              `}\n          `;\n        let arrowStyles = css`\n            color: ${basicColorFormatters &&\n        ((_basicColorFormatters3 = basicColorFormatters[row.index][originKey]) == null ? void 0 : _basicColorFormatters3.arrowColor) ===\n        ColorSchemeEnum.Green ?\n        theme.colors.success.base :\n        theme.colors.error.base};\n            margin-right: ${theme.gridUnit}px;\n          `;\n        if (basicColorColumnFormatters &&\n        (basicColorColumnFormatters == null ? void 0 : basicColorColumnFormatters.length) > 0) {var _basicColorColumnForm3;\n          arrowStyles = css`\n              color: ${((_basicColorColumnForm3 = basicColorColumnFormatters[row.index][column.key]) == null ? void 0 : _basicColorColumnForm3.\n          arrowColor) === ColorSchemeEnum.Green ?\n          theme.colors.success.base :\n          theme.colors.error.base};\n              margin-right: ${theme.gridUnit}px;\n            `;\n        }\n        const cellProps = {\n          'aria-labelledby': `header-${column.key}`,\n          role: 'cell',\n          // show raw number in title in case of numeric values\n          title: typeof value === 'number' ? String(value) : undefined,\n          onClick: emitCrossFilters && !valueRange && !isMetric ?\n          () => {\n            // allow selecting text in a cell\n            if (!getSelectedText()) {\n              toggleFilter(key, value);\n            }\n          } :\n          undefined,\n          onContextMenu: (e) => {\n            if (handleContextMenu) {\n              e.preventDefault();\n              e.stopPropagation();\n              handleContextMenu(row.original, { key, value, isMetric }, e.nativeEvent.clientX, e.nativeEvent.clientY);\n            }\n          },\n          className: [\n          className,\n          value == null ? 'dt-is-null' : '',\n          isActiveFilterValue(key, value) ? ' dt-is-active-filter' : ''].\n          join(' '),\n          tabIndex: 0\n        };\n        if (html) {\n          if (truncateLongCells) {\n            // eslint-disable-next-line react/no-danger\n            return _jsx(StyledCell, { ...cellProps, children:\n              _jsx(\"div\", { className: \"dt-truncate-cell\", style: columnWidth ? { width: columnWidth } : undefined, dangerouslySetInnerHTML: html }) }\n            );\n          }\n          // eslint-disable-next-line react/no-danger\n          return _jsx(StyledCell, { ...cellProps, dangerouslySetInnerHTML: html });\n        }\n        // If cellProps renders textContent already, then we don't have to\n        // render `Cell`. This saves some time for large tables.\n        return _jsxs(StyledCell, { ...cellProps, children: [\n          valueRange && _jsx(\"div\", {\n            /* The following classes are added to support custom CSS styling */\n            className: cx('cell-bar', _isNumber(value) && value < 0 ? 'negative' : 'positive'), css: cellBarStyles, role: \"presentation\" }),\n          truncateLongCells ? _jsxs(\"div\", { className: \"dt-truncate-cell\", style: columnWidth ? { width: columnWidth } : undefined, children: [\n            arrow && _jsx(\"span\", { css: arrowStyles, children: arrow }),\n            text] }\n          ) : _jsxs(_Fragment, { children: [\n            arrow && _jsx(\"span\", { css: arrowStyles, children: arrow }),\n            text] }\n          )] }\n        );\n      },\n      Header: ({ column: col, onClick, style, onDragStart, onDrop }) => _jsxs(\"th\", { id: `header-${column.key}`, title: t('Shift + Click to sort by multiple columns'), className: [className, col.isSorted ? 'is-sorted' : ''].join(' '), style: {\n          ...sharedStyle,\n          ...style\n        }, onKeyDown: (e) => {\n          // programatically sort column on keypress\n          if (Object.values(ACTION_KEYS).includes(e.key)) {\n            col.toggleSortBy();\n          }\n        }, role: \"columnheader button\", onClick: onClick, \"data-column-name\": col.id, ...(allowRearrangeColumns && {\n          draggable: 'true',\n          onDragStart,\n          onDragOver: (e) => e.preventDefault(),\n          onDragEnter: (e) => e.preventDefault(),\n          onDrop\n        }), tabIndex: 0, children: [\n\n        config.columnWidth ?\n        // column width hint\n        _jsx(\"div\", { style: {\n            width: columnWidth,\n            height: 0.01\n          } }) : null,\n        _jsxs(\"div\", { \"data-column-name\": col.id, css: _ref, children: [\n\n\n\n          _jsx(\"span\", { \"data-column-name\": col.id, children: label }),\n          _jsx(SortIcon, { column: col })] }\n        )] }\n      ),\n      Footer: totals ? i === 0 ? _jsx(\"th\", { children:\n        _jsxs(\"div\", { css: css`\n                  display: flex;\n                  align-items: center;\n                  & svg {\n                    margin-left: ${theme.gridUnit}px;\n                    color: ${theme.colors.grayscale.dark1} !important;\n                  }\n                `, children: [\n          t('Summary'),\n          _jsx(Tooltip, { overlay: t('Show total aggregations of selected metrics. Note that row limit does not apply to the result.'), children:\n            _jsx(InfoCircleOutlined, {}) }\n          )] }\n        ) }\n      ) : _jsx(\"td\", { style: sharedStyle, children:\n        _jsx(\"strong\", { children: formatColumnValue(column, totals[key])[1] }) }\n      ) : undefined,\n      sortDescFirst: sortDesc,\n      sortType: getSortTypeByDataType(dataType)\n    };\n  }, [\n  defaultAlignPN,\n  defaultColorPN,\n  emitCrossFilters,\n  getValueRange,\n  isActiveFilterValue,\n  isRawRecords,\n  showCellBars,\n  sortDesc,\n  toggleFilter,\n  totals,\n  columnColorFormatters,\n  columnOrderToggle]\n  );\n  const columns = useMemo(() => filteredColumnsMeta.map(getColumnConfigs), [filteredColumnsMeta, getColumnConfigs]);\n  const handleServerPaginationChange = useCallback((pageNumber, pageSize) => {\n    updateExternalFormData(setDataMask, pageNumber, pageSize);\n  }, [setDataMask]);\n  const handleSizeChange = useCallback(({ width, height }) => {\n    setTableSize({ width, height });\n  }, []);\n  useLayoutEffect(() => {\n    // After initial load the table should resize only when the new sizes\n    // Are not only scrollbar updates, otherwise, the table would twicth\n    const scrollBarSize = getScrollBarSize();\n    const { width: tableWidth, height: tableHeight } = tableSize;\n    // Table is increasing its original size\n    if (width - tableWidth > scrollBarSize ||\n    height - tableHeight > scrollBarSize) {\n      handleSizeChange({\n        width: width - scrollBarSize,\n        height: height - scrollBarSize\n      });\n    } else\n    if (tableWidth - width > scrollBarSize ||\n    tableHeight - height > scrollBarSize) {\n      // Table is decreasing its original size\n      handleSizeChange({\n        width,\n        height\n      });\n    }\n  }, [width, height, handleSizeChange, tableSize]);\n  const { width: widthFromState, height: heightFromState } = tableSize;\n  return _jsx(Styles, { children:\n    _jsx(DataTable, { columns: columns, data: data, rowCount: rowCount, tableClassName: \"table table-striped table-condensed\", pageSize: pageSize, serverPaginationData: serverPaginationData, pageSizeOptions: pageSizeOptions, width: widthFromState, height: heightFromState, serverPagination: serverPagination, onServerPaginationChange: handleServerPaginationChange, onColumnOrderChange: () => setColumnOrderToggle(!columnOrderToggle)\n      // 9 page items in > 340px works well even for 100+ pages\n      , maxPageItemCount: width > 340 ? 9 : 7, noResults: getNoResultsMessage, searchInput: includeSearch && SearchInput, selectPageSize: pageSize !== null && SelectPageSize\n      // not in use in Superset, but needed for unit tests\n      , sticky: sticky, renderGroupingHeaders: !_isEmpty(groupHeaderColumns) ? renderGroupingHeaders : undefined, renderTimeComparisonDropdown: isUsingTimeComparison ? renderTimeComparisonDropdown : undefined }) }\n  );\n}__signature__(TableChart, \"useCallback{timestampFormatter}\\nuseState{[tableSize, setTableSize]({\\n        width: 0,\\n        height: 0,\\n    })}\\nuseState{[columnOrderToggle, setColumnOrderToggle](false)}\\nuseState{[showComparisonDropdown, setShowComparisonDropdown](false)}\\nuseState{[selectedComparisonColumns, setSelectedComparisonColumns]([\\n        comparisonColumns[0].key,\\n    ])}\\nuseState{[hideComparisonKeys, setHideComparisonKeys]([])}\\nuseTheme{theme}\\nuseMemo{pageSizeOptions}\\nuseCallback{getValueRange}\\nuseCallback{isActiveFilterValue}\\nuseCallback{toggleFilter}\\nuseMemo{filteredColumnsMeta}\\nuseMemo{groupHeaderColumns}\\nuseCallback{getColumnConfigs}\\nuseMemo{columns}\\nuseCallback{handleServerPaginationChange}\\nuseCallback{handleSizeChange}\\nuseLayoutEffect{}\", () => [useTheme]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ACTION_KEYS, \"ACTION_KEYS\", \"/app/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(getSortTypeByDataType, \"getSortTypeByDataType\", \"/app/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(cellWidth, \"cellWidth\", \"/app/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(cellOffset, \"cellOffset\", \"/app/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(cellBackground, \"cellBackground\", \"/app/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(SortIcon, \"SortIcon\", \"/app/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(SearchInput, \"SearchInput\", \"/app/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(SelectPageSize, \"SelectPageSize\", \"/app/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(getNoResultsMessage, \"getNoResultsMessage\", \"/app/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");reactHotLoader.register(TableChart, \"TableChart\", \"/app/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useLayoutEffect","useMemo","useState","extent","d3Extent","max","d3Max","FaSort","FaSortDown","FaSortDesc","FaSortUp","FaSortAsc","cx","DTTM_ALIAS","ensureIsArray","GenericDataType","getSelectedText","getTimeFormatterForGranularity","styled","css","t","tn","useTheme","Dropdown","Menu","Tooltip","CheckOutlined","InfoCircleOutlined","DownOutlined","MinusCircleOutlined","PlusCircleOutlined","TableOutlined","ColorSchemeEnum","DataTable","Styles","formatColumnValue","PAGE_SIZE_OPTIONS","updateExternalFormData","getScrollBarSize","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ACTION_KEYS","enter","spacebar","space","getSortTypeByDataType","dataType","Temporal","String","cellWidth","value","valueRange","alignPositiveNegative","minValue","maxValue","perc","Math","abs","round","posExtent","negExtent","min","tot","perc2","cellOffset","cellBackground","colorPositiveNegative","r","SortIcon","column","isSorted","isSortedDesc","sortIcon","SearchInput","count","onChange","className","children","placeholder","SelectPageSize","options","current","onBlur","e","Number","target","map","option","size","text","Array","isArray","sizeLabel","getNoResultsMessage","filter","_ref","process","env","NODE_ENV","name","styles","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","TableChart","props","timeGrain","height","width","data","totals","isRawRecords","rowCount","columns","columnsMeta","defaultAlignPN","defaultColorPN","includeSearch","pageSize","serverPagination","serverPaginationData","setDataMask","showCellBars","sortDesc","filters","sticky","columnColorFormatters","allowRearrangeColumns","allowRenderHtml","onContextMenu","emitCrossFilters","isUsingTimeComparison","basicColorFormatters","basicColorColumnFormatters","comparisonColumns","key","label","timestampFormatter","tableSize","setTableSize","columnOrderToggle","setColumnOrderToggle","showComparisonDropdown","setShowComparisonDropdown","selectedComparisonColumns","setSelectedComparisonColumns","hideComparisonKeys","setHideComparisonKeys","theme","pageSizeOptions","getServerPagination","n","length","getValueRange","_data$","nums","row","isActiveFilterValue","val","_filters$key","includes","getCrossFilterDataMask","updatedFilters","groupBy","Object","keys","groupByValues","values","labelElements","forEach","col","_updatedFilters","isTimestamp","filterValues","valueLabels","push","join","dataMask","extraFormData","_updatedFilters2","op","el","Date","getTime","grain","undefined","filterState","isCurrentValueSelected","toggleFilter","getSharedStyle","isNumeric","config","textAlign","horizontalAlign","comparisonLabels","filteredColumnsMeta","allColumns","main","showAllColumns","keyPortion","substring","isKeyHidded","isLableMain","handleContextMenu","cellPoint","clientX","clientY","drillToDetailFilters","isMetric","dataRecordValue","formattedVal","drillToDetail","crossFilter","drillBy","groupbyFieldName","getHeaderColumns","enableTimeComparison","resultMap","element","index","renderTimeComparisonDropdown","allKey","handleOnClick","k","handleOnBlur","placement","visible","onVisibleChange","flag","overlay","multiple","onClick","selectedKeys","gridUnit","colors","grayscale","base","typography","sizes","s","Item","dark2","trigger","renderGroupingHeaders","headers","currentColumnIndex","entries","groupHeaderColumns","startPosition","colSpan","i","style","borderBottom","light2","getColumnConfigs","isPercentMetric","columnWidth","isNaN","sharedStyle","truncateLongCells","hasColumnColorFormatters","hasBasicColorFormatters","groupinHeader","columnsUnderHeader","id","accessor","datum","Cell","_basicColorFormatters3","isHtml","html","__html","backgroundColor","arrow","originKey","trim","_basicColorFormatters","_basicColorFormatters2","mainArrow","formatter","formatterResult","getColorFromValue","_basicColorColumnForm","_basicColorColumnForm2","StyledCell","td","cellBarStyles","arrowStyles","arrowColor","Green","success","error","_basicColorColumnForm3","cellProps","role","title","preventDefault","stopPropagation","original","nativeEvent","tabIndex","dangerouslySetInnerHTML","_isNumber","Header","onDragStart","onDrop","onKeyDown","toggleSortBy","draggable","onDragOver","onDragEnter","Footer","dark1","sortDescFirst","sortType","handleServerPaginationChange","pageNumber","handleSizeChange","scrollBarSize","tableWidth","tableHeight","widthFromState","heightFromState","tableClassName","onServerPaginationChange","onColumnOrderChange","maxPageItemCount","noResults","searchInput","selectPageSize","_isEmpty","__signature__","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/plugin-chart-table/src/TableChart.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  CSSProperties,\n  useCallback,\n  useLayoutEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n  KeyboardEvent as ReactKeyboardEvent,\n} from 'react';\n\nimport {\n  ColumnInstance,\n  ColumnWithLooseAccessor,\n  DefaultSortTypes,\n  Row,\n} from 'react-table';\nimport { extent as d3Extent, max as d3Max } from 'd3-array';\nimport { FaSort } from '@react-icons/all-files/fa/FaSort';\nimport { FaSortDown as FaSortDesc } from '@react-icons/all-files/fa/FaSortDown';\nimport { FaSortUp as FaSortAsc } from '@react-icons/all-files/fa/FaSortUp';\nimport cx from 'classnames';\nimport {\n  DataRecord,\n  DataRecordValue,\n  DTTM_ALIAS,\n  ensureIsArray,\n  GenericDataType,\n  getSelectedText,\n  getTimeFormatterForGranularity,\n  BinaryQueryObjectFilterClause,\n  styled,\n  css,\n  t,\n  tn,\n  useTheme,\n} from '@superset-ui/core';\nimport { Dropdown, Menu, Tooltip } from '@superset-ui/chart-controls';\nimport {\n  CheckOutlined,\n  InfoCircleOutlined,\n  DownOutlined,\n  MinusCircleOutlined,\n  PlusCircleOutlined,\n  TableOutlined,\n} from '@ant-design/icons';\nimport { isEmpty, isNumber } from 'lodash';\nimport {\n  ColorSchemeEnum,\n  DataColumnMeta,\n  TableChartTransformedProps,\n} from './types';\nimport DataTable, {\n  DataTableProps,\n  SearchInputProps,\n  SelectPageSizeRendererProps,\n  SizeOption,\n} from './DataTable';\n\nimport Styles from './Styles';\nimport { formatColumnValue } from './utils/formatValue';\nimport { PAGE_SIZE_OPTIONS } from './consts';\nimport { updateExternalFormData } from './DataTable/utils/externalAPIs';\nimport getScrollBarSize from './DataTable/utils/getScrollBarSize';\n\ntype ValueRange = [number, number];\n\ninterface TableSize {\n  width: number;\n  height: number;\n}\n\nconst ACTION_KEYS = {\n  enter: 'Enter',\n  spacebar: 'Spacebar',\n  space: ' ',\n};\n\n/**\n * Return sortType based on data type\n */\nfunction getSortTypeByDataType(dataType: GenericDataType): DefaultSortTypes {\n  if (dataType === GenericDataType.Temporal) {\n    return 'datetime';\n  }\n  if (dataType === GenericDataType.String) {\n    return 'alphanumeric';\n  }\n  return 'basic';\n}\n\n/**\n * Cell background width calculation for horizontal bar chart\n */\nfunction cellWidth({\n  value,\n  valueRange,\n  alignPositiveNegative,\n}: {\n  value: number;\n  valueRange: ValueRange;\n  alignPositiveNegative: boolean;\n}) {\n  const [minValue, maxValue] = valueRange;\n  if (alignPositiveNegative) {\n    const perc = Math.abs(Math.round((value / maxValue) * 100));\n    return perc;\n  }\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  const perc2 = Math.round((Math.abs(value) / tot) * 100);\n  return perc2;\n}\n\n/**\n * Cell left margin (offset) calculation for horizontal bar chart elements\n * when alignPositiveNegative is not set\n */\nfunction cellOffset({\n  value,\n  valueRange,\n  alignPositiveNegative,\n}: {\n  value: number;\n  valueRange: ValueRange;\n  alignPositiveNegative: boolean;\n}) {\n  if (alignPositiveNegative) {\n    return 0;\n  }\n  const [minValue, maxValue] = valueRange;\n  const posExtent = Math.abs(Math.max(maxValue, 0));\n  const negExtent = Math.abs(Math.min(minValue, 0));\n  const tot = posExtent + negExtent;\n  return Math.round((Math.min(negExtent + value, negExtent) / tot) * 100);\n}\n\n/**\n * Cell background color calculation for horizontal bar chart\n */\nfunction cellBackground({\n  value,\n  colorPositiveNegative = false,\n}: {\n  value: number;\n  colorPositiveNegative: boolean;\n}) {\n  const r = colorPositiveNegative && value < 0 ? 150 : 0;\n  return `rgba(${r},0,0,0.2)`;\n}\n\nfunction SortIcon<D extends object>({ column }: { column: ColumnInstance<D> }) {\n  const { isSorted, isSortedDesc } = column;\n  let sortIcon = <FaSort />;\n  if (isSorted) {\n    sortIcon = isSortedDesc ? <FaSortDesc /> : <FaSortAsc />;\n  }\n  return sortIcon;\n}\n\nfunction SearchInput({ count, value, onChange }: SearchInputProps) {\n  return (\n    <span className=\"dt-global-filter\">\n      {t('Search')}{' '}\n      <input\n        aria-label={t('Search %s records', count)}\n        className=\"form-control input-sm\"\n        placeholder={tn('search.num_records', count)}\n        value={value}\n        onChange={onChange}\n      />\n    </span>\n  );\n}\n\nfunction SelectPageSize({\n  options,\n  current,\n  onChange,\n}: SelectPageSizeRendererProps) {\n  return (\n    <span className=\"dt-select-page-size form-inline\">\n      {t('page_size.show')}{' '}\n      <select\n        className=\"form-control input-sm\"\n        value={current}\n        onBlur={() => {}}\n        onChange={e => {\n          onChange(Number((e.target as HTMLSelectElement).value));\n        }}\n      >\n        {options.map(option => {\n          const [size, text] = Array.isArray(option)\n            ? option\n            : [option, option];\n          const sizeLabel = size === 0 ? t('all') : size;\n          return (\n            <option\n              aria-label={t('Show %s entries', sizeLabel)}\n              key={size}\n              value={size}\n            >\n              {text}\n            </option>\n          );\n        })}\n      </select>{' '}\n      {t('page_size.entries')}\n    </span>\n  );\n}\n\nconst getNoResultsMessage = (filter: string) =>\n  filter ? t('No matching records found') : t('No records found');\n\nexport default function TableChart<D extends DataRecord = DataRecord>(\n  props: TableChartTransformedProps<D> & {\n    sticky?: DataTableProps<D>['sticky'];\n  },\n) {\n  const {\n    timeGrain,\n    height,\n    width,\n    data,\n    totals,\n    isRawRecords,\n    rowCount = 0,\n    columns: columnsMeta,\n    alignPositiveNegative: defaultAlignPN = false,\n    colorPositiveNegative: defaultColorPN = false,\n    includeSearch = false,\n    pageSize = 0,\n    serverPagination = false,\n    serverPaginationData,\n    setDataMask,\n    showCellBars = true,\n    sortDesc = false,\n    filters,\n    sticky = true, // whether to use sticky header\n    columnColorFormatters,\n    allowRearrangeColumns = false,\n    allowRenderHtml = true,\n    onContextMenu,\n    emitCrossFilters,\n    isUsingTimeComparison,\n    basicColorFormatters,\n    basicColorColumnFormatters,\n  } = props;\n  const comparisonColumns = [\n    { key: 'all', label: t('Display all') },\n    { key: '#', label: '#' },\n    { key: '△', label: '△' },\n    { key: '%', label: '%' },\n  ];\n  const timestampFormatter = useCallback(\n    value => getTimeFormatterForGranularity(timeGrain)(value),\n    [timeGrain],\n  );\n  const [tableSize, setTableSize] = useState<TableSize>({\n    width: 0,\n    height: 0,\n  });\n  // keep track of whether column order changed, so that column widths can too\n  const [columnOrderToggle, setColumnOrderToggle] = useState(false);\n  const [showComparisonDropdown, setShowComparisonDropdown] = useState(false);\n  const [selectedComparisonColumns, setSelectedComparisonColumns] = useState([\n    comparisonColumns[0].key,\n  ]);\n  const [hideComparisonKeys, setHideComparisonKeys] = useState<string[]>([]);\n  const theme = useTheme();\n\n  // only take relevant page size options\n  const pageSizeOptions = useMemo(() => {\n    const getServerPagination = (n: number) => n <= rowCount;\n    return PAGE_SIZE_OPTIONS.filter(([n]) =>\n      serverPagination ? getServerPagination(n) : n <= 2 * data.length,\n    ) as SizeOption[];\n  }, [data.length, rowCount, serverPagination]);\n\n  const getValueRange = useCallback(\n    function getValueRange(key: string, alignPositiveNegative: boolean) {\n      if (typeof data?.[0]?.[key] === 'number') {\n        const nums = data.map(row => row[key]) as number[];\n        return (\n          alignPositiveNegative\n            ? [0, d3Max(nums.map(Math.abs))]\n            : d3Extent(nums)\n        ) as ValueRange;\n      }\n      return null;\n    },\n    [data],\n  );\n\n  const isActiveFilterValue = useCallback(\n    function isActiveFilterValue(key: string, val: DataRecordValue) {\n      return !!filters && filters[key]?.includes(val);\n    },\n    [filters],\n  );\n\n  const getCrossFilterDataMask = (key: string, value: DataRecordValue) => {\n    let updatedFilters = { ...(filters || {}) };\n    if (filters && isActiveFilterValue(key, value)) {\n      updatedFilters = {};\n    } else {\n      updatedFilters = {\n        [key]: [value],\n      };\n    }\n    if (\n      Array.isArray(updatedFilters[key]) &&\n      updatedFilters[key].length === 0\n    ) {\n      delete updatedFilters[key];\n    }\n\n    const groupBy = Object.keys(updatedFilters);\n    const groupByValues = Object.values(updatedFilters);\n    const labelElements: string[] = [];\n    groupBy.forEach(col => {\n      const isTimestamp = col === DTTM_ALIAS;\n      const filterValues = ensureIsArray(updatedFilters?.[col]);\n      if (filterValues.length) {\n        const valueLabels = filterValues.map(value =>\n          isTimestamp ? timestampFormatter(value) : value,\n        );\n        labelElements.push(`${valueLabels.join(', ')}`);\n      }\n    });\n\n    return {\n      dataMask: {\n        extraFormData: {\n          filters:\n            groupBy.length === 0\n              ? []\n              : groupBy.map(col => {\n                  const val = ensureIsArray(updatedFilters?.[col]);\n                  if (!val.length)\n                    return {\n                      col,\n                      op: 'IS NULL' as const,\n                    };\n                  return {\n                    col,\n                    op: 'IN' as const,\n                    val: val.map(el =>\n                      el instanceof Date ? el.getTime() : el!,\n                    ),\n                    grain: col === DTTM_ALIAS ? timeGrain : undefined,\n                  };\n                }),\n        },\n        filterState: {\n          label: labelElements.join(', '),\n          value: groupByValues.length ? groupByValues : null,\n          filters:\n            updatedFilters && Object.keys(updatedFilters).length\n              ? updatedFilters\n              : null,\n        },\n      },\n      isCurrentValueSelected: isActiveFilterValue(key, value),\n    };\n  };\n\n  const toggleFilter = useCallback(\n    function toggleFilter(key: string, val: DataRecordValue) {\n      if (!emitCrossFilters) {\n        return;\n      }\n      setDataMask(getCrossFilterDataMask(key, val).dataMask);\n    },\n    [emitCrossFilters, getCrossFilterDataMask, setDataMask],\n  );\n\n  const getSharedStyle = (column: DataColumnMeta): CSSProperties => {\n    const { isNumeric, config = {} } = column;\n    const textAlign =\n      config.horizontalAlign ||\n      (isNumeric && !isUsingTimeComparison ? 'right' : 'left');\n    return {\n      textAlign,\n    };\n  };\n\n  const comparisonLabels = [t('Main'), '#', '△', '%'];\n  const filteredColumnsMeta = useMemo(() => {\n    if (!isUsingTimeComparison) {\n      return columnsMeta;\n    }\n    const allColumns = comparisonColumns[0].key;\n    const main = comparisonLabels[0];\n    const showAllColumns = selectedComparisonColumns.includes(allColumns);\n\n    return columnsMeta.filter(({ label, key }) => {\n      // Extract the key portion after the space, assuming the format is always \"label key\"\n      const keyPortion = key.substring(label.length);\n      const isKeyHidded = hideComparisonKeys.includes(keyPortion);\n      const isLableMain = label === main;\n\n      return (\n        isLableMain ||\n        (!isKeyHidded &&\n          (!comparisonLabels.includes(label) ||\n            showAllColumns ||\n            selectedComparisonColumns.includes(label)))\n      );\n    });\n  }, [\n    columnsMeta,\n    comparisonColumns,\n    comparisonLabels,\n    isUsingTimeComparison,\n    hideComparisonKeys,\n    selectedComparisonColumns,\n  ]);\n\n  const handleContextMenu =\n    onContextMenu && !isRawRecords\n      ? (\n          value: D,\n          cellPoint: {\n            key: string;\n            value: DataRecordValue;\n            isMetric?: boolean;\n          },\n          clientX: number,\n          clientY: number,\n        ) => {\n          const drillToDetailFilters: BinaryQueryObjectFilterClause[] = [];\n          filteredColumnsMeta.forEach(col => {\n            if (!col.isMetric) {\n              const dataRecordValue = value[col.key];\n              drillToDetailFilters.push({\n                col: col.key,\n                op: '==',\n                val: dataRecordValue as string | number | boolean,\n                formattedVal: formatColumnValue(col, dataRecordValue)[1],\n              });\n            }\n          });\n          onContextMenu(clientX, clientY, {\n            drillToDetail: drillToDetailFilters,\n            crossFilter: cellPoint.isMetric\n              ? undefined\n              : getCrossFilterDataMask(cellPoint.key, cellPoint.value),\n            drillBy: cellPoint.isMetric\n              ? undefined\n              : {\n                  filters: [\n                    {\n                      col: cellPoint.key,\n                      op: '==',\n                      val: cellPoint.value as string | number | boolean,\n                    },\n                  ],\n                  groupbyFieldName: 'groupby',\n                },\n          });\n        }\n      : undefined;\n\n  const getHeaderColumns = (\n    columnsMeta: DataColumnMeta[],\n    enableTimeComparison?: boolean,\n  ) => {\n    const resultMap: Record<string, number[]> = {};\n\n    if (!enableTimeComparison) {\n      return resultMap;\n    }\n\n    columnsMeta.forEach((element, index) => {\n      // Check if element's label is one of the comparison labels\n      if (comparisonLabels.includes(element.label)) {\n        // Extract the key portion after the space, assuming the format is always \"label key\"\n        const keyPortion = element.key.substring(element.label.length);\n\n        // If the key portion is not in the map, initialize it with the current index\n        if (!resultMap[keyPortion]) {\n          resultMap[keyPortion] = [index];\n        } else {\n          // Add the index to the existing array\n          resultMap[keyPortion].push(index);\n        }\n      }\n    });\n\n    return resultMap;\n  };\n\n  const renderTimeComparisonDropdown = (): JSX.Element => {\n    const allKey = comparisonColumns[0].key;\n    const handleOnClick = (data: any) => {\n      const { key } = data;\n      // Toggle 'All' key selection\n      if (key === allKey) {\n        setSelectedComparisonColumns([allKey]);\n      } else if (selectedComparisonColumns.includes(allKey)) {\n        setSelectedComparisonColumns([key]);\n      } else {\n        // Toggle selection for other keys\n        setSelectedComparisonColumns(\n          selectedComparisonColumns.includes(key)\n            ? selectedComparisonColumns.filter(k => k !== key) // Deselect if already selected\n            : [...selectedComparisonColumns, key],\n        ); // Select if not already selected\n      }\n    };\n\n    const handleOnBlur = () => {\n      if (selectedComparisonColumns.length === 3) {\n        setSelectedComparisonColumns([comparisonColumns[0].key]);\n      }\n    };\n\n    return (\n      <Dropdown\n        placement=\"bottomRight\"\n        visible={showComparisonDropdown}\n        onVisibleChange={(flag: boolean) => {\n          setShowComparisonDropdown(flag);\n        }}\n        overlay={\n          <Menu\n            multiple\n            onClick={handleOnClick}\n            onBlur={handleOnBlur}\n            selectedKeys={selectedComparisonColumns}\n          >\n            <div\n              css={css`\n                max-width: 242px;\n                padding: 0 ${theme.gridUnit * 2}px;\n                color: ${theme.colors.grayscale.base};\n                font-size: ${theme.typography.sizes.s}px;\n              `}\n            >\n              {t(\n                'Select columns that will be displayed in the table. You can multiselect columns.',\n              )}\n            </div>\n            {comparisonColumns.map(column => (\n              <Menu.Item key={column.key}>\n                <span\n                  css={css`\n                    color: ${theme.colors.grayscale.dark2};\n                  `}\n                >\n                  {column.label}\n                </span>\n                <span\n                  css={css`\n                    float: right;\n                    font-size: ${theme.typography.sizes.s}px;\n                  `}\n                >\n                  {selectedComparisonColumns.includes(column.key) && (\n                    <CheckOutlined />\n                  )}\n                </span>\n              </Menu.Item>\n            ))}\n          </Menu>\n        }\n        trigger={['click']}\n      >\n        <span>\n          <TableOutlined /> <DownOutlined />\n        </span>\n      </Dropdown>\n    );\n  };\n\n  const renderGroupingHeaders = (): JSX.Element => {\n    // TODO: Make use of ColumnGroup to render the aditional headers\n    const headers: any = [];\n    let currentColumnIndex = 0;\n\n    Object.entries(groupHeaderColumns || {}).forEach(([key, value]) => {\n      // Calculate the number of placeholder columns needed before the current header\n      const startPosition = value[0];\n      const colSpan = value.length;\n\n      // Add placeholder <th> for columns before this header\n      for (let i = currentColumnIndex; i < startPosition; i += 1) {\n        headers.push(\n          <th\n            key={`placeholder-${i}`}\n            style={{ borderBottom: 0 }}\n            aria-label={`Header-${i}`}\n          />,\n        );\n      }\n\n      // Add the current header <th>\n      headers.push(\n        <th key={`header-${key}`} colSpan={colSpan} style={{ borderBottom: 0 }}>\n          {key}\n          <span\n            css={css`\n              float: right;\n              & svg {\n                color: ${theme.colors.grayscale.base} !important;\n              }\n            `}\n          >\n            {hideComparisonKeys.includes(key) ? (\n              <PlusCircleOutlined\n                onClick={() =>\n                  setHideComparisonKeys(\n                    hideComparisonKeys.filter(k => k !== key),\n                  )\n                }\n              />\n            ) : (\n              <MinusCircleOutlined\n                onClick={() =>\n                  setHideComparisonKeys([...hideComparisonKeys, key])\n                }\n              />\n            )}\n          </span>\n        </th>,\n      );\n\n      // Update the current column index\n      currentColumnIndex = startPosition + colSpan;\n    });\n\n    return (\n      <tr\n        css={css`\n          th {\n            border-right: 2px solid ${theme.colors.grayscale.light2};\n          }\n          th:first-child {\n            border-left: none;\n          }\n          th:last-child {\n            border-right: none;\n          }\n        `}\n      >\n        {headers}\n      </tr>\n    );\n  };\n\n  const groupHeaderColumns = useMemo(\n    () => getHeaderColumns(filteredColumnsMeta, isUsingTimeComparison),\n    [filteredColumnsMeta, isUsingTimeComparison],\n  );\n\n  const getColumnConfigs = useCallback(\n    (column: DataColumnMeta, i: number): ColumnWithLooseAccessor<D> => {\n      const {\n        key,\n        label,\n        isNumeric,\n        dataType,\n        isMetric,\n        isPercentMetric,\n        config = {},\n      } = column;\n      const columnWidth = Number.isNaN(Number(config.columnWidth))\n        ? config.columnWidth\n        : Number(config.columnWidth);\n\n      // inline style for both th and td cell\n      const sharedStyle: CSSProperties = getSharedStyle(column);\n\n      const alignPositiveNegative =\n        config.alignPositiveNegative === undefined\n          ? defaultAlignPN\n          : config.alignPositiveNegative;\n      const colorPositiveNegative =\n        config.colorPositiveNegative === undefined\n          ? defaultColorPN\n          : config.colorPositiveNegative;\n\n      const { truncateLongCells } = config;\n\n      const hasColumnColorFormatters =\n        isNumeric &&\n        Array.isArray(columnColorFormatters) &&\n        columnColorFormatters.length > 0;\n\n      const hasBasicColorFormatters =\n        isUsingTimeComparison &&\n        Array.isArray(basicColorFormatters) &&\n        basicColorFormatters.length > 0;\n\n      const valueRange =\n        !hasBasicColorFormatters &&\n        !hasColumnColorFormatters &&\n        (config.showCellBars === undefined\n          ? showCellBars\n          : config.showCellBars) &&\n        (isMetric || isRawRecords || isPercentMetric) &&\n        getValueRange(key, alignPositiveNegative);\n\n      let className = '';\n      if (emitCrossFilters && !isMetric) {\n        className += ' dt-is-filter';\n      }\n\n      if (!isMetric && !isPercentMetric) {\n        className += ' right-border-only';\n      } else if (comparisonLabels.includes(label)) {\n        const groupinHeader = key.substring(label.length);\n        const columnsUnderHeader = groupHeaderColumns[groupinHeader] || [];\n        if (i === columnsUnderHeader[columnsUnderHeader.length - 1]) {\n          className += ' right-border-only';\n        }\n      }\n\n      return {\n        id: String(i), // to allow duplicate column keys\n        // must use custom accessor to allow `.` in column names\n        // typing is incorrect in current version of `@types/react-table`\n        // so we ask TS not to check.\n        accessor: ((datum: D) => datum[key]) as never,\n        Cell: ({ value, row }: { value: DataRecordValue; row: Row<D> }) => {\n          const [isHtml, text] = formatColumnValue(column, value);\n          const html = isHtml && allowRenderHtml ? { __html: text } : undefined;\n\n          let backgroundColor;\n          let arrow = '';\n          const originKey = column.key.substring(column.label.length).trim();\n          if (!hasColumnColorFormatters && hasBasicColorFormatters) {\n            backgroundColor =\n              basicColorFormatters[row.index][originKey]?.backgroundColor;\n            arrow =\n              column.label === comparisonLabels[0]\n                ? basicColorFormatters[row.index][originKey]?.mainArrow\n                : '';\n          }\n\n          if (hasColumnColorFormatters) {\n            columnColorFormatters!\n              .filter(formatter => formatter.column === column.key)\n              .forEach(formatter => {\n                const formatterResult =\n                  value || value === 0\n                    ? formatter.getColorFromValue(value as number)\n                    : false;\n                if (formatterResult) {\n                  backgroundColor = formatterResult;\n                }\n              });\n          }\n\n          if (\n            basicColorColumnFormatters &&\n            basicColorColumnFormatters?.length > 0\n          ) {\n            backgroundColor =\n              basicColorColumnFormatters[row.index][column.key]\n                ?.backgroundColor || backgroundColor;\n            arrow =\n              column.label === comparisonLabels[0]\n                ? basicColorColumnFormatters[row.index][column.key]?.mainArrow\n                : '';\n          }\n\n          const StyledCell = styled.td`\n            text-align: ${sharedStyle.textAlign};\n            white-space: ${value instanceof Date ? 'nowrap' : undefined};\n            position: relative;\n            background: ${backgroundColor || undefined};\n          `;\n\n          const cellBarStyles = css`\n            position: absolute;\n            height: 100%;\n            display: block;\n            top: 0;\n            ${valueRange &&\n            `\n                width: ${`${cellWidth({\n                  value: value as number,\n                  valueRange,\n                  alignPositiveNegative,\n                })}%`};\n                left: ${`${cellOffset({\n                  value: value as number,\n                  valueRange,\n                  alignPositiveNegative,\n                })}%`};\n                background-color: ${cellBackground({\n                  value: value as number,\n                  colorPositiveNegative,\n                })};\n              `}\n          `;\n\n          let arrowStyles = css`\n            color: ${basicColorFormatters &&\n            basicColorFormatters[row.index][originKey]?.arrowColor ===\n              ColorSchemeEnum.Green\n              ? theme.colors.success.base\n              : theme.colors.error.base};\n            margin-right: ${theme.gridUnit}px;\n          `;\n\n          if (\n            basicColorColumnFormatters &&\n            basicColorColumnFormatters?.length > 0\n          ) {\n            arrowStyles = css`\n              color: ${basicColorColumnFormatters[row.index][column.key]\n                ?.arrowColor === ColorSchemeEnum.Green\n                ? theme.colors.success.base\n                : theme.colors.error.base};\n              margin-right: ${theme.gridUnit}px;\n            `;\n          }\n\n          const cellProps = {\n            'aria-labelledby': `header-${column.key}`,\n            role: 'cell',\n            // show raw number in title in case of numeric values\n            title: typeof value === 'number' ? String(value) : undefined,\n            onClick:\n              emitCrossFilters && !valueRange && !isMetric\n                ? () => {\n                    // allow selecting text in a cell\n                    if (!getSelectedText()) {\n                      toggleFilter(key, value);\n                    }\n                  }\n                : undefined,\n            onContextMenu: (e: MouseEvent) => {\n              if (handleContextMenu) {\n                e.preventDefault();\n                e.stopPropagation();\n                handleContextMenu(\n                  row.original,\n                  { key, value, isMetric },\n                  e.nativeEvent.clientX,\n                  e.nativeEvent.clientY,\n                );\n              }\n            },\n            className: [\n              className,\n              value == null ? 'dt-is-null' : '',\n              isActiveFilterValue(key, value) ? ' dt-is-active-filter' : '',\n            ].join(' '),\n            tabIndex: 0,\n          };\n          if (html) {\n            if (truncateLongCells) {\n              // eslint-disable-next-line react/no-danger\n              return (\n                <StyledCell {...cellProps}>\n                  <div\n                    className=\"dt-truncate-cell\"\n                    style={columnWidth ? { width: columnWidth } : undefined}\n                    dangerouslySetInnerHTML={html}\n                  />\n                </StyledCell>\n              );\n            }\n            // eslint-disable-next-line react/no-danger\n            return <StyledCell {...cellProps} dangerouslySetInnerHTML={html} />;\n          }\n          // If cellProps renders textContent already, then we don't have to\n          // render `Cell`. This saves some time for large tables.\n          return (\n            <StyledCell {...cellProps}>\n              {valueRange && (\n                <div\n                  /* The following classes are added to support custom CSS styling */\n                  className={cx(\n                    'cell-bar',\n                    isNumber(value) && value < 0 ? 'negative' : 'positive',\n                  )}\n                  css={cellBarStyles}\n                  role=\"presentation\"\n                />\n              )}\n              {truncateLongCells ? (\n                <div\n                  className=\"dt-truncate-cell\"\n                  style={columnWidth ? { width: columnWidth } : undefined}\n                >\n                  {arrow && <span css={arrowStyles}>{arrow}</span>}\n                  {text}\n                </div>\n              ) : (\n                <>\n                  {arrow && <span css={arrowStyles}>{arrow}</span>}\n                  {text}\n                </>\n              )}\n            </StyledCell>\n          );\n        },\n        Header: ({ column: col, onClick, style, onDragStart, onDrop }) => (\n          <th\n            id={`header-${column.key}`}\n            title={t('Shift + Click to sort by multiple columns')}\n            className={[className, col.isSorted ? 'is-sorted' : ''].join(' ')}\n            style={{\n              ...sharedStyle,\n              ...style,\n            }}\n            onKeyDown={(e: ReactKeyboardEvent<HTMLElement>) => {\n              // programatically sort column on keypress\n              if (Object.values(ACTION_KEYS).includes(e.key)) {\n                col.toggleSortBy();\n              }\n            }}\n            role=\"columnheader button\"\n            onClick={onClick}\n            data-column-name={col.id}\n            {...(allowRearrangeColumns && {\n              draggable: 'true',\n              onDragStart,\n              onDragOver: e => e.preventDefault(),\n              onDragEnter: e => e.preventDefault(),\n              onDrop,\n            })}\n            tabIndex={0}\n          >\n            {/* can't use `columnWidth &&` because it may also be zero */}\n            {config.columnWidth ? (\n              // column width hint\n              <div\n                style={{\n                  width: columnWidth,\n                  height: 0.01,\n                }}\n              />\n            ) : null}\n            <div\n              data-column-name={col.id}\n              css={{\n                display: 'inline-flex',\n                alignItems: 'flex-end',\n              }}\n            >\n              <span data-column-name={col.id}>{label}</span>\n              <SortIcon column={col} />\n            </div>\n          </th>\n        ),\n        Footer: totals ? (\n          i === 0 ? (\n            <th>\n              <div\n                css={css`\n                  display: flex;\n                  align-items: center;\n                  & svg {\n                    margin-left: ${theme.gridUnit}px;\n                    color: ${theme.colors.grayscale.dark1} !important;\n                  }\n                `}\n              >\n                {t('Summary')}\n                <Tooltip\n                  overlay={t(\n                    'Show total aggregations of selected metrics. Note that row limit does not apply to the result.',\n                  )}\n                >\n                  <InfoCircleOutlined />\n                </Tooltip>\n              </div>\n            </th>\n          ) : (\n            <td style={sharedStyle}>\n              <strong>{formatColumnValue(column, totals[key])[1]}</strong>\n            </td>\n          )\n        ) : undefined,\n        sortDescFirst: sortDesc,\n        sortType: getSortTypeByDataType(dataType),\n      };\n    },\n    [\n      defaultAlignPN,\n      defaultColorPN,\n      emitCrossFilters,\n      getValueRange,\n      isActiveFilterValue,\n      isRawRecords,\n      showCellBars,\n      sortDesc,\n      toggleFilter,\n      totals,\n      columnColorFormatters,\n      columnOrderToggle,\n    ],\n  );\n\n  const columns = useMemo(\n    () => filteredColumnsMeta.map(getColumnConfigs),\n    [filteredColumnsMeta, getColumnConfigs],\n  );\n\n  const handleServerPaginationChange = useCallback(\n    (pageNumber: number, pageSize: number) => {\n      updateExternalFormData(setDataMask, pageNumber, pageSize);\n    },\n    [setDataMask],\n  );\n\n  const handleSizeChange = useCallback(\n    ({ width, height }: { width: number; height: number }) => {\n      setTableSize({ width, height });\n    },\n    [],\n  );\n\n  useLayoutEffect(() => {\n    // After initial load the table should resize only when the new sizes\n    // Are not only scrollbar updates, otherwise, the table would twicth\n    const scrollBarSize = getScrollBarSize();\n    const { width: tableWidth, height: tableHeight } = tableSize;\n    // Table is increasing its original size\n    if (\n      width - tableWidth > scrollBarSize ||\n      height - tableHeight > scrollBarSize\n    ) {\n      handleSizeChange({\n        width: width - scrollBarSize,\n        height: height - scrollBarSize,\n      });\n    } else if (\n      tableWidth - width > scrollBarSize ||\n      tableHeight - height > scrollBarSize\n    ) {\n      // Table is decreasing its original size\n      handleSizeChange({\n        width,\n        height,\n      });\n    }\n  }, [width, height, handleSizeChange, tableSize]);\n\n  const { width: widthFromState, height: heightFromState } = tableSize;\n\n  return (\n    <Styles>\n      <DataTable<D>\n        columns={columns}\n        data={data}\n        rowCount={rowCount}\n        tableClassName=\"table table-striped table-condensed\"\n        pageSize={pageSize}\n        serverPaginationData={serverPaginationData}\n        pageSizeOptions={pageSizeOptions}\n        width={widthFromState}\n        height={heightFromState}\n        serverPagination={serverPagination}\n        onServerPaginationChange={handleServerPaginationChange}\n        onColumnOrderChange={() => setColumnOrderToggle(!columnOrderToggle)}\n        // 9 page items in > 340px works well even for 100+ pages\n        maxPageItemCount={width > 340 ? 9 : 7}\n        noResults={getNoResultsMessage}\n        searchInput={includeSearch && SearchInput}\n        selectPageSize={pageSize !== null && SelectPageSize}\n        // not in use in Superset, but needed for unit tests\n        sticky={sticky}\n        renderGroupingHeaders={\n          !isEmpty(groupHeaderColumns) ? renderGroupingHeaders : undefined\n        }\n        renderTimeComparisonDropdown={\n          isUsingTimeComparison ? renderTimeComparisonDropdown : undefined\n        }\n      />\n    </Styles>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}