{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { css, t } from '@superset-ui/core';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport Icons from 'src/components/Icons';\nimport { StyledFooterButton, StyledCatalogTable } from '../styles';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nexport const TableCatalog = ({ required, changeMethods, getValidation, validationErrors, db }) => {\n  const tableCatalog = (db == null ? void 0 : db.catalog) || [];\n  const catalogError = validationErrors || {};\n  return _jsxs(StyledCatalogTable, { children: [\n    _jsx(\"h4\", { className: \"gsheet-title\", children:\n      t('Connect Google Sheets as tables to this database') }\n    ),\n    _jsxs(\"div\", { children: [\n      tableCatalog == null ? void 0 : tableCatalog.map((sheet, idx) => {var _catalogError$idx, _catalogError$idx2;return _jsxs(_Fragment, { children: [\n          _jsx(FormLabel, { className: \"catalog-label\", required: true, children:\n            t('Google Sheet Name and URL') }\n          ),\n          _jsxs(\"div\", { className: \"catalog-name\", children: [\n            _jsx(ValidatedInput, { className: \"catalog-name-input\", required: required, validationMethods: { onBlur: getValidation }, errorMessage: (_catalogError$idx = catalogError[idx]) == null ? void 0 : _catalogError$idx.name, placeholder: t('Enter a name for this sheet'), onChange: (e) => {\n                changeMethods.onParametersChange({\n                  target: {\n                    type: `catalog-${idx}`,\n                    name: 'name',\n                    value: e.target.value\n                  }\n                });\n              }, value: sheet.name }),\n            (tableCatalog == null ? void 0 : tableCatalog.length) > 1 && _jsx(Icons.CloseOutlined, { css: (theme) => css`\n                    align-self: center;\n                    background: ${theme.colors.grayscale.light4};\n                    margin: 5px 5px 8px 5px;\n\n                    &.anticon > * {\n                      line-height: 0;\n                    }\n                  `, iconSize: \"m\", onClick: () => changeMethods.onRemoveTableCatalog(idx) })] }\n          ),\n          _jsx(ValidatedInput, { className: \"catalog-name-url\", required: required, validationMethods: { onBlur: getValidation }, errorMessage: (_catalogError$idx2 = catalogError[idx]) == null ? void 0 : _catalogError$idx2.url, placeholder: t('Paste the shareable Google Sheet URL here'), onChange: (e) => changeMethods.onParametersChange({\n              target: {\n                type: `catalog-${idx}`,\n                name: 'value',\n                value: e.target.value\n              }\n            }), value: sheet.value })] }\n        );}),\n      _jsxs(StyledFooterButton, { className: \"catalog-add-btn\", onClick: () => {\n          changeMethods.onAddTableCatalog();\n        }, children: [\"+ \",\n        t('Add sheet')] }\n      )] }\n    )] }\n  );\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TableCatalog, \"TableCatalog\", \"/app/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/TableCatalog.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["css","t","ValidatedInput","FormLabel","Icons","StyledFooterButton","StyledCatalogTable","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TableCatalog","required","changeMethods","getValidation","validationErrors","db","tableCatalog","catalog","catalogError","children","className","map","sheet","idx","_catalogError$idx","_catalogError$idx2","validationMethods","onBlur","errorMessage","name","placeholder","onChange","e","onParametersChange","target","type","value","length","CloseOutlined","theme","colors","grayscale","light4","iconSize","onClick","onRemoveTableCatalog","url","onAddTableCatalog","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/features/databases/DatabaseModal/DatabaseConnectionForm/TableCatalog.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { css, SupersetTheme, t } from '@superset-ui/core';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport Icons from 'src/components/Icons';\nimport { StyledFooterButton, StyledCatalogTable } from '../styles';\nimport { CatalogObject, FieldPropTypes } from '../../types';\n\nexport const TableCatalog = ({\n  required,\n  changeMethods,\n  getValidation,\n  validationErrors,\n  db,\n}: FieldPropTypes) => {\n  const tableCatalog = db?.catalog || [];\n  const catalogError = validationErrors || {};\n  return (\n    <StyledCatalogTable>\n      <h4 className=\"gsheet-title\">\n        {t('Connect Google Sheets as tables to this database')}\n      </h4>\n      <div>\n        {tableCatalog?.map((sheet: CatalogObject, idx: number) => (\n          <>\n            <FormLabel className=\"catalog-label\" required>\n              {t('Google Sheet Name and URL')}\n            </FormLabel>\n            <div className=\"catalog-name\">\n              <ValidatedInput\n                className=\"catalog-name-input\"\n                required={required}\n                validationMethods={{ onBlur: getValidation }}\n                errorMessage={catalogError[idx]?.name}\n                placeholder={t('Enter a name for this sheet')}\n                onChange={(e: { target: { value: any } }) => {\n                  changeMethods.onParametersChange({\n                    target: {\n                      type: `catalog-${idx}`,\n                      name: 'name',\n                      value: e.target.value,\n                    },\n                  });\n                }}\n                value={sheet.name}\n              />\n              {tableCatalog?.length > 1 && (\n                <Icons.CloseOutlined\n                  css={(theme: SupersetTheme) => css`\n                    align-self: center;\n                    background: ${theme.colors.grayscale.light4};\n                    margin: 5px 5px 8px 5px;\n\n                    &.anticon > * {\n                      line-height: 0;\n                    }\n                  `}\n                  iconSize=\"m\"\n                  onClick={() => changeMethods.onRemoveTableCatalog(idx)}\n                />\n              )}\n            </div>\n            <ValidatedInput\n              className=\"catalog-name-url\"\n              required={required}\n              validationMethods={{ onBlur: getValidation }}\n              errorMessage={catalogError[idx]?.url}\n              placeholder={t('Paste the shareable Google Sheet URL here')}\n              onChange={(e: { target: { value: any } }) =>\n                changeMethods.onParametersChange({\n                  target: {\n                    type: `catalog-${idx}`,\n                    name: 'value',\n                    value: e.target.value,\n                  },\n                })\n              }\n              value={sheet.value}\n            />\n          </>\n        ))}\n        <StyledFooterButton\n          className=\"catalog-add-btn\"\n          onClick={() => {\n            changeMethods.onAddTableCatalog();\n          }}\n        >\n          + {t('Add sheet')}\n        </StyledFooterButton>\n      </div>\n    </StyledCatalogTable>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}