{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useRef } from 'react';\nimport { useTable, usePagination, useSortBy, useGlobalFilter, useColumnOrder } from 'react-table';\nimport { matchSorter, rankings } from 'match-sorter';\nimport { typedMemo, usePrevious } from '@superset-ui/core';\n\nimport GlobalFilter from './components/GlobalFilter';\nimport SelectPageSize from './components/SelectPageSize';\nimport SimplePagination from './components/Pagination';\nimport useSticky from './hooks/useSticky';\nimport { PAGE_SIZE_OPTIONS } from '../consts';\nimport { sortAlphanumericCaseInsensitive } from './utils/sortAlphanumericCaseInsensitive';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst sortTypes = {\n  alphanumeric: sortAlphanumericCaseInsensitive\n};\n// Be sure to pass our updateMyData and the skipReset option\nconst _default = typedMemo(__signature__(function DataTable({ tableClassName, columns, data, serverPaginationData, width: initialWidth = '100%', height: initialHeight = 300, pageSize: initialPageSize = 0, initialState: initialState_ = {}, pageSizeOptions = PAGE_SIZE_OPTIONS, maxPageItemCount = 9, sticky: doSticky, searchInput = true, onServerPaginationChange, rowCount, selectPageSize, noResults: noResultsText = 'No data found', hooks, serverPagination, wrapperRef: userWrapperRef, onColumnOrderChange, renderGroupingHeaders, renderTimeComparisonDropdown, ...moreUseTableOptions }) {\n  const tableHooks = [\n  useGlobalFilter,\n  useSortBy,\n  usePagination,\n  useColumnOrder,\n  doSticky ? useSticky : [],\n  hooks || []].\n  flat();\n  const columnNames = Object.keys((data == null ? void 0 : data[0]) || {});\n  const previousColumnNames = usePrevious(columnNames);\n  const resultsSize = serverPagination ? rowCount : data.length;\n  const sortByRef = useRef([]); // cache initial `sortby` so sorting doesn't trigger page reset\n  const pageSizeRef = useRef([initialPageSize, resultsSize]);\n  const hasPagination = initialPageSize > 0 && resultsSize > 0; // pageSize == 0 means no pagination\n  const hasGlobalControl = hasPagination || !!searchInput || renderTimeComparisonDropdown;\n  const initialState = {\n    ...initialState_,\n    // zero length means all pages, the `usePagination` plugin does not\n    // understand pageSize = 0\n    sortBy: sortByRef.current,\n    pageSize: initialPageSize > 0 ? initialPageSize : resultsSize || 10\n  };\n  const defaultWrapperRef = useRef(null);\n  const globalControlRef = useRef(null);\n  const paginationRef = useRef(null);\n  const wrapperRef = userWrapperRef || defaultWrapperRef;\n  const paginationData = JSON.stringify(serverPaginationData);\n  const defaultGetTableSize = useCallback(() => {\n    if (wrapperRef.current) {var _globalControlRef$cur, _paginationRef$curren;\n      // `initialWidth` and `initialHeight` could be also parameters like `100%`\n      // `Number` returns `NaN` on them, then we fallback to computed size\n      const width = Number(initialWidth) || wrapperRef.current.clientWidth;\n      const height = (Number(initialHeight) || wrapperRef.current.clientHeight) - (\n      ((_globalControlRef$cur = globalControlRef.current) == null ? void 0 : _globalControlRef$cur.clientHeight) || 0) - (\n      ((_paginationRef$curren = paginationRef.current) == null ? void 0 : _paginationRef$curren.clientHeight) || 0);\n      return { width, height };\n    }\n    return undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  initialHeight,\n  initialWidth,\n  wrapperRef,\n  hasPagination,\n  hasGlobalControl,\n  paginationRef,\n  resultsSize,\n  paginationData]\n  );\n  const defaultGlobalFilter = useCallback((rows, columnIds, filterValue) => {\n    // allow searching by \"col1_value col2_value\"\n    const joinedString = (row) => columnIds.map((x) => row.values[x]).join(' ');\n    return matchSorter(rows, filterValue, {\n      keys: [...columnIds, joinedString],\n      threshold: rankings.ACRONYM\n    });\n  }, []);\n  const { getTableProps, getTableBodyProps, prepareRow, headerGroups, footerGroups, page, pageCount, gotoPage, preGlobalFilteredRows, setGlobalFilter, setPageSize: setPageSize_, wrapStickyTable, setColumnOrder, allColumns, state: { pageIndex, pageSize, globalFilter: filterValue, sticky = {} } } = useTable({\n    columns,\n    data,\n    initialState,\n    getTableSize: defaultGetTableSize,\n    globalFilter: defaultGlobalFilter,\n    sortTypes,\n    autoResetSortBy: !_isEqual(columnNames, previousColumnNames),\n    ...moreUseTableOptions\n  }, ...tableHooks);\n  // make setPageSize accept 0\n  const setPageSize = (size) => {\n    if (serverPagination) {\n      onServerPaginationChange(0, size);\n    }\n    // keep the original size if data is empty\n    if (size || resultsSize !== 0) {\n      setPageSize_(size === 0 ? resultsSize : size);\n    }\n  };\n  const noResults = typeof noResultsText === 'function' ?\n  noResultsText(filterValue) :\n  noResultsText;\n  const getNoResults = () => _jsx(\"div\", { className: \"dt-no-results\", children: noResults });\n  if (!columns || columns.length === 0) {\n    return wrapStickyTable ? wrapStickyTable(getNoResults) : getNoResults();\n  }\n  const shouldRenderFooter = columns.some((x) => !!x.Footer);\n  let columnBeingDragged = -1;\n  const onDragStart = (e) => {\n    const el = e.target;\n    columnBeingDragged = allColumns.findIndex((col) => col.id === el.dataset.columnName);\n    e.dataTransfer.setData('text/plain', `${columnBeingDragged}`);\n  };\n  const onDrop = (e) => {\n    const el = e.target;\n    const newPosition = allColumns.findIndex((col) => col.id === el.dataset.columnName);\n    if (newPosition !== -1) {\n      const currentCols = allColumns.map((c) => c.id);\n      const colToBeMoved = currentCols.splice(columnBeingDragged, 1);\n      currentCols.splice(newPosition, 0, colToBeMoved[0]);\n      setColumnOrder(currentCols);\n      // toggle value in TableChart to trigger column width recalc\n      onColumnOrderChange();\n    }\n    e.preventDefault();\n  };\n  const renderTable = () => _jsxs(\"table\", { ...getTableProps({ className: tableClassName }), children: [\n    _jsxs(\"thead\", { children: [\n      renderGroupingHeaders ? renderGroupingHeaders() : null,\n      headerGroups.map((headerGroup) => {\n        const { key: headerGroupKey, ...headerGroupProps } = headerGroup.getHeaderGroupProps();\n        return _jsx(\"tr\", { ...headerGroupProps, children:\n          headerGroup.headers.map((column) => column.render('Header', {\n            key: column.id,\n            ...column.getSortByToggleProps(),\n            onDragStart,\n            onDrop\n          })) }, headerGroupKey || headerGroup.id\n        );\n      })] }\n    ),\n    _jsx(\"tbody\", { ...getTableBodyProps(), children:\n      page && page.length > 0 ? page.map((row) => {\n        prepareRow(row);\n        const { key: rowKey, ...rowProps } = row.getRowProps();\n        return _jsx(\"tr\", { ...rowProps, role: \"row\", children:\n          row.cells.map((cell) => cell.render('Cell', { key: cell.column.id })) }, rowKey || row.id\n        );\n      }) : _jsx(\"tr\", { children:\n        _jsx(\"td\", { className: \"dt-no-results\", colSpan: columns.length, children:\n          noResults }\n        ) }\n      ) }\n    ),\n    shouldRenderFooter && _jsx(\"tfoot\", { children:\n      footerGroups.map((footerGroup) => {\n        const { key: footerGroupKey, ...footerGroupProps } = footerGroup.getHeaderGroupProps();\n        return _jsx(\"tr\", { ...footerGroupProps, role: \"row\", children:\n          footerGroup.headers.map((column) => column.render('Footer', { key: column.id })) }, footerGroupKey || footerGroup.id\n        );\n      }) }\n    )] }\n  );\n  // force update the pageSize when it's been update from the initial state\n  if (pageSizeRef.current[0] !== initialPageSize ||\n  // when initialPageSize stays as zero, but total number of records changed,\n  // we'd also need to update page size\n  initialPageSize === 0 && pageSizeRef.current[1] !== resultsSize) {\n    pageSizeRef.current = [initialPageSize, resultsSize];\n    setPageSize(initialPageSize);\n  }\n  const paginationStyle = sticky.height ?\n  {} :\n  { visibility: 'hidden' };\n  let resultPageCount = pageCount;\n  let resultCurrentPageSize = pageSize;\n  let resultCurrentPage = pageIndex;\n  let resultOnPageChange = gotoPage;\n  if (serverPagination) {var _serverPaginationData, _serverPaginationData2;\n    const serverPageSize = (_serverPaginationData = serverPaginationData == null ? void 0 : serverPaginationData.pageSize) != null ? _serverPaginationData : initialPageSize;\n    resultPageCount = Math.ceil(rowCount / serverPageSize);\n    if (!Number.isFinite(resultPageCount)) {\n      resultPageCount = 0;\n    }\n    resultCurrentPageSize = serverPageSize;\n    const foundPageSizeIndex = pageSizeOptions.findIndex(([option]) => option >= resultCurrentPageSize);\n    if (foundPageSizeIndex === -1) {\n      resultCurrentPageSize = 0;\n    }\n    resultCurrentPage = (_serverPaginationData2 = serverPaginationData == null ? void 0 : serverPaginationData.currentPage) != null ? _serverPaginationData2 : 0;\n    resultOnPageChange = (pageNumber) => onServerPaginationChange(pageNumber, serverPageSize);\n  }\n  return _jsxs(\"div\", { ref: wrapperRef, style: { width: initialWidth, height: initialHeight }, children: [\n    hasGlobalControl ? _jsx(\"div\", { ref: globalControlRef, className: \"form-inline dt-controls\", children:\n      _jsxs(\"div\", { className: \"row\", children: [\n        _jsx(\"div\", { className: renderTimeComparisonDropdown ? 'col-sm-5' : 'col-sm-6', children:\n          hasPagination ? _jsx(SelectPageSize, { total: resultsSize, current: resultCurrentPageSize, options: pageSizeOptions, selectRenderer: typeof selectPageSize === 'boolean' ?\n            undefined :\n            selectPageSize, onChange: setPageSize }) : null }\n        ),\n        searchInput ? _jsx(\"div\", { className: \"col-sm-6\", children:\n          _jsx(GlobalFilter, { searchInput: typeof searchInput === 'boolean' ? undefined : searchInput, preGlobalFilteredRows: preGlobalFilteredRows, setGlobalFilter: setGlobalFilter, filterValue: filterValue }) }\n        ) : null,\n        renderTimeComparisonDropdown ? _jsx(\"div\", { className: \"col-sm-1\", style: { float: 'right', marginTop: '6px' }, children:\n          renderTimeComparisonDropdown() }\n        ) : null] }\n      ) }\n    ) : null,\n    wrapStickyTable ? wrapStickyTable(renderTable) : renderTable(),\n    hasPagination && resultPageCount > 1 ? _jsx(SimplePagination, { ref: paginationRef, style: paginationStyle, maxPageItemCount: maxPageItemCount, pageCount: resultPageCount, currentPage: resultCurrentPage, onPageChange: resultOnPageChange }) : null] }\n  );\n}, \"usePrevious{previousColumnNames}\\nuseRef{sortByRef}\\nuseRef{pageSizeRef}\\nuseRef{defaultWrapperRef}\\nuseRef{globalControlRef}\\nuseRef{paginationRef}\\nuseCallback{defaultGetTableSize}\\nuseCallback{defaultGlobalFilter}\\nuseTable{{ getTableProps, getTableBodyProps, prepareRow, headerGroups, footerGroups, page, pageCount, gotoPage, preGlobalFilteredRows, setGlobalFilter, setPageSize: setPageSize_, wrapStickyTable, setColumnOrder, allColumns, state: { pageIndex, pageSize, globalFilter: filterValue, sticky = {} }, }}\", () => [usePrevious, useTable]));export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(sortTypes, \"sortTypes\", \"/app/superset-frontend/plugins/plugin-chart-table/src/DataTable/DataTable.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/plugins/plugin-chart-table/src/DataTable/DataTable.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useRef","useTable","usePagination","useSortBy","useGlobalFilter","useColumnOrder","matchSorter","rankings","typedMemo","usePrevious","GlobalFilter","SelectPageSize","SimplePagination","useSticky","PAGE_SIZE_OPTIONS","sortAlphanumericCaseInsensitive","jsx","_jsx","jsxs","_jsxs","sortTypes","alphanumeric","_default","__signature__","DataTable","tableClassName","columns","data","serverPaginationData","width","initialWidth","height","initialHeight","pageSize","initialPageSize","initialState","initialState_","pageSizeOptions","maxPageItemCount","sticky","doSticky","searchInput","onServerPaginationChange","rowCount","selectPageSize","noResults","noResultsText","hooks","serverPagination","wrapperRef","userWrapperRef","onColumnOrderChange","renderGroupingHeaders","renderTimeComparisonDropdown","moreUseTableOptions","tableHooks","flat","columnNames","Object","keys","previousColumnNames","resultsSize","length","sortByRef","pageSizeRef","hasPagination","hasGlobalControl","sortBy","current","defaultWrapperRef","globalControlRef","paginationRef","paginationData","JSON","stringify","defaultGetTableSize","_globalControlRef$cur","_paginationRef$curren","Number","clientWidth","clientHeight","undefined","defaultGlobalFilter","rows","columnIds","filterValue","joinedString","row","map","x","values","join","threshold","ACRONYM","getTableProps","getTableBodyProps","prepareRow","headerGroups","footerGroups","page","pageCount","gotoPage","preGlobalFilteredRows","setGlobalFilter","setPageSize","setPageSize_","wrapStickyTable","setColumnOrder","allColumns","state","pageIndex","globalFilter","getTableSize","autoResetSortBy","_isEqual","size","getNoResults","className","children","shouldRenderFooter","some","Footer","columnBeingDragged","onDragStart","e","el","target","findIndex","col","id","dataset","columnName","dataTransfer","setData","onDrop","newPosition","currentCols","c","colToBeMoved","splice","preventDefault","renderTable","headerGroup","key","headerGroupKey","headerGroupProps","getHeaderGroupProps","headers","column","render","getSortByToggleProps","rowKey","rowProps","getRowProps","role","cells","cell","colSpan","footerGroup","footerGroupKey","footerGroupProps","paginationStyle","visibility","resultPageCount","resultCurrentPageSize","resultCurrentPage","resultOnPageChange","_serverPaginationData","_serverPaginationData2","serverPageSize","Math","ceil","isFinite","foundPageSizeIndex","option","currentPage","pageNumber","ref","style","total","options","selectRenderer","onChange","float","marginTop","onPageChange","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/plugin-chart-table/src/DataTable/DataTable.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  useCallback,\n  useRef,\n  ReactNode,\n  HTMLProps,\n  MutableRefObject,\n  CSSProperties,\n  DragEvent,\n} from 'react';\n\nimport {\n  useTable,\n  usePagination,\n  useSortBy,\n  useGlobalFilter,\n  useColumnOrder,\n  PluginHook,\n  TableOptions,\n  FilterType,\n  IdType,\n  Row,\n} from 'react-table';\nimport { matchSorter, rankings } from 'match-sorter';\nimport { typedMemo, usePrevious } from '@superset-ui/core';\nimport { isEqual } from 'lodash';\nimport GlobalFilter, { GlobalFilterProps } from './components/GlobalFilter';\nimport SelectPageSize, {\n  SelectPageSizeProps,\n  SizeOption,\n} from './components/SelectPageSize';\nimport SimplePagination from './components/Pagination';\nimport useSticky from './hooks/useSticky';\nimport { PAGE_SIZE_OPTIONS } from '../consts';\nimport { sortAlphanumericCaseInsensitive } from './utils/sortAlphanumericCaseInsensitive';\n\nexport interface DataTableProps<D extends object> extends TableOptions<D> {\n  tableClassName?: string;\n  searchInput?: boolean | GlobalFilterProps<D>['searchInput'];\n  selectPageSize?: boolean | SelectPageSizeProps['selectRenderer'];\n  pageSizeOptions?: SizeOption[]; // available page size options\n  maxPageItemCount?: number;\n  hooks?: PluginHook<D>[]; // any additional hooks\n  width?: string | number;\n  height?: string | number;\n  serverPagination?: boolean;\n  onServerPaginationChange: (pageNumber: number, pageSize: number) => void;\n  serverPaginationData: { pageSize?: number; currentPage?: number };\n  pageSize?: number;\n  noResults?: string | ((filterString: string) => ReactNode);\n  sticky?: boolean;\n  rowCount: number;\n  wrapperRef?: MutableRefObject<HTMLDivElement>;\n  onColumnOrderChange: () => void;\n  renderGroupingHeaders?: () => JSX.Element;\n  renderTimeComparisonDropdown?: () => JSX.Element;\n}\n\nexport interface RenderHTMLCellProps extends HTMLProps<HTMLTableCellElement> {\n  cellContent: ReactNode;\n}\n\nconst sortTypes = {\n  alphanumeric: sortAlphanumericCaseInsensitive,\n};\n\n// Be sure to pass our updateMyData and the skipReset option\nexport default typedMemo(function DataTable<D extends object>({\n  tableClassName,\n  columns,\n  data,\n  serverPaginationData,\n  width: initialWidth = '100%',\n  height: initialHeight = 300,\n  pageSize: initialPageSize = 0,\n  initialState: initialState_ = {},\n  pageSizeOptions = PAGE_SIZE_OPTIONS,\n  maxPageItemCount = 9,\n  sticky: doSticky,\n  searchInput = true,\n  onServerPaginationChange,\n  rowCount,\n  selectPageSize,\n  noResults: noResultsText = 'No data found',\n  hooks,\n  serverPagination,\n  wrapperRef: userWrapperRef,\n  onColumnOrderChange,\n  renderGroupingHeaders,\n  renderTimeComparisonDropdown,\n  ...moreUseTableOptions\n}: DataTableProps<D>): JSX.Element {\n  const tableHooks: PluginHook<D>[] = [\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useColumnOrder,\n    doSticky ? useSticky : [],\n    hooks || [],\n  ].flat();\n  const columnNames = Object.keys(data?.[0] || {});\n  const previousColumnNames = usePrevious(columnNames);\n  const resultsSize = serverPagination ? rowCount : data.length;\n  const sortByRef = useRef([]); // cache initial `sortby` so sorting doesn't trigger page reset\n  const pageSizeRef = useRef([initialPageSize, resultsSize]);\n  const hasPagination = initialPageSize > 0 && resultsSize > 0; // pageSize == 0 means no pagination\n  const hasGlobalControl =\n    hasPagination || !!searchInput || renderTimeComparisonDropdown;\n  const initialState = {\n    ...initialState_,\n    // zero length means all pages, the `usePagination` plugin does not\n    // understand pageSize = 0\n    sortBy: sortByRef.current,\n    pageSize: initialPageSize > 0 ? initialPageSize : resultsSize || 10,\n  };\n  const defaultWrapperRef = useRef<HTMLDivElement>(null);\n  const globalControlRef = useRef<HTMLDivElement>(null);\n  const paginationRef = useRef<HTMLDivElement>(null);\n  const wrapperRef = userWrapperRef || defaultWrapperRef;\n  const paginationData = JSON.stringify(serverPaginationData);\n\n  const defaultGetTableSize = useCallback(() => {\n    if (wrapperRef.current) {\n      // `initialWidth` and `initialHeight` could be also parameters like `100%`\n      // `Number` returns `NaN` on them, then we fallback to computed size\n      const width = Number(initialWidth) || wrapperRef.current.clientWidth;\n      const height =\n        (Number(initialHeight) || wrapperRef.current.clientHeight) -\n        (globalControlRef.current?.clientHeight || 0) -\n        (paginationRef.current?.clientHeight || 0);\n      return { width, height };\n    }\n    return undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    initialHeight,\n    initialWidth,\n    wrapperRef,\n    hasPagination,\n    hasGlobalControl,\n    paginationRef,\n    resultsSize,\n    paginationData,\n  ]);\n\n  const defaultGlobalFilter: FilterType<D> = useCallback(\n    (rows: Row<D>[], columnIds: IdType<D>[], filterValue: string) => {\n      // allow searching by \"col1_value col2_value\"\n      const joinedString = (row: Row<D>) =>\n        columnIds.map(x => row.values[x]).join(' ');\n      return matchSorter(rows, filterValue, {\n        keys: [...columnIds, joinedString],\n        threshold: rankings.ACRONYM,\n      }) as typeof rows;\n    },\n    [],\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    prepareRow,\n    headerGroups,\n    footerGroups,\n    page,\n    pageCount,\n    gotoPage,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n    setPageSize: setPageSize_,\n    wrapStickyTable,\n    setColumnOrder,\n    allColumns,\n    state: { pageIndex, pageSize, globalFilter: filterValue, sticky = {} },\n  } = useTable<D>(\n    {\n      columns,\n      data,\n      initialState,\n      getTableSize: defaultGetTableSize,\n      globalFilter: defaultGlobalFilter,\n      sortTypes,\n      autoResetSortBy: !isEqual(columnNames, previousColumnNames),\n      ...moreUseTableOptions,\n    },\n    ...tableHooks,\n  );\n  // make setPageSize accept 0\n  const setPageSize = (size: number) => {\n    if (serverPagination) {\n      onServerPaginationChange(0, size);\n    }\n    // keep the original size if data is empty\n    if (size || resultsSize !== 0) {\n      setPageSize_(size === 0 ? resultsSize : size);\n    }\n  };\n\n  const noResults =\n    typeof noResultsText === 'function'\n      ? noResultsText(filterValue as string)\n      : noResultsText;\n\n  const getNoResults = () => <div className=\"dt-no-results\">{noResults}</div>;\n\n  if (!columns || columns.length === 0) {\n    return (\n      wrapStickyTable ? wrapStickyTable(getNoResults) : getNoResults()\n    ) as JSX.Element;\n  }\n\n  const shouldRenderFooter = columns.some(x => !!x.Footer);\n\n  let columnBeingDragged = -1;\n\n  const onDragStart = (e: DragEvent) => {\n    const el = e.target as HTMLTableCellElement;\n    columnBeingDragged = allColumns.findIndex(\n      col => col.id === el.dataset.columnName,\n    );\n    e.dataTransfer.setData('text/plain', `${columnBeingDragged}`);\n  };\n\n  const onDrop = (e: DragEvent) => {\n    const el = e.target as HTMLTableCellElement;\n    const newPosition = allColumns.findIndex(\n      col => col.id === el.dataset.columnName,\n    );\n\n    if (newPosition !== -1) {\n      const currentCols = allColumns.map(c => c.id);\n      const colToBeMoved = currentCols.splice(columnBeingDragged, 1);\n      currentCols.splice(newPosition, 0, colToBeMoved[0]);\n      setColumnOrder(currentCols);\n      // toggle value in TableChart to trigger column width recalc\n      onColumnOrderChange();\n    }\n    e.preventDefault();\n  };\n\n  const renderTable = () => (\n    <table {...getTableProps({ className: tableClassName })}>\n      <thead>\n        {renderGroupingHeaders ? renderGroupingHeaders() : null}\n        {headerGroups.map(headerGroup => {\n          const { key: headerGroupKey, ...headerGroupProps } =\n            headerGroup.getHeaderGroupProps();\n          return (\n            <tr key={headerGroupKey || headerGroup.id} {...headerGroupProps}>\n              {headerGroup.headers.map(column =>\n                column.render('Header', {\n                  key: column.id,\n                  ...column.getSortByToggleProps(),\n                  onDragStart,\n                  onDrop,\n                }),\n              )}\n            </tr>\n          );\n        })}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {page && page.length > 0 ? (\n          page.map(row => {\n            prepareRow(row);\n            const { key: rowKey, ...rowProps } = row.getRowProps();\n            return (\n              <tr key={rowKey || row.id} {...rowProps} role=\"row\">\n                {row.cells.map(cell =>\n                  cell.render('Cell', { key: cell.column.id }),\n                )}\n              </tr>\n            );\n          })\n        ) : (\n          <tr>\n            <td className=\"dt-no-results\" colSpan={columns.length}>\n              {noResults}\n            </td>\n          </tr>\n        )}\n      </tbody>\n      {shouldRenderFooter && (\n        <tfoot>\n          {footerGroups.map(footerGroup => {\n            const { key: footerGroupKey, ...footerGroupProps } =\n              footerGroup.getHeaderGroupProps();\n            return (\n              <tr\n                key={footerGroupKey || footerGroup.id}\n                {...footerGroupProps}\n                role=\"row\"\n              >\n                {footerGroup.headers.map(column =>\n                  column.render('Footer', { key: column.id }),\n                )}\n              </tr>\n            );\n          })}\n        </tfoot>\n      )}\n    </table>\n  );\n\n  // force update the pageSize when it's been update from the initial state\n  if (\n    pageSizeRef.current[0] !== initialPageSize ||\n    // when initialPageSize stays as zero, but total number of records changed,\n    // we'd also need to update page size\n    (initialPageSize === 0 && pageSizeRef.current[1] !== resultsSize)\n  ) {\n    pageSizeRef.current = [initialPageSize, resultsSize];\n    setPageSize(initialPageSize);\n  }\n\n  const paginationStyle: CSSProperties = sticky.height\n    ? {}\n    : { visibility: 'hidden' };\n\n  let resultPageCount = pageCount;\n  let resultCurrentPageSize = pageSize;\n  let resultCurrentPage = pageIndex;\n  let resultOnPageChange: (page: number) => void = gotoPage;\n  if (serverPagination) {\n    const serverPageSize = serverPaginationData?.pageSize ?? initialPageSize;\n    resultPageCount = Math.ceil(rowCount / serverPageSize);\n    if (!Number.isFinite(resultPageCount)) {\n      resultPageCount = 0;\n    }\n    resultCurrentPageSize = serverPageSize;\n    const foundPageSizeIndex = pageSizeOptions.findIndex(\n      ([option]) => option >= resultCurrentPageSize,\n    );\n    if (foundPageSizeIndex === -1) {\n      resultCurrentPageSize = 0;\n    }\n    resultCurrentPage = serverPaginationData?.currentPage ?? 0;\n    resultOnPageChange = (pageNumber: number) =>\n      onServerPaginationChange(pageNumber, serverPageSize);\n  }\n  return (\n    <div\n      ref={wrapperRef}\n      style={{ width: initialWidth, height: initialHeight }}\n    >\n      {hasGlobalControl ? (\n        <div ref={globalControlRef} className=\"form-inline dt-controls\">\n          <div className=\"row\">\n            <div\n              className={renderTimeComparisonDropdown ? 'col-sm-5' : 'col-sm-6'}\n            >\n              {hasPagination ? (\n                <SelectPageSize\n                  total={resultsSize}\n                  current={resultCurrentPageSize}\n                  options={pageSizeOptions}\n                  selectRenderer={\n                    typeof selectPageSize === 'boolean'\n                      ? undefined\n                      : selectPageSize\n                  }\n                  onChange={setPageSize}\n                />\n              ) : null}\n            </div>\n            {searchInput ? (\n              <div className=\"col-sm-6\">\n                <GlobalFilter<D>\n                  searchInput={\n                    typeof searchInput === 'boolean' ? undefined : searchInput\n                  }\n                  preGlobalFilteredRows={preGlobalFilteredRows}\n                  setGlobalFilter={setGlobalFilter}\n                  filterValue={filterValue}\n                />\n              </div>\n            ) : null}\n            {renderTimeComparisonDropdown ? (\n              <div\n                className=\"col-sm-1\"\n                style={{ float: 'right', marginTop: '6px' }}\n              >\n                {renderTimeComparisonDropdown()}\n              </div>\n            ) : null}\n          </div>\n        </div>\n      ) : null}\n      {wrapStickyTable ? wrapStickyTable(renderTable) : renderTable()}\n      {hasPagination && resultPageCount > 1 ? (\n        <SimplePagination\n          ref={paginationRef}\n          style={paginationStyle}\n          maxPageItemCount={maxPageItemCount}\n          pageCount={resultPageCount}\n          currentPage={resultCurrentPage}\n          onPageChange={resultOnPageChange}\n        />\n      ) : null}\n    </div>\n  );\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}