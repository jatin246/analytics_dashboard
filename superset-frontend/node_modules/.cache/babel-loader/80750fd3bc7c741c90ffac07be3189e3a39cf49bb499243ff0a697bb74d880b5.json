{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { css, styled, t } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport {\n  Draggable,\n  Droppable } from\n'src/dashboard/components/dnd/DragDroppable';\nimport DragHandle from 'src/dashboard/components/dnd/DragHandle';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport ResizableContainer from 'src/dashboard/components/resizable/ResizableContainer';\nimport BackgroundStyleDropdown from 'src/dashboard/components/menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport { BACKGROUND_TRANSPARENT } from 'src/dashboard/util/constants';\nimport { EMPTY_CONTAINER_Z_INDEX } from 'src/dashboard/constants';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired\n};\n\nconst defaultProps = {};\n\nconst ColumnStyles = styled.div`\n  ${({ theme, editMode }) => css`\n    &.grid-column {\n      width: 100%;\n      position: relative;\n\n      & > :not(.hover-menu):not(:last-child) {\n        ${!editMode && `margin-bottom: ${theme.gridUnit * 4}px;`}\n      }\n    }\n\n    .dashboard--editing &:after {\n      content: '';\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      top: 0;\n      left: 0;\n      z-index: 1;\n      pointer-events: none;\n      border: 1px dashed ${theme.colors.grayscale.light2};\n    }\n    .dashboard--editing .resizable-container--resizing:hover > &:after,\n    .dashboard--editing .hover-menu:hover + &:after {\n      border: 1px dashed ${theme.colors.primary.base};\n      z-index: 2;\n    }\n\n    & .empty-droptarget {\n      &.droptarget-edge {\n        position: absolute;\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        &:first-child {\n          inset-block-start: 0;\n        }\n      }\n      &:first-child:not(.droptarget-edge) {\n        position: absolute;\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        width: 100%;\n        height: 100%;\n      }\n    }\n  `}\n`;\n\nconst emptyColumnContentStyles = (theme) => css`\n  min-height: ${theme.gridUnit * 25}px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.text.label};\n`;\n\nclass Column extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false\n    };\n    this.handleChangeBackground = this.handleUpdateMeta.bind(\n      this,\n      'background'\n    );\n    this.handleChangeFocus = this.handleChangeFocus.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: Boolean(nextFocus) }));\n  }\n\n  handleUpdateMeta(metaKey, nextValue) {\n    const { updateComponents, component } = this.props;\n    if (nextValue && component.meta[metaKey] !== nextValue) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            [metaKey]: nextValue\n          }\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      component: columnComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      minColumnWidth,\n      depth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      onChangeTab,\n      isComponentVisible\n    } = this.props;\n\n    const columnItems = columnComponent.children || [];\n    const backgroundStyle = backgroundStyleOptions.find(\n      (opt) =>\n      opt.value === (\n      columnComponent.meta.background || BACKGROUND_TRANSPARENT)\n    );\n\n    return (\n      _jsx(Draggable, {\n        component: columnComponent,\n        parentComponent: parentComponent,\n        orientation: \"column\",\n        index: index,\n        depth: depth,\n        onDrop: handleComponentDrop,\n        editMode: editMode, children:\n\n        ({ dragSourceRef }) =>\n        _jsx(ResizableContainer, {\n          id: columnComponent.id,\n          adjustableWidth: true,\n          adjustableHeight: false,\n          widthStep: columnWidth,\n          widthMultiple: columnComponent.meta.width,\n          minWidthMultiple: minColumnWidth,\n          maxWidthMultiple:\n          availableColumnCount + (columnComponent.meta.width || 0),\n\n          onResizeStart: onResizeStart,\n          onResize: onResize,\n          onResizeStop: onResizeStop,\n          editMode: editMode, children:\n\n          _jsxs(WithPopoverMenu, {\n            isFocused: this.state.isFocused,\n            onChangeFocus: this.handleChangeFocus,\n            disableClick: true,\n            menuItems: [\n            _jsx(BackgroundStyleDropdown, {\n              id: `${columnComponent.id}-background`,\n              value: columnComponent.meta.background,\n              onChange: this.handleChangeBackground }\n            )],\n\n            editMode: editMode, children: [\n\n            editMode &&\n            _jsxs(HoverMenu, { innerRef: dragSourceRef, position: \"top\", children: [\n              _jsx(DragHandle, { position: \"top\" }),\n              _jsx(DeleteComponentButton, {\n                onDelete: this.handleDeleteComponent }\n              ),\n              _jsx(IconButton, {\n                onClick: this.handleChangeFocus,\n                icon: _jsx(Icons.Cog, { iconSize: \"xl\" }) }\n              )] }\n            ),\n\n            _jsxs(ColumnStyles, {\n              className: cx('grid-column', backgroundStyle.className),\n              editMode: editMode, children: [\n\n              editMode &&\n              _jsx(Droppable, {\n                component: columnComponent,\n                parentComponent: columnComponent, ...(\n                columnItems.length === 0 ?\n                {\n                  dropToChild: true\n                } :\n                {\n                  component: columnItems[0]\n                }),\n                depth: depth,\n                index: 0,\n                orientation: \"column\",\n                onDrop: handleComponentDrop,\n                className: cx(\n                  'empty-droptarget',\n                  columnItems.length > 0 && 'droptarget-edge'\n                ),\n                editMode: true, children:\n\n                ({ dropIndicatorProps }) =>\n                dropIndicatorProps && _jsx(\"div\", { ...dropIndicatorProps }) }\n\n              ),\n\n              columnItems.length === 0 ?\n              _jsx(\"div\", { css: emptyColumnContentStyles, children: t('Empty column') }) :\n\n              columnItems.map((componentId, itemIndex) =>\n              _jsxs(Fragment, { children: [\n                _jsx(DashboardComponent, {\n                  id: componentId,\n                  parentId: columnComponent.id,\n                  depth: depth + 1,\n                  index: itemIndex,\n                  availableColumnCount: columnComponent.meta.width,\n                  columnWidth: columnWidth,\n                  onResizeStart: onResizeStart,\n                  onResize: onResize,\n                  onResizeStop: onResizeStop,\n                  isComponentVisible: isComponentVisible,\n                  onChangeTab: onChangeTab }\n                ),\n                editMode &&\n                _jsx(Droppable, {\n                  component: columnItems,\n                  parentComponent: columnComponent,\n                  depth: depth,\n                  index: itemIndex + 1,\n                  orientation: \"column\",\n                  onDrop: handleComponentDrop,\n                  className: cx(\n                    'empty-droptarget',\n                    itemIndex === columnItems.length - 1 &&\n                    'droptarget-edge'\n                  ),\n                  editMode: true, children:\n\n                  ({ dropIndicatorProps }) =>\n                  dropIndicatorProps &&\n                  _jsx(\"div\", { ...dropIndicatorProps }) }\n\n\n                )] }, componentId\n\n              )\n              )] }\n\n            )] }\n          ) }\n        ) }\n\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nColumn.propTypes = propTypes;\nColumn.defaultProps = defaultProps;const _default =\n\nColumn;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(ColumnStyles, \"ColumnStyles\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(emptyColumnContentStyles, \"emptyColumnContentStyles\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(Column, \"Column\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["PureComponent","Fragment","PropTypes","cx","css","styled","t","Icons","DashboardComponent","DeleteComponentButton","Draggable","Droppable","DragHandle","HoverMenu","IconButton","ResizableContainer","BackgroundStyleDropdown","WithPopoverMenu","backgroundStyleOptions","componentShape","BACKGROUND_TRANSPARENT","EMPTY_CONTAINER_Z_INDEX","jsx","_jsx","jsxs","_jsxs","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","editMode","bool","availableColumnCount","columnWidth","minColumnWidth","onResizeStart","func","onResize","onResizeStop","deleteComponent","handleComponentDrop","updateComponents","defaultProps","ColumnStyles","div","theme","gridUnit","colors","grayscale","light2","primary","base","emptyColumnContentStyles","text","label","Column","constructor","props","state","isFocused","handleChangeBackground","handleUpdateMeta","bind","handleChangeFocus","handleDeleteComponent","nextFocus","setState","Boolean","metaKey","nextValue","meta","render","columnComponent","onChangeTab","isComponentVisible","columnItems","children","backgroundStyle","find","opt","value","background","orientation","onDrop","dragSourceRef","adjustableWidth","adjustableHeight","widthStep","widthMultiple","width","minWidthMultiple","maxWidthMultiple","onChangeFocus","disableClick","menuItems","onChange","innerRef","position","onDelete","onClick","icon","Cog","iconSize","className","length","dropToChild","dropIndicatorProps","map","componentId","itemIndex","__reactstandin__regenerateByEval","key","code","eval","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/dashboard/components/gridComponents/Column.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { css, styled, t } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport {\n  Draggable,\n  Droppable,\n} from 'src/dashboard/components/dnd/DragDroppable';\nimport DragHandle from 'src/dashboard/components/dnd/DragHandle';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport ResizableContainer from 'src/dashboard/components/resizable/ResizableContainer';\nimport BackgroundStyleDropdown from 'src/dashboard/components/menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport { BACKGROUND_TRANSPARENT } from 'src/dashboard/util/constants';\nimport { EMPTY_CONTAINER_Z_INDEX } from 'src/dashboard/constants';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {};\n\nconst ColumnStyles = styled.div`\n  ${({ theme, editMode }) => css`\n    &.grid-column {\n      width: 100%;\n      position: relative;\n\n      & > :not(.hover-menu):not(:last-child) {\n        ${!editMode && `margin-bottom: ${theme.gridUnit * 4}px;`}\n      }\n    }\n\n    .dashboard--editing &:after {\n      content: '';\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      top: 0;\n      left: 0;\n      z-index: 1;\n      pointer-events: none;\n      border: 1px dashed ${theme.colors.grayscale.light2};\n    }\n    .dashboard--editing .resizable-container--resizing:hover > &:after,\n    .dashboard--editing .hover-menu:hover + &:after {\n      border: 1px dashed ${theme.colors.primary.base};\n      z-index: 2;\n    }\n\n    & .empty-droptarget {\n      &.droptarget-edge {\n        position: absolute;\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        &:first-child {\n          inset-block-start: 0;\n        }\n      }\n      &:first-child:not(.droptarget-edge) {\n        position: absolute;\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        width: 100%;\n        height: 100%;\n      }\n    }\n  `}\n`;\n\nconst emptyColumnContentStyles = theme => css`\n  min-height: ${theme.gridUnit * 25}px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.text.label};\n`;\n\nclass Column extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false,\n    };\n    this.handleChangeBackground = this.handleUpdateMeta.bind(\n      this,\n      'background',\n    );\n    this.handleChangeFocus = this.handleChangeFocus.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: Boolean(nextFocus) }));\n  }\n\n  handleUpdateMeta(metaKey, nextValue) {\n    const { updateComponents, component } = this.props;\n    if (nextValue && component.meta[metaKey] !== nextValue) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            [metaKey]: nextValue,\n          },\n        },\n      });\n    }\n  }\n\n  render() {\n    const {\n      component: columnComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      minColumnWidth,\n      depth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      onChangeTab,\n      isComponentVisible,\n    } = this.props;\n\n    const columnItems = columnComponent.children || [];\n    const backgroundStyle = backgroundStyleOptions.find(\n      opt =>\n        opt.value ===\n        (columnComponent.meta.background || BACKGROUND_TRANSPARENT),\n    );\n\n    return (\n      <Draggable\n        component={columnComponent}\n        parentComponent={parentComponent}\n        orientation=\"column\"\n        index={index}\n        depth={depth}\n        onDrop={handleComponentDrop}\n        editMode={editMode}\n      >\n        {({ dragSourceRef }) => (\n          <ResizableContainer\n            id={columnComponent.id}\n            adjustableWidth\n            adjustableHeight={false}\n            widthStep={columnWidth}\n            widthMultiple={columnComponent.meta.width}\n            minWidthMultiple={minColumnWidth}\n            maxWidthMultiple={\n              availableColumnCount + (columnComponent.meta.width || 0)\n            }\n            onResizeStart={onResizeStart}\n            onResize={onResize}\n            onResizeStop={onResizeStop}\n            editMode={editMode}\n          >\n            <WithPopoverMenu\n              isFocused={this.state.isFocused}\n              onChangeFocus={this.handleChangeFocus}\n              disableClick\n              menuItems={[\n                <BackgroundStyleDropdown\n                  id={`${columnComponent.id}-background`}\n                  value={columnComponent.meta.background}\n                  onChange={this.handleChangeBackground}\n                />,\n              ]}\n              editMode={editMode}\n            >\n              {editMode && (\n                <HoverMenu innerRef={dragSourceRef} position=\"top\">\n                  <DragHandle position=\"top\" />\n                  <DeleteComponentButton\n                    onDelete={this.handleDeleteComponent}\n                  />\n                  <IconButton\n                    onClick={this.handleChangeFocus}\n                    icon={<Icons.Cog iconSize=\"xl\" />}\n                  />\n                </HoverMenu>\n              )}\n              <ColumnStyles\n                className={cx('grid-column', backgroundStyle.className)}\n                editMode={editMode}\n              >\n                {editMode && (\n                  <Droppable\n                    component={columnComponent}\n                    parentComponent={columnComponent}\n                    {...(columnItems.length === 0\n                      ? {\n                          dropToChild: true,\n                        }\n                      : {\n                          component: columnItems[0],\n                        })}\n                    depth={depth}\n                    index={0}\n                    orientation=\"column\"\n                    onDrop={handleComponentDrop}\n                    className={cx(\n                      'empty-droptarget',\n                      columnItems.length > 0 && 'droptarget-edge',\n                    )}\n                    editMode\n                  >\n                    {({ dropIndicatorProps }) =>\n                      dropIndicatorProps && <div {...dropIndicatorProps} />\n                    }\n                  </Droppable>\n                )}\n                {columnItems.length === 0 ? (\n                  <div css={emptyColumnContentStyles}>{t('Empty column')}</div>\n                ) : (\n                  columnItems.map((componentId, itemIndex) => (\n                    <Fragment key={componentId}>\n                      <DashboardComponent\n                        id={componentId}\n                        parentId={columnComponent.id}\n                        depth={depth + 1}\n                        index={itemIndex}\n                        availableColumnCount={columnComponent.meta.width}\n                        columnWidth={columnWidth}\n                        onResizeStart={onResizeStart}\n                        onResize={onResize}\n                        onResizeStop={onResizeStop}\n                        isComponentVisible={isComponentVisible}\n                        onChangeTab={onChangeTab}\n                      />\n                      {editMode && (\n                        <Droppable\n                          component={columnItems}\n                          parentComponent={columnComponent}\n                          depth={depth}\n                          index={itemIndex + 1}\n                          orientation=\"column\"\n                          onDrop={handleComponentDrop}\n                          className={cx(\n                            'empty-droptarget',\n                            itemIndex === columnItems.length - 1 &&\n                              'droptarget-edge',\n                          )}\n                          editMode\n                        >\n                          {({ dropIndicatorProps }) =>\n                            dropIndicatorProps && (\n                              <div {...dropIndicatorProps} />\n                            )\n                          }\n                        </Droppable>\n                      )}\n                    </Fragment>\n                  ))\n                )}\n              </ColumnStyles>\n            </WithPopoverMenu>\n          </ResizableContainer>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nColumn.propTypes = propTypes;\nColumn.defaultProps = defaultProps;\n\nexport default Column;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}