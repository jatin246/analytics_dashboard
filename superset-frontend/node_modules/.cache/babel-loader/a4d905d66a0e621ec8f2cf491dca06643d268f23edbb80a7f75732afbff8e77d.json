{"ast":null,"code":"import { css as _css } from \"@emotion/react\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useMemo } from 'react';\nimport moment from 'moment-timezone';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan' // timezones are deduped by the first alphabetical value\n};\nconst MIN_SELECT_WIDTH = '400px';\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n  'Mountain Standard Time - Phoenix',\n  'Mountain Standard Time - Phoenix'],\n\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time']\n};\nconst currentDate = moment();\nconst JANUARY = moment([2021, 1]);\nconst JULY = moment([2021, 7]);\nconst getOffsetKey = (name) => JANUARY.tz(name).utcOffset().toString() +\nJULY.tz(name).utcOffset().toString();\nconst getTimezoneName = (name) => {var _offsetsToName$offset, _offsetsToName$offset2;\n  const offsets = getOffsetKey(name);\n  return (currentDate.tz(name).isDST() ? (_offsetsToName$offset =\n  offsetsToName[offsets]) == null ? void 0 : _offsetsToName$offset[1] : (_offsetsToName$offset2 =\n  offsetsToName[offsets]) == null ? void 0 : _offsetsToName$offset2[0]) || name;\n};\nconst ALL_ZONES = moment.tz.\ncountries().\nmap((country) => moment.tz.zonesForCountry(country, true)).\nflat();\nconst TIMEZONES = [];\nALL_ZONES.forEach((zone) => {\n  if (!TIMEZONES.find((option) => getOffsetKey(option.name) === getOffsetKey(zone.name))) {\n    TIMEZONES.push(zone); // dedupe zones by offsets\n  }\n});\nconst TIMEZONE_OPTIONS = TIMEZONES.map((zone) => ({\n  label: `GMT ${moment.\n  tz(currentDate, zone.name).\n  format('Z')} (${getTimezoneName(zone.name)})`,\n  value: zone.name,\n  offsets: getOffsetKey(zone.name),\n  timezoneName: zone.name\n}));\nconst TIMEZONE_OPTIONS_SORT_COMPARATOR = (a, b) => moment.tz(currentDate, a.timezoneName).utcOffset() -\nmoment.tz(currentDate, b.timezoneName).utcOffset();\n// pre-sort timezone options by time offset\nTIMEZONE_OPTIONS.sort(TIMEZONE_OPTIONS_SORT_COMPARATOR);\nconst matchTimezoneToOptions = (timezone) => {var _TIMEZONE_OPTIONS$fin;return ((_TIMEZONE_OPTIONS$fin = TIMEZONE_OPTIONS.find((option) => option.offsets === getOffsetKey(timezone))) == null ? void 0 : _TIMEZONE_OPTIONS$fin.\n  value) || DEFAULT_TIMEZONE.value;};\nexport default function TimezoneSelector({ onTimezoneChange, timezone, minWidth = MIN_SELECT_WIDTH // smallest size for current values\n}) {\n  const validTimezone = useMemo(() => matchTimezoneToOptions(timezone || moment.tz.guess()), [timezone]);\n  // force trigger a timezone update if provided `timezone` is not invalid\n  useEffect(() => {\n    if (timezone !== validTimezone) {\n      onTimezoneChange(validTimezone);\n    }\n  }, [validTimezone, onTimezoneChange, timezone]);\n  return _jsx(Select, { ariaLabel: t('Timezone selector'), css: /*#__PURE__*/_css({ minWidth }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:TimezoneSelector;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvc3VwZXJzZXQtZnJvbnRlbmQvc3JjL2NvbXBvbmVudHMvVGltZXpvbmVTZWxlY3Rvci9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0Z1RCIsImZpbGUiOiIvYXBwL3N1cGVyc2V0LWZyb250ZW5kL3NyYy9jb21wb25lbnRzL1RpbWV6b25lU2VsZWN0b3IvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaWNlbnNlZCB0byB0aGUgQXBhY2hlIFNvZnR3YXJlIEZvdW5kYXRpb24gKEFTRikgdW5kZXIgb25lXG4gKiBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbiAqIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4gKiByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBBU0YgbGljZW5zZXMgdGhpcyBmaWxlXG4gKiB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4gKiBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2VcbiAqIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbiAqIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4gKiBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuICogS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4gKiBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4gKiB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQtdGltZXpvbmUnO1xuaW1wb3J0IHsgdCB9IGZyb20gJ0BzdXBlcnNldC11aS9jb3JlJztcbmltcG9ydCB7IFNlbGVjdCB9IGZyb20gJ3NyYy9jb21wb25lbnRzJztcbmNvbnN0IERFRkFVTFRfVElNRVpPTkUgPSB7XG4gICAgbmFtZTogJ0dNVCBTdGFuZGFyZCBUaW1lJyxcbiAgICB2YWx1ZTogJ0FmcmljYS9BYmlkamFuJywgLy8gdGltZXpvbmVzIGFyZSBkZWR1cGVkIGJ5IHRoZSBmaXJzdCBhbHBoYWJldGljYWwgdmFsdWVcbn07XG5jb25zdCBNSU5fU0VMRUNUX1dJRFRIID0gJzQwMHB4JztcbmNvbnN0IG9mZnNldHNUb05hbWUgPSB7XG4gICAgJy0zMDAtMjQwJzogWydFYXN0ZXJuIFN0YW5kYXJkIFRpbWUnLCAnRWFzdGVybiBEYXlsaWdodCBUaW1lJ10sXG4gICAgJy0zNjAtMzAwJzogWydDZW50cmFsIFN0YW5kYXJkIFRpbWUnLCAnQ2VudHJhbCBEYXlsaWdodCBUaW1lJ10sXG4gICAgJy00MjAtMzYwJzogWydNb3VudGFpbiBTdGFuZGFyZCBUaW1lJywgJ01vdW50YWluIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnLTQyMC00MjAnOiBbXG4gICAgICAgICdNb3VudGFpbiBTdGFuZGFyZCBUaW1lIC0gUGhvZW5peCcsXG4gICAgICAgICdNb3VudGFpbiBTdGFuZGFyZCBUaW1lIC0gUGhvZW5peCcsXG4gICAgXSxcbiAgICAnLTQ4MC00MjAnOiBbJ1BhY2lmaWMgU3RhbmRhcmQgVGltZScsICdQYWNpZmljIERheWxpZ2h0IFRpbWUnXSxcbiAgICAnLTU0MC00ODAnOiBbJ0FsYXNrYSBTdGFuZGFyZCBUaW1lJywgJ0FsYXNrYSBEYXlsaWdodCBUaW1lJ10sXG4gICAgJy02MDAtNjAwJzogWydIYXdhaWkgU3RhbmRhcmQgVGltZScsICdIYXdhaWkgRGF5bGlnaHQgVGltZSddLFxuICAgICc2MDEyMCc6IFsnQ2VudHJhbCBFdXJvcGVhbiBUaW1lJywgJ0NlbnRyYWwgRXVyb3BlYW4gRGF5bGlnaHQgVGltZSddLFxuICAgICcwMCc6IFtERUZBVUxUX1RJTUVaT05FLm5hbWUsIERFRkFVTFRfVElNRVpPTkUubmFtZV0sXG4gICAgJzA2MCc6IFsnR01UIFN0YW5kYXJkIFRpbWUgLSBMb25kb24nLCAnQnJpdGlzaCBTdW1tZXIgVGltZSddLFxufTtcbmNvbnN0IGN1cnJlbnREYXRlID0gbW9tZW50KCk7XG5jb25zdCBKQU5VQVJZID0gbW9tZW50KFsyMDIxLCAxXSk7XG5jb25zdCBKVUxZID0gbW9tZW50KFsyMDIxLCA3XSk7XG5jb25zdCBnZXRPZmZzZXRLZXkgPSAobmFtZSkgPT4gSkFOVUFSWS50eihuYW1lKS51dGNPZmZzZXQoKS50b1N0cmluZygpICtcbiAgICBKVUxZLnR6KG5hbWUpLnV0Y09mZnNldCgpLnRvU3RyaW5nKCk7XG5jb25zdCBnZXRUaW1lem9uZU5hbWUgPSAobmFtZSkgPT4ge1xuICAgIGNvbnN0IG9mZnNldHMgPSBnZXRPZmZzZXRLZXkobmFtZSk7XG4gICAgcmV0dXJuICgoY3VycmVudERhdGUudHoobmFtZSkuaXNEU1QoKVxuICAgICAgICA/IG9mZnNldHNUb05hbWVbb2Zmc2V0c10/LlsxXVxuICAgICAgICA6IG9mZnNldHNUb05hbWVbb2Zmc2V0c10/LlswXSkgfHwgbmFtZSk7XG59O1xuY29uc3QgQUxMX1pPTkVTID0gbW9tZW50LnR6XG4gICAgLmNvdW50cmllcygpXG4gICAgLm1hcChjb3VudHJ5ID0+IG1vbWVudC50ei56b25lc0ZvckNvdW50cnkoY291bnRyeSwgdHJ1ZSkpXG4gICAgLmZsYXQoKTtcbmNvbnN0IFRJTUVaT05FUyA9IFtdO1xuQUxMX1pPTkVTLmZvckVhY2goem9uZSA9PiB7XG4gICAgaWYgKCFUSU1FWk9ORVMuZmluZChvcHRpb24gPT4gZ2V0T2Zmc2V0S2V5KG9wdGlvbi5uYW1lKSA9PT0gZ2V0T2Zmc2V0S2V5KHpvbmUubmFtZSkpKSB7XG4gICAgICAgIFRJTUVaT05FUy5wdXNoKHpvbmUpOyAvLyBkZWR1cGUgem9uZXMgYnkgb2Zmc2V0c1xuICAgIH1cbn0pO1xuY29uc3QgVElNRVpPTkVfT1BUSU9OUyA9IFRJTUVaT05FUy5tYXAoem9uZSA9PiAoe1xuICAgIGxhYmVsOiBgR01UICR7bW9tZW50XG4gICAgICAgIC50eihjdXJyZW50RGF0ZSwgem9uZS5uYW1lKVxuICAgICAgICAuZm9ybWF0KCdaJyl9ICgke2dldFRpbWV6b25lTmFtZSh6b25lLm5hbWUpfSlgLFxuICAgIHZhbHVlOiB6b25lLm5hbWUsXG4gICAgb2Zmc2V0czogZ2V0T2Zmc2V0S2V5KHpvbmUubmFtZSksXG4gICAgdGltZXpvbmVOYW1lOiB6b25lLm5hbWUsXG59KSk7XG5jb25zdCBUSU1FWk9ORV9PUFRJT05TX1NPUlRfQ09NUEFSQVRPUiA9IChhLCBiKSA9PiBtb21lbnQudHooY3VycmVudERhdGUsIGEudGltZXpvbmVOYW1lKS51dGNPZmZzZXQoKSAtXG4gICAgbW9tZW50LnR6KGN1cnJlbnREYXRlLCBiLnRpbWV6b25lTmFtZSkudXRjT2Zmc2V0KCk7XG4vLyBwcmUtc29ydCB0aW1lem9uZSBvcHRpb25zIGJ5IHRpbWUgb2Zmc2V0XG5USU1FWk9ORV9PUFRJT05TLnNvcnQoVElNRVpPTkVfT1BUSU9OU19TT1JUX0NPTVBBUkFUT1IpO1xuY29uc3QgbWF0Y2hUaW1lem9uZVRvT3B0aW9ucyA9ICh0aW1lem9uZSkgPT4gVElNRVpPTkVfT1BUSU9OUy5maW5kKG9wdGlvbiA9PiBvcHRpb24ub2Zmc2V0cyA9PT0gZ2V0T2Zmc2V0S2V5KHRpbWV6b25lKSlcbiAgICA/LnZhbHVlIHx8IERFRkFVTFRfVElNRVpPTkUudmFsdWU7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUaW1lem9uZVNlbGVjdG9yKHsgb25UaW1lem9uZUNoYW5nZSwgdGltZXpvbmUsIG1pbldpZHRoID0gTUlOX1NFTEVDVF9XSURUSCwgLy8gc21hbGxlc3Qgc2l6ZSBmb3IgY3VycmVudCB2YWx1ZXNcbiB9KSB7XG4gICAgY29uc3QgdmFsaWRUaW1lem9uZSA9IHVzZU1lbW8oKCkgPT4gbWF0Y2hUaW1lem9uZVRvT3B0aW9ucyh0aW1lem9uZSB8fCBtb21lbnQudHouZ3Vlc3MoKSksIFt0aW1lem9uZV0pO1xuICAgIC8vIGZvcmNlIHRyaWdnZXIgYSB0aW1lem9uZSB1cGRhdGUgaWYgcHJvdmlkZWQgYHRpbWV6b25lYCBpcyBub3QgaW52YWxpZFxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICh0aW1lem9uZSAhPT0gdmFsaWRUaW1lem9uZSkge1xuICAgICAgICAgICAgb25UaW1lem9uZUNoYW5nZSh2YWxpZFRpbWV6b25lKTtcbiAgICAgICAgfVxuICAgIH0sIFt2YWxpZFRpbWV6b25lLCBvblRpbWV6b25lQ2hhbmdlLCB0aW1lem9uZV0pO1xuICAgIHJldHVybiAoPFNlbGVjdCBhcmlhTGFiZWw9e3QoJ1RpbWV6b25lIHNlbGVjdG9yJyl9IGNzcz17eyBtaW5XaWR0aCB9fSBvbkNoYW5nZT17dHogPT4gb25UaW1lem9uZUNoYW5nZSh0eil9IHZhbHVlPXt2YWxpZFRpbWV6b25lfSBvcHRpb25zPXtUSU1FWk9ORV9PUFRJT05TfSBzb3J0Q29tcGFyYXRvcj17VElNRVpPTkVfT1BUSU9OU19TT1JUX0NPTVBBUkFUT1J9Lz4pO1xufVxuIl19 */\"), onChange: (tz) => onTimezoneChange(tz), value: validTimezone, options: TIMEZONE_OPTIONS, sortComparator: TIMEZONE_OPTIONS_SORT_COMPARATOR });\n}__signature__(TimezoneSelector, \"useMemo{validTimezone}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_TIMEZONE, \"DEFAULT_TIMEZONE\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(MIN_SELECT_WIDTH, \"MIN_SELECT_WIDTH\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(offsetsToName, \"offsetsToName\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(currentDate, \"currentDate\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(JANUARY, \"JANUARY\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(JULY, \"JULY\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(getOffsetKey, \"getOffsetKey\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(getTimezoneName, \"getTimezoneName\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(ALL_ZONES, \"ALL_ZONES\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TIMEZONES, \"TIMEZONES\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TIMEZONE_OPTIONS, \"TIMEZONE_OPTIONS\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TIMEZONE_OPTIONS_SORT_COMPARATOR, \"TIMEZONE_OPTIONS_SORT_COMPARATOR\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(matchTimezoneToOptions, \"matchTimezoneToOptions\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");reactHotLoader.register(TimezoneSelector, \"TimezoneSelector\", \"/app/superset-frontend/src/components/TimezoneSelector/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useMemo","moment","t","Select","jsx","_jsx","DEFAULT_TIMEZONE","name","value","MIN_SELECT_WIDTH","offsetsToName","currentDate","JANUARY","JULY","getOffsetKey","tz","utcOffset","toString","getTimezoneName","_offsetsToName$offset","_offsetsToName$offset2","offsets","isDST","ALL_ZONES","countries","map","country","zonesForCountry","flat","TIMEZONES","forEach","zone","find","option","push","TIMEZONE_OPTIONS","label","format","timezoneName","TIMEZONE_OPTIONS_SORT_COMPARATOR","a","b","sort","matchTimezoneToOptions","timezone","_TIMEZONE_OPTIONS$fin","TimezoneSelector","onTimezoneChange","minWidth","validTimezone","guess","ariaLabel","css","_css","process","env","NODE_ENV","onChange","options","sortComparator","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/components/TimezoneSelector/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useEffect, useMemo } from 'react';\nimport moment from 'moment-timezone';\nimport { t } from '@superset-ui/core';\nimport { Select } from 'src/components';\n\nconst DEFAULT_TIMEZONE = {\n  name: 'GMT Standard Time',\n  value: 'Africa/Abidjan', // timezones are deduped by the first alphabetical value\n};\n\nconst MIN_SELECT_WIDTH = '400px';\n\nconst offsetsToName = {\n  '-300-240': ['Eastern Standard Time', 'Eastern Daylight Time'],\n  '-360-300': ['Central Standard Time', 'Central Daylight Time'],\n  '-420-360': ['Mountain Standard Time', 'Mountain Daylight Time'],\n  '-420-420': [\n    'Mountain Standard Time - Phoenix',\n    'Mountain Standard Time - Phoenix',\n  ],\n  '-480-420': ['Pacific Standard Time', 'Pacific Daylight Time'],\n  '-540-480': ['Alaska Standard Time', 'Alaska Daylight Time'],\n  '-600-600': ['Hawaii Standard Time', 'Hawaii Daylight Time'],\n  '60120': ['Central European Time', 'Central European Daylight Time'],\n  '00': [DEFAULT_TIMEZONE.name, DEFAULT_TIMEZONE.name],\n  '060': ['GMT Standard Time - London', 'British Summer Time'],\n};\n\nconst currentDate = moment();\nconst JANUARY = moment([2021, 1]);\nconst JULY = moment([2021, 7]);\n\nconst getOffsetKey = (name: string) =>\n  JANUARY.tz(name).utcOffset().toString() +\n  JULY.tz(name).utcOffset().toString();\n\nconst getTimezoneName = (name: string) => {\n  const offsets = getOffsetKey(name);\n  return (\n    (currentDate.tz(name).isDST()\n      ? offsetsToName[offsets]?.[1]\n      : offsetsToName[offsets]?.[0]) || name\n  );\n};\n\nconst ALL_ZONES = moment.tz\n  .countries()\n  .map(country => moment.tz.zonesForCountry(country, true))\n  .flat();\n\nconst TIMEZONES: moment.MomentZoneOffset[] = [];\nALL_ZONES.forEach(zone => {\n  if (\n    !TIMEZONES.find(\n      option => getOffsetKey(option.name) === getOffsetKey(zone.name),\n    )\n  ) {\n    TIMEZONES.push(zone); // dedupe zones by offsets\n  }\n});\n\nconst TIMEZONE_OPTIONS = TIMEZONES.map(zone => ({\n  label: `GMT ${moment\n    .tz(currentDate, zone.name)\n    .format('Z')} (${getTimezoneName(zone.name)})`,\n  value: zone.name,\n  offsets: getOffsetKey(zone.name),\n  timezoneName: zone.name,\n}));\n\nconst TIMEZONE_OPTIONS_SORT_COMPARATOR = (\n  a: (typeof TIMEZONE_OPTIONS)[number],\n  b: (typeof TIMEZONE_OPTIONS)[number],\n) =>\n  moment.tz(currentDate, a.timezoneName).utcOffset() -\n  moment.tz(currentDate, b.timezoneName).utcOffset();\n\n// pre-sort timezone options by time offset\nTIMEZONE_OPTIONS.sort(TIMEZONE_OPTIONS_SORT_COMPARATOR);\n\nconst matchTimezoneToOptions = (timezone: string) =>\n  TIMEZONE_OPTIONS.find(option => option.offsets === getOffsetKey(timezone))\n    ?.value || DEFAULT_TIMEZONE.value;\n\nexport type TimezoneSelectorProps = {\n  onTimezoneChange: (value: string) => void;\n  timezone?: string | null;\n  minWidth?: string;\n};\n\nexport default function TimezoneSelector({\n  onTimezoneChange,\n  timezone,\n  minWidth = MIN_SELECT_WIDTH, // smallest size for current values\n}: TimezoneSelectorProps) {\n  const validTimezone = useMemo(\n    () => matchTimezoneToOptions(timezone || moment.tz.guess()),\n    [timezone],\n  );\n\n  // force trigger a timezone update if provided `timezone` is not invalid\n  useEffect(() => {\n    if (timezone !== validTimezone) {\n      onTimezoneChange(validTimezone);\n    }\n  }, [validTimezone, onTimezoneChange, timezone]);\n\n  return (\n    <Select\n      ariaLabel={t('Timezone selector')}\n      css={{ minWidth }}\n      onChange={tz => onTimezoneChange(tz as string)}\n      value={validTimezone}\n      options={TIMEZONE_OPTIONS}\n      sortComparator={TIMEZONE_OPTIONS_SORT_COMPARATOR}\n    />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}