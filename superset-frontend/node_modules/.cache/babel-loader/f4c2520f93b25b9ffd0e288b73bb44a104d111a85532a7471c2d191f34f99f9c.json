{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { forwardRef } from 'react';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst RefreshLabel = ({ onClick, tooltipContent }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const IconWithoutRef = /*#__PURE__*/forwardRef((props, ref) => _jsx(Icons.Refresh, { ...props }));\n  return _jsx(Tooltip, { title: tooltipContent, children:\n    _jsx(IconWithoutRef, { role: \"button\", onClick: onClick, css: (theme) => ({\n        cursor: 'pointer',\n        color: theme.colors.grayscale.base,\n        '&:hover': { color: theme.colors.primary.base }\n      }) }) }\n  );\n};const _default =\nRefreshLabel;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RefreshLabel, \"RefreshLabel\", \"/app/superset-frontend/src/components/RefreshLabel/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/RefreshLabel/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["forwardRef","Tooltip","Icons","jsx","_jsx","RefreshLabel","onClick","tooltipContent","IconWithoutRef","props","ref","Refresh","title","children","role","css","theme","cursor","color","colors","grayscale","base","primary","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/components/RefreshLabel/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { MouseEventHandler, forwardRef } from 'react';\nimport { SupersetTheme } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons, { IconType } from 'src/components/Icons';\n\nexport interface RefreshLabelProps {\n  onClick: MouseEventHandler<HTMLSpanElement>;\n  tooltipContent: string;\n}\n\nconst RefreshLabel = ({ onClick, tooltipContent }: RefreshLabelProps) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const IconWithoutRef = forwardRef((props: IconType, ref: any) => (\n    <Icons.Refresh {...props} />\n  ));\n\n  return (\n    <Tooltip title={tooltipContent}>\n      <IconWithoutRef\n        role=\"button\"\n        onClick={onClick}\n        css={(theme: SupersetTheme) => ({\n          cursor: 'pointer',\n          color: theme.colors.grayscale.base,\n          '&:hover': { color: theme.colors.primary.base },\n        })}\n      />\n    </Tooltip>\n  );\n};\n\nexport default RefreshLabel;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAA4BA,UAAU,QAAQ,OAAO;AAErD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,KAAmB,MAAM,sBAAsB,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAOvD,MAAMC,YAAY,GAAGA,CAAC,EAAEC,OAAO,EAAEC,cAAc,EAAqB,KAAI;EACtE;EACA,MAAMC,cAAc,gBAAGR,UAAU,CAAC,CAACS,KAAe,EAAEC,GAAQ,KAC1DN,IAAA,CAACF,KAAK,CAACS,OAAO,OAAKF,KAAK,EAAC,CAC1B,CAAC;EAEF,OACEL,IAAA,CAACH,OAAO,IAACW,KAAK,EAAEL,cAAe,EAAAM,QAAA;IAC7BT,IAAA,CAACI,cAAc,IACbM,IAAI,EAAC,QAAQ,EACbR,OAAO,EAAEA,OAAQ,EACjBS,GAAG,EAAEA,CAACC,KAAoB,MAAM;QAC9BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAEF,KAAK,CAACG,MAAM,CAACC,SAAS,CAACC,IAAI;QAClC,SAAS,EAAE,EAAEH,KAAK,EAAEF,KAAK,CAACG,MAAM,CAACG,OAAO,CAACD,IAAI;OAC9C,CAAE,GAEP;EAAS,CAAC;AAEd,CAAC,CAAC,MAAAE,QAAA;AAEalB,YAAY,CAA3B,eAAAkB,QAAA,CAA4B,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CArBtBvB,YAAY,kFAAAmB,cAAA,CAAAI,QAAA,CAAAL,QAAA,qGAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}