{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useLayoutEffect } from 'react';\nimport { css, styled } from '@superset-ui/core';\nimport { Tooltip } from './Tooltip';\nimport { ColumnTypeLabel } from './ColumnTypeLabel/ColumnTypeLabel';\nimport CertifiedIconWithTooltip from './CertifiedIconWithTooltip';\nimport { getColumnLabelText, getColumnTooltipNode, getColumnTypeTooltipNode } from './labelUtils';\nimport { SQLPopover } from './SQLPopover';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst StyleOverrides = styled.span`\n  display: flex;\n  align-items: center;\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\nexport function ColumnOption({ column, labelRef, showType = false }) {\n  const { expression, column_name, type_generic } = column;\n  const hasExpression = expression && expression !== column_name;\n  const type = hasExpression ? 'expression' : type_generic;\n  const [tooltipText, setTooltipText] = useState(column.column_name);\n  const [columnTypeTooltipText, setcolumnTypeTooltipText] = useState(column.type);\n  useLayoutEffect(() => {\n    setTooltipText(getColumnTooltipNode(column, labelRef));\n    setcolumnTypeTooltipText(getColumnTypeTooltipNode(column));\n  }, [labelRef, column]);\n  return _jsxs(StyleOverrides, { children: [\n    showType && type !== undefined && _jsx(Tooltip, { id: \"metric-type-tooltip\", title: columnTypeTooltipText, placement: \"bottomRight\", align: { offset: [8, -2] }, children:\n      _jsx(\"span\", { children:\n        _jsx(ColumnTypeLabel, { type: type }) }\n      ) }\n    ),\n    _jsx(Tooltip, { id: \"metric-name-tooltip\", title: tooltipText, children:\n      _jsx(\"span\", { className: \"option-label column-option-label\", css: (theme) => css`\n            margin-right: ${theme.gridUnit}px;\n          `, ref: labelRef, children:\n        getColumnLabelText(column) }\n      ) }\n    ),\n    hasExpression && _jsx(SQLPopover, { sqlExpression: expression }),\n    column.is_certified && _jsx(CertifiedIconWithTooltip, { metricName: column.metric_name, certifiedBy: column.certified_by, details: column.certification_details })] }\n  );\n}__signature__(ColumnOption, \"useState{[tooltipText, setTooltipText](column.column_name)}\\nuseState{[columnTypeTooltipText, setcolumnTypeTooltipText](column.type)}\\nuseLayoutEffect{}\");const _default =\nColumnOption;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyleOverrides, \"StyleOverrides\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/components/ColumnOption.tsx\");reactHotLoader.register(ColumnOption, \"ColumnOption\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/components/ColumnOption.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/components/ColumnOption.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useLayoutEffect","css","styled","Tooltip","ColumnTypeLabel","CertifiedIconWithTooltip","getColumnLabelText","getColumnTooltipNode","getColumnTypeTooltipNode","SQLPopover","jsx","_jsx","jsxs","_jsxs","StyleOverrides","span","theme","gridUnit","ColumnOption","column","labelRef","showType","expression","column_name","type_generic","hasExpression","type","tooltipText","setTooltipText","columnTypeTooltipText","setcolumnTypeTooltipText","children","undefined","id","title","placement","align","offset","className","ref","sqlExpression","is_certified","metricName","metric_name","certifiedBy","certified_by","details","certification_details","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/packages/superset-ui-chart-controls/src/components/ColumnOption.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, ReactNode, useLayoutEffect, RefObject } from 'react';\nimport { css, styled, SupersetTheme } from '@superset-ui/core';\nimport { Tooltip } from './Tooltip';\nimport { ColumnTypeLabel } from './ColumnTypeLabel/ColumnTypeLabel';\nimport CertifiedIconWithTooltip from './CertifiedIconWithTooltip';\nimport { ColumnMeta } from '../types';\nimport {\n  getColumnLabelText,\n  getColumnTooltipNode,\n  getColumnTypeTooltipNode,\n} from './labelUtils';\nimport { SQLPopover } from './SQLPopover';\n\nexport type ColumnOptionProps = {\n  column: ColumnMeta;\n  showType?: boolean;\n  labelRef?: RefObject<any>;\n};\n\nconst StyleOverrides = styled.span`\n  display: flex;\n  align-items: center;\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nexport function ColumnOption({\n  column,\n  labelRef,\n  showType = false,\n}: ColumnOptionProps) {\n  const { expression, column_name, type_generic } = column;\n  const hasExpression = expression && expression !== column_name;\n  const type = hasExpression ? 'expression' : type_generic;\n  const [tooltipText, setTooltipText] = useState<ReactNode>(column.column_name);\n  const [columnTypeTooltipText, setcolumnTypeTooltipText] = useState<ReactNode>(\n    column.type,\n  );\n\n  useLayoutEffect(() => {\n    setTooltipText(getColumnTooltipNode(column, labelRef));\n    setcolumnTypeTooltipText(getColumnTypeTooltipNode(column));\n  }, [labelRef, column]);\n\n  return (\n    <StyleOverrides>\n      {showType && type !== undefined && (\n        <Tooltip\n          id=\"metric-type-tooltip\"\n          title={columnTypeTooltipText}\n          placement=\"bottomRight\"\n          align={{ offset: [8, -2] }}\n        >\n          <span>\n            <ColumnTypeLabel type={type} />\n          </span>\n        </Tooltip>\n      )}\n      <Tooltip id=\"metric-name-tooltip\" title={tooltipText}>\n        <span\n          className=\"option-label column-option-label\"\n          css={(theme: SupersetTheme) => css`\n            margin-right: ${theme.gridUnit}px;\n          `}\n          ref={labelRef}\n        >\n          {getColumnLabelText(column)}\n        </span>\n      </Tooltip>\n      {hasExpression && <SQLPopover sqlExpression={expression} />}\n      {column.is_certified && (\n        <CertifiedIconWithTooltip\n          metricName={column.metric_name}\n          certifiedBy={column.certified_by}\n          details={column.certification_details}\n        />\n      )}\n    </StyleOverrides>\n  );\n}\n\nexport default ColumnOption;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}