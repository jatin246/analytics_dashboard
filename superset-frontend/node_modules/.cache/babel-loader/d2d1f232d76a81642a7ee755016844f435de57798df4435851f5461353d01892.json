{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { makeSingleton } from '../utils';\nexport var LabelsColorMapSource;\n(function (LabelsColorMapSource) {\n  LabelsColorMapSource[LabelsColorMapSource[\"Dashboard\"] = 0] = \"Dashboard\";\n  LabelsColorMapSource[LabelsColorMapSource[\"Explore\"] = 1] = \"Explore\";\n})(LabelsColorMapSource || (LabelsColorMapSource = {}));\nexport class LabelsColorMap {\n\n\n\n  constructor() {this.chartsLabelsMap = void 0;this.colorMap = void 0;this.source = void 0;\n    // holds labels and original color schemes for each chart in context\n    this.chartsLabelsMap = new Map();\n    this.colorMap = new Map();\n    this.source = LabelsColorMapSource.Dashboard;\n  }\n  updateColorMap(categoricalNamespace, colorScheme) {\n    const newColorMap = new Map();\n    this.colorMap.clear();\n    this.chartsLabelsMap.forEach((chartConfig, sliceId) => {\n      const { labels, scheme: originalChartColorScheme } = chartConfig;\n      const currentColorScheme = colorScheme || originalChartColorScheme;\n      const colorScale = categoricalNamespace.getScale(currentColorScheme);\n      labels.forEach((label) => {\n        const newColor = colorScale.getColor(label, sliceId);\n        newColorMap.set(label, newColor);\n      });\n    });\n    this.colorMap = newColorMap;\n  }\n  getColorMap() {\n    return this.colorMap;\n  }\n  addSlice(label, color, sliceId, colorScheme) {\n    if (this.source !== LabelsColorMapSource.Dashboard)\n    return;\n    const chartConfig = this.chartsLabelsMap.get(sliceId) || {\n      labels: [],\n      scheme: ''\n    };\n    const { labels } = chartConfig;\n    if (!labels.includes(label)) {\n      labels.push(label);\n      this.chartsLabelsMap.set(sliceId, {\n        labels,\n        scheme: colorScheme\n      });\n    }\n    this.colorMap.set(label, color);\n  }\n  removeSlice(sliceId) {\n    if (this.source !== LabelsColorMapSource.Dashboard)\n    return;\n    this.chartsLabelsMap.delete(sliceId);\n    const newColorMap = new Map();\n    this.chartsLabelsMap.forEach((chartConfig) => {\n      const { labels } = chartConfig;\n      labels.forEach((label) => {\n        newColorMap.set(label, this.colorMap.get(label));\n      });\n    });\n    this.colorMap = newColorMap;\n  }\n  clear() {\n    this.chartsLabelsMap.clear();\n    this.colorMap.clear();\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const getInstance = makeSingleton(LabelsColorMap);const _default =\ngetInstance;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(LabelsColorMapSource, \"LabelsColorMapSource\", \"/app/superset-frontend/packages/superset-ui-core/src/color/LabelsColorMapSingleton.ts\");reactHotLoader.register(LabelsColorMap, \"LabelsColorMap\", \"/app/superset-frontend/packages/superset-ui-core/src/color/LabelsColorMapSingleton.ts\");reactHotLoader.register(getInstance, \"getInstance\", \"/app/superset-frontend/packages/superset-ui-core/src/color/LabelsColorMapSingleton.ts\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/packages/superset-ui-core/src/color/LabelsColorMapSingleton.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["makeSingleton","LabelsColorMapSource","LabelsColorMap","constructor","chartsLabelsMap","colorMap","source","Map","Dashboard","updateColorMap","categoricalNamespace","colorScheme","newColorMap","clear","forEach","chartConfig","sliceId","labels","scheme","originalChartColorScheme","currentColorScheme","colorScale","getScale","label","newColor","getColor","set","getColorMap","addSlice","color","get","includes","push","removeSlice","delete","__reactstandin__regenerateByEval","key","code","eval","getInstance","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/packages/superset-ui-core/src/color/LabelsColorMapSingleton.ts"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { makeSingleton } from '../utils';\n\nexport enum LabelsColorMapSource {\n  Dashboard,\n  Explore,\n}\n\nexport class LabelsColorMap {\n  chartsLabelsMap: Map<number, { labels: string[]; scheme?: string }>;\n\n  colorMap: Map<string, string>;\n\n  source: LabelsColorMapSource;\n\n  constructor() {\n    // holds labels and original color schemes for each chart in context\n    this.chartsLabelsMap = new Map();\n    this.colorMap = new Map();\n    this.source = LabelsColorMapSource.Dashboard;\n  }\n\n  updateColorMap(categoricalNamespace: any, colorScheme?: string) {\n    const newColorMap = new Map();\n    this.colorMap.clear();\n    this.chartsLabelsMap.forEach((chartConfig, sliceId) => {\n      const { labels, scheme: originalChartColorScheme } = chartConfig;\n      const currentColorScheme = colorScheme || originalChartColorScheme;\n      const colorScale = categoricalNamespace.getScale(currentColorScheme);\n\n      labels.forEach(label => {\n        const newColor = colorScale.getColor(label, sliceId);\n        newColorMap.set(label, newColor);\n      });\n    });\n    this.colorMap = newColorMap;\n  }\n\n  getColorMap() {\n    return this.colorMap;\n  }\n\n  addSlice(\n    label: string,\n    color: string,\n    sliceId: number,\n    colorScheme?: string,\n  ) {\n    if (this.source !== LabelsColorMapSource.Dashboard) return;\n\n    const chartConfig = this.chartsLabelsMap.get(sliceId) || {\n      labels: [],\n      scheme: '',\n    };\n    const { labels } = chartConfig;\n    if (!labels.includes(label)) {\n      labels.push(label);\n      this.chartsLabelsMap.set(sliceId, {\n        labels,\n        scheme: colorScheme,\n      });\n    }\n    this.colorMap.set(label, color);\n  }\n\n  removeSlice(sliceId: number) {\n    if (this.source !== LabelsColorMapSource.Dashboard) return;\n\n    this.chartsLabelsMap.delete(sliceId);\n    const newColorMap = new Map();\n\n    this.chartsLabelsMap.forEach(chartConfig => {\n      const { labels } = chartConfig;\n      labels.forEach(label => {\n        newColorMap.set(label, this.colorMap.get(label));\n      });\n    });\n    this.colorMap = newColorMap;\n  }\n\n  clear() {\n    this.chartsLabelsMap.clear();\n    this.colorMap.clear();\n  }\n}\n\nconst getInstance = makeSingleton(LabelsColorMap);\n\nexport default getInstance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}