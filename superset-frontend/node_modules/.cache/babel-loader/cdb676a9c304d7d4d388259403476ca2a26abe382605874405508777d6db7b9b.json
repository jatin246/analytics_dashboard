{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { nanoid } from 'nanoid';\nimport { ToastType } from './types';\nexport function getToastUuid(type) {\n  return `${type}-${nanoid()}`;\n}\nexport const ADD_TOAST = 'ADD_TOAST';\nexport function addToast({ toastType, text, duration = 8000, noDuplicate = false }) {\n  return {\n    type: ADD_TOAST,\n    payload: {\n      id: getToastUuid(toastType),\n      toastType,\n      text,\n      duration,\n      noDuplicate\n    }\n  };\n}\nexport const REMOVE_TOAST = 'REMOVE_TOAST';\nexport function removeToast(id) {\n  return {\n    type: REMOVE_TOAST,\n    payload: {\n      id\n    }\n  };\n}\n// Different types of toasts\nexport const ADD_INFO_TOAST = 'ADD_INFO_TOAST';\nexport function addInfoToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.Info,\n    duration: 4000,\n    ...options\n  });\n}\nexport const ADD_SUCCESS_TOAST = 'ADD_SUCCESS_TOAST';\nexport function addSuccessToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.Success,\n    duration: 4000,\n    ...options\n  });\n}\nexport const ADD_WARNING_TOAST = 'ADD_WARNING_TOAST';\nexport function addWarningToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.Warning,\n    duration: 6000,\n    ...options\n  });\n}\nexport const ADD_DANGER_TOAST = 'ADD_DANGER_TOAST';\nexport function addDangerToast(text, options) {\n  return addToast({\n    text,\n    toastType: ToastType.Danger,\n    duration: 8000,\n    ...options\n  });\n}\nexport const toastActions = {\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getToastUuid, \"getToastUuid\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(ADD_TOAST, \"ADD_TOAST\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(addToast, \"addToast\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(REMOVE_TOAST, \"REMOVE_TOAST\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(removeToast, \"removeToast\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(ADD_INFO_TOAST, \"ADD_INFO_TOAST\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(addInfoToast, \"addInfoToast\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(ADD_SUCCESS_TOAST, \"ADD_SUCCESS_TOAST\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(addSuccessToast, \"addSuccessToast\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(ADD_WARNING_TOAST, \"ADD_WARNING_TOAST\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(addWarningToast, \"addWarningToast\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(ADD_DANGER_TOAST, \"ADD_DANGER_TOAST\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(addDangerToast, \"addDangerToast\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");reactHotLoader.register(toastActions, \"toastActions\", \"/app/superset-frontend/src/components/MessageToasts/actions.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["nanoid","ToastType","getToastUuid","type","ADD_TOAST","addToast","toastType","text","duration","noDuplicate","payload","id","REMOVE_TOAST","removeToast","ADD_INFO_TOAST","addInfoToast","options","Info","ADD_SUCCESS_TOAST","addSuccessToast","Success","ADD_WARNING_TOAST","addWarningToast","Warning","ADD_DANGER_TOAST","addDangerToast","Danger","toastActions","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/components/MessageToasts/actions.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { nanoid } from 'nanoid';\nimport { ToastType, ToastMeta } from './types';\n\ntype ToastOptions = Partial<Omit<ToastMeta, 'id' | 'toastType' | 'text'>>;\n\nexport function getToastUuid(type: ToastType) {\n  return `${type}-${nanoid()}`;\n}\n\nexport const ADD_TOAST = 'ADD_TOAST';\nexport function addToast({\n  toastType,\n  text,\n  duration = 8000,\n  noDuplicate = false,\n}: Omit<ToastMeta, 'id'>) {\n  return {\n    type: ADD_TOAST,\n    payload: {\n      id: getToastUuid(toastType),\n      toastType,\n      text,\n      duration,\n      noDuplicate,\n    },\n  };\n}\n\nexport const REMOVE_TOAST = 'REMOVE_TOAST';\nexport function removeToast(id: string) {\n  return {\n    type: REMOVE_TOAST,\n    payload: {\n      id,\n    },\n  };\n}\n\n// Different types of toasts\nexport const ADD_INFO_TOAST = 'ADD_INFO_TOAST';\nexport function addInfoToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.Info,\n    duration: 4000,\n    ...options,\n  });\n}\n\nexport const ADD_SUCCESS_TOAST = 'ADD_SUCCESS_TOAST';\nexport function addSuccessToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.Success,\n    duration: 4000,\n    ...options,\n  });\n}\n\nexport const ADD_WARNING_TOAST = 'ADD_WARNING_TOAST';\nexport function addWarningToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.Warning,\n    duration: 6000,\n    ...options,\n  });\n}\n\nexport const ADD_DANGER_TOAST = 'ADD_DANGER_TOAST';\nexport function addDangerToast(text: string, options?: ToastOptions) {\n  return addToast({\n    text,\n    toastType: ToastType.Danger,\n    duration: 8000,\n    ...options,\n  });\n}\n\nexport const toastActions = {\n  addInfoToast,\n  addSuccessToast,\n  addWarningToast,\n  addDangerToast,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}