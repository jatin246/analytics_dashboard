{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, RollingType, ComparisonType } from '@superset-ui/core';\nimport { ControlSubSectionHeader } from '../components/ControlSubSectionHeader';\nimport { formatSelectOptions, displayTimeRelatedControls } from '../utils';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport const advancedAnalyticsControls = {\n  label: t('Advanced analytics'),\n  tabOverride: 'data',\n  description: t('This section contains options ' +\n  'that allow for advanced analytical post processing ' +\n  'of query results'),\n  visibility: displayTimeRelatedControls,\n  controlSetRows: [\n  [_jsx(ControlSubSectionHeader, { children: t('Rolling window') })],\n  [\n  {\n    name: 'rolling_type',\n    config: {\n      type: 'SelectControl',\n      label: t('Rolling function'),\n      default: null,\n      choices: [[null, t('None')]].concat(formatSelectOptions(Object.values(RollingType))),\n      description: t('Defines a rolling window function to apply, works along ' +\n      'with the [Periods] text box')\n    }\n  }],\n\n  [\n  {\n    name: 'rolling_periods',\n    config: {\n      type: 'TextControl',\n      label: t('Periods'),\n      isInt: true,\n      description: t('Defines the size of the rolling window function, ' +\n      'relative to the time granularity selected'),\n      visibility: ({ controls }, { name }) => {var _controls$rollingType, _controls$rollingType2;\n        // `rolling_type_b` refer to rolling_type in mixed timeseries Query B\n        const rollingTypeControlName = name.endsWith('_b') ?\n        'rolling_type_b' :\n        'rolling_type';\n        return Boolean((_controls$rollingType = controls[rollingTypeControlName]) == null ? void 0 : _controls$rollingType.value) &&\n        ((_controls$rollingType2 = controls[rollingTypeControlName]) == null ? void 0 : _controls$rollingType2.value) !== RollingType.Cumsum;\n      }\n    }\n  }],\n\n  [\n  {\n    name: 'min_periods',\n    config: {\n      type: 'TextControl',\n      label: t('Min periods'),\n      isInt: true,\n      description: t('The minimum number of rolling periods required to show ' +\n      'a value. For instance if you do a cumulative sum on 7 days ' +\n      'you may want your \"Min Period\" to be 7, so that all data points ' +\n      'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n      'taking place over the first 7 periods'),\n      visibility: ({ controls }, { name }) => {var _controls$rollingType3, _controls$rollingType4;\n        // `rolling_type_b` refer to rolling_type in mixed timeseries Query B\n        const rollingTypeControlName = name.endsWith('_b') ?\n        'rolling_type_b' :\n        'rolling_type';\n        return Boolean((_controls$rollingType3 = controls[rollingTypeControlName]) == null ? void 0 : _controls$rollingType3.value) &&\n        ((_controls$rollingType4 = controls[rollingTypeControlName]) == null ? void 0 : _controls$rollingType4.value) !== RollingType.Cumsum;\n      }\n    }\n  }],\n\n  [_jsx(ControlSubSectionHeader, { children: t('Time comparison') })],\n  [\n  {\n    name: 'time_compare',\n    config: {\n      type: 'SelectControl',\n      multi: true,\n      freeForm: true,\n      label: t('Time shift'),\n      choices: [\n      ['1 day ago', t('1 day ago')],\n      ['1 week ago', t('1 week ago')],\n      ['28 days ago', t('28 days ago')],\n      ['30 days ago', t('30 days ago')],\n      ['52 weeks ago', t('52 weeks ago')],\n      ['1 year ago', t('1 year ago')],\n      ['104 weeks ago', t('104 weeks ago')],\n      ['2 years ago', t('2 years ago')],\n      ['156 weeks ago', t('156 weeks ago')],\n      ['3 years ago', t('3 years ago')]],\n\n      description: t('Overlay one or more timeseries from a ' +\n      'relative time period. Expects relative time deltas ' +\n      'in natural language (example:  24 hours, 7 days, ' +\n      '52 weeks, 365 days). Free text is supported.')\n    }\n  }],\n\n  [\n  {\n    name: 'comparison_type',\n    config: {\n      type: 'SelectControl',\n      label: t('Calculation type'),\n      default: 'values',\n      choices: [\n      [ComparisonType.Values, t('Actual values')],\n      [ComparisonType.Difference, t('Difference')],\n      [ComparisonType.Percentage, t('Percentage change')],\n      [ComparisonType.Ratio, t('Ratio')]],\n\n      description: t('How to display time shifts: as individual lines; as the ' +\n      'difference between the main time series and each time shift; ' +\n      'as the percentage change; or as the ratio between series and time shifts.')\n    }\n  }],\n\n  [_jsx(ControlSubSectionHeader, { children: t('Resample') })],\n  [\n  {\n    name: 'resample_rule',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Rule'),\n      default: null,\n      choices: [\n      ['1T', t('1 minutely frequency')],\n      ['1H', t('1 hourly frequency')],\n      ['1D', t('1 calendar day frequency')],\n      ['7D', t('7 calendar day frequency')],\n      ['1MS', t('1 month start frequency')],\n      ['1M', t('1 month end frequency')],\n      ['1AS', t('1 year start frequency')],\n      ['1A', t('1 year end frequency')]],\n\n      description: t('Pandas resample rule')\n    }\n  }],\n\n  [\n  {\n    name: 'resample_method',\n    config: {\n      type: 'SelectControl',\n      label: t('Fill method'),\n      default: null,\n      choices: [\n      ['asfreq', t('Null imputation')],\n      ['zerofill', t('Zero imputation')],\n      ['linear', t('Linear interpolation')],\n      ['ffill', t('Forward values')],\n      ['bfill', t('Backward values')],\n      ['median', t('Median values')],\n      ['mean', t('Mean values')],\n      ['sum', t('Sum values')]],\n\n      description: t('Pandas resample method')\n    }\n  }]]\n\n\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(advancedAnalyticsControls, \"advancedAnalyticsControls\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/sections/advancedAnalytics.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","RollingType","ComparisonType","ControlSubSectionHeader","formatSelectOptions","displayTimeRelatedControls","jsx","_jsx","advancedAnalyticsControls","label","tabOverride","description","visibility","controlSetRows","children","name","config","type","default","choices","concat","Object","values","isInt","controls","_controls$rollingType","_controls$rollingType2","rollingTypeControlName","endsWith","Boolean","value","Cumsum","_controls$rollingType3","_controls$rollingType4","multi","freeForm","Values","Difference","Percentage","Ratio","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/packages/superset-ui-chart-controls/src/sections/advancedAnalytics.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, RollingType, ComparisonType } from '@superset-ui/core';\n\nimport { ControlSubSectionHeader } from '../components/ControlSubSectionHeader';\nimport { ControlPanelSectionConfig } from '../types';\nimport { formatSelectOptions, displayTimeRelatedControls } from '../utils';\n\nexport const advancedAnalyticsControls: ControlPanelSectionConfig = {\n  label: t('Advanced analytics'),\n  tabOverride: 'data',\n  description: t(\n    'This section contains options ' +\n      'that allow for advanced analytical post processing ' +\n      'of query results',\n  ),\n  visibility: displayTimeRelatedControls,\n  controlSetRows: [\n    [<ControlSubSectionHeader>{t('Rolling window')}</ControlSubSectionHeader>],\n    [\n      {\n        name: 'rolling_type',\n        config: {\n          type: 'SelectControl',\n          label: t('Rolling function'),\n          default: null,\n          choices: [[null, t('None')]].concat(\n            formatSelectOptions(Object.values(RollingType)),\n          ),\n          description: t(\n            'Defines a rolling window function to apply, works along ' +\n              'with the [Periods] text box',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'rolling_periods',\n        config: {\n          type: 'TextControl',\n          label: t('Periods'),\n          isInt: true,\n          description: t(\n            'Defines the size of the rolling window function, ' +\n              'relative to the time granularity selected',\n          ),\n          visibility: ({ controls }, { name }) => {\n            // `rolling_type_b` refer to rolling_type in mixed timeseries Query B\n            const rollingTypeControlName = name.endsWith('_b')\n              ? 'rolling_type_b'\n              : 'rolling_type';\n            return (\n              Boolean(controls[rollingTypeControlName]?.value) &&\n              controls[rollingTypeControlName]?.value !== RollingType.Cumsum\n            );\n          },\n        },\n      },\n    ],\n    [\n      {\n        name: 'min_periods',\n        config: {\n          type: 'TextControl',\n          label: t('Min periods'),\n          isInt: true,\n          description: t(\n            'The minimum number of rolling periods required to show ' +\n              'a value. For instance if you do a cumulative sum on 7 days ' +\n              'you may want your \"Min Period\" to be 7, so that all data points ' +\n              'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n              'taking place over the first 7 periods',\n          ),\n          visibility: ({ controls }, { name }) => {\n            // `rolling_type_b` refer to rolling_type in mixed timeseries Query B\n            const rollingTypeControlName = name.endsWith('_b')\n              ? 'rolling_type_b'\n              : 'rolling_type';\n            return (\n              Boolean(controls[rollingTypeControlName]?.value) &&\n              controls[rollingTypeControlName]?.value !== RollingType.Cumsum\n            );\n          },\n        },\n      },\n    ],\n    [<ControlSubSectionHeader>{t('Time comparison')}</ControlSubSectionHeader>],\n    [\n      {\n        name: 'time_compare',\n        config: {\n          type: 'SelectControl',\n          multi: true,\n          freeForm: true,\n          label: t('Time shift'),\n          choices: [\n            ['1 day ago', t('1 day ago')],\n            ['1 week ago', t('1 week ago')],\n            ['28 days ago', t('28 days ago')],\n            ['30 days ago', t('30 days ago')],\n            ['52 weeks ago', t('52 weeks ago')],\n            ['1 year ago', t('1 year ago')],\n            ['104 weeks ago', t('104 weeks ago')],\n            ['2 years ago', t('2 years ago')],\n            ['156 weeks ago', t('156 weeks ago')],\n            ['3 years ago', t('3 years ago')],\n          ],\n          description: t(\n            'Overlay one or more timeseries from a ' +\n              'relative time period. Expects relative time deltas ' +\n              'in natural language (example:  24 hours, 7 days, ' +\n              '52 weeks, 365 days). Free text is supported.',\n          ),\n        },\n      },\n    ],\n    [\n      {\n        name: 'comparison_type',\n        config: {\n          type: 'SelectControl',\n          label: t('Calculation type'),\n          default: 'values',\n          choices: [\n            [ComparisonType.Values, t('Actual values')],\n            [ComparisonType.Difference, t('Difference')],\n            [ComparisonType.Percentage, t('Percentage change')],\n            [ComparisonType.Ratio, t('Ratio')],\n          ],\n          description: t(\n            'How to display time shifts: as individual lines; as the ' +\n              'difference between the main time series and each time shift; ' +\n              'as the percentage change; or as the ratio between series and time shifts.',\n          ),\n        },\n      },\n    ],\n    [<ControlSubSectionHeader>{t('Resample')}</ControlSubSectionHeader>],\n    [\n      {\n        name: 'resample_rule',\n        config: {\n          type: 'SelectControl',\n          freeForm: true,\n          label: t('Rule'),\n          default: null,\n          choices: [\n            ['1T', t('1 minutely frequency')],\n            ['1H', t('1 hourly frequency')],\n            ['1D', t('1 calendar day frequency')],\n            ['7D', t('7 calendar day frequency')],\n            ['1MS', t('1 month start frequency')],\n            ['1M', t('1 month end frequency')],\n            ['1AS', t('1 year start frequency')],\n            ['1A', t('1 year end frequency')],\n          ],\n          description: t('Pandas resample rule'),\n        },\n      },\n    ],\n    [\n      {\n        name: 'resample_method',\n        config: {\n          type: 'SelectControl',\n          label: t('Fill method'),\n          default: null,\n          choices: [\n            ['asfreq', t('Null imputation')],\n            ['zerofill', t('Zero imputation')],\n            ['linear', t('Linear interpolation')],\n            ['ffill', t('Forward values')],\n            ['bfill', t('Backward values')],\n            ['median', t('Median values')],\n            ['mean', t('Mean values')],\n            ['sum', t('Sum values')],\n          ],\n          description: t('Pandas resample method'),\n        },\n      },\n    ],\n  ],\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}