{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/forbid-prop-types */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { forwardRef, memo, useCallback, useEffect, useImperativeHandle, useState } from 'react';\n\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL from 'deck.gl/typed';\nimport { styled, usePrevious } from '@superset-ui/core';\nimport Tooltip from './components/Tooltip';\nimport 'mapbox-gl/dist/mapbox-gl.css';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst TICK = 250; // milliseconds\nexport const DeckGLContainer = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(__signature__((props, ref) => {\n  const [tooltip, setTooltip] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [viewState, setViewState] = useState(props.viewport);\n  const prevViewport = usePrevious(props.viewport);\n  useImperativeHandle(ref, () => ({ setTooltip }), []);\n  const tick = useCallback(() => {\n    // Rate limiting updating viewport controls as it triggers lots of renders\n    if (lastUpdate && Date.now() - lastUpdate > TICK) {\n      const setCV = props.setControlValue;\n      if (setCV) {\n        setCV('viewport', viewState);\n      }\n      setLastUpdate(null);\n    }\n  }, [lastUpdate, props.setControlValue, viewState]);\n  useEffect(() => {\n    const timer = setInterval(tick, TICK);\n    return clearInterval(timer);\n  }, [tick]);\n  useEffect(() => {\n    if (!_isEqual(props.viewport, prevViewport)) {\n      setViewState(props.viewport);\n    }\n  }, [prevViewport, props.viewport]);\n  const onViewStateChange = useCallback(({ viewState }) => {\n    setViewState(viewState);\n    setLastUpdate(Date.now());\n  }, []);\n  const layers = useCallback(() => {\n    // Support for layer factory\n    if (props.layers.some((l) => typeof l === 'function')) {\n      return props.layers.map((l) => typeof l === 'function' ? l() : l);\n    }\n    return props.layers;\n  }, [props.layers]);\n  const { children = null, height, width } = props;\n  return _jsxs(_Fragment, { children: [\n    _jsxs(\"div\", { style: { position: 'relative', width, height }, children: [\n      _jsx(DeckGL, { controller: true, width: width, height: height, layers: layers(), viewState: viewState, glOptions: { preserveDrawingBuffer: true }, onViewStateChange: onViewStateChange, children:\n        _jsx(StaticMap, { preserveDrawingBuffer: true, mapStyle: props.mapStyle || 'light', mapboxApiAccessToken: props.mapboxApiAccessToken }) }\n      ),\n      children] }\n    ),\n    _jsx(Tooltip, { tooltip: tooltip })] }\n  );\n}, \"useState{[tooltip, setTooltip](null)}\\nuseState{[lastUpdate, setLastUpdate](null)}\\nuseState{[viewState, setViewState](props.viewport)}\\nusePrevious{prevViewport}\\nuseImperativeHandle{}\\nuseCallback{tick}\\nuseEffect{}\\nuseEffect{}\\nuseCallback{onViewStateChange}\\nuseCallback{layers}\", () => [usePrevious, useImperativeHandle])));\nexport const DeckGLContainerStyledWrapper = styled(DeckGLContainer)`\n  .deckgl-tooltip > div {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TICK, \"TICK\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx\");reactHotLoader.register(DeckGLContainer, \"DeckGLContainer\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx\");reactHotLoader.register(DeckGLContainerStyledWrapper, \"DeckGLContainerStyledWrapper\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["forwardRef","memo","useCallback","useEffect","useImperativeHandle","useState","StaticMap","DeckGL","styled","usePrevious","Tooltip","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TICK","DeckGLContainer","__signature__","props","ref","tooltip","setTooltip","lastUpdate","setLastUpdate","viewState","setViewState","viewport","prevViewport","tick","Date","now","setCV","setControlValue","timer","setInterval","clearInterval","_isEqual","onViewStateChange","layers","some","l","map","children","height","width","style","position","controller","glOptions","preserveDrawingBuffer","mapStyle","mapboxApiAccessToken","DeckGLContainerStyledWrapper","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/DeckGLContainer.tsx"],"sourcesContent":["/* eslint-disable react/jsx-sort-default-props */\n/* eslint-disable react/sort-prop-types */\n/* eslint-disable react/jsx-handler-names */\n/* eslint-disable react/forbid-prop-types */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  forwardRef,\n  memo,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport { isEqual } from 'lodash';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL, { Layer } from 'deck.gl/typed';\nimport { JsonObject, JsonValue, styled, usePrevious } from '@superset-ui/core';\nimport Tooltip, { TooltipProps } from './components/Tooltip';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Viewport } from './utils/fitViewport';\n\nconst TICK = 250; // milliseconds\n\nexport type DeckGLContainerProps = {\n  viewport: Viewport;\n  setControlValue?: (control: string, value: JsonValue) => void;\n  mapStyle?: string;\n  mapboxApiAccessToken: string;\n  children?: ReactNode;\n  width: number;\n  height: number;\n  layers: (Layer | (() => Layer))[];\n  onViewportChange?: (viewport: Viewport) => void;\n};\n\nexport const DeckGLContainer = memo(\n  forwardRef((props: DeckGLContainerProps, ref) => {\n    const [tooltip, setTooltip] = useState<TooltipProps['tooltip']>(null);\n    const [lastUpdate, setLastUpdate] = useState<number | null>(null);\n    const [viewState, setViewState] = useState(props.viewport);\n    const prevViewport = usePrevious(props.viewport);\n\n    useImperativeHandle(ref, () => ({ setTooltip }), []);\n\n    const tick = useCallback(() => {\n      // Rate limiting updating viewport controls as it triggers lots of renders\n      if (lastUpdate && Date.now() - lastUpdate > TICK) {\n        const setCV = props.setControlValue;\n        if (setCV) {\n          setCV('viewport', viewState);\n        }\n        setLastUpdate(null);\n      }\n    }, [lastUpdate, props.setControlValue, viewState]);\n\n    useEffect(() => {\n      const timer = setInterval(tick, TICK);\n      return clearInterval(timer);\n    }, [tick]);\n\n    useEffect(() => {\n      if (!isEqual(props.viewport, prevViewport)) {\n        setViewState(props.viewport);\n      }\n    }, [prevViewport, props.viewport]);\n\n    const onViewStateChange = useCallback(\n      ({ viewState }: { viewState: JsonObject }) => {\n        setViewState(viewState as Viewport);\n        setLastUpdate(Date.now());\n      },\n      [],\n    );\n\n    const layers = useCallback(() => {\n      // Support for layer factory\n      if (props.layers.some(l => typeof l === 'function')) {\n        return props.layers.map(l =>\n          typeof l === 'function' ? l() : l,\n        ) as Layer[];\n      }\n\n      return props.layers as Layer[];\n    }, [props.layers]);\n\n    const { children = null, height, width } = props;\n\n    return (\n      <>\n        <div style={{ position: 'relative', width, height }}>\n          <DeckGL\n            controller\n            width={width}\n            height={height}\n            layers={layers()}\n            viewState={viewState}\n            glOptions={{ preserveDrawingBuffer: true }}\n            onViewStateChange={onViewStateChange}\n          >\n            <StaticMap\n              preserveDrawingBuffer\n              mapStyle={props.mapStyle || 'light'}\n              mapboxApiAccessToken={props.mapboxApiAccessToken}\n            />\n          </DeckGL>\n          {children}\n        </div>\n        <Tooltip tooltip={tooltip} />\n      </>\n    );\n  }),\n);\n\nexport const DeckGLContainerStyledWrapper = styled(DeckGLContainer)`\n  .deckgl-tooltip > div {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport type DeckGLContainerHandle = typeof DeckGLContainer & {\n  setTooltip: (tooltip: ReactNode) => void;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}