{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\nimport { ensureIsArray, styled, t, getChartMetadataRegistry, getClientErrorObject } from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport { SingleQueryResultPane } from './SingleQueryResultPane';\nimport { TableControls } from './DataTableControls';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst Error = styled.pre`\n  margin-top: ${({ theme }) => `${theme.gridUnit * 4}px`};\n`;\nconst cache = new WeakMap();\nexport const useResultsPane = ({ isRequest, queryFormData, queryForce, ownState, errorMessage, actions, isVisible, dataSize = 50, canDownload }) => {var _metadata$queryObject;\n  const metadata = getChartMetadataRegistry().get((queryFormData == null ? void 0 : queryFormData.viz_type) || (queryFormData == null ? void 0 : queryFormData.vizType));\n  const [resultResp, setResultResp] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [responseError, setResponseError] = useState('');\n  const queryCount = (_metadata$queryObject = metadata == null ? void 0 : metadata.queryObjectCount) != null ? _metadata$queryObject : 1;\n  useEffect(() => {\n    // it's an invalid formData when gets a errorMessage\n    if (errorMessage)\n    return;\n    if (isRequest && cache.has(queryFormData)) {\n      setResultResp(ensureIsArray(cache.get(queryFormData)));\n      setResponseError('');\n      if (queryForce && actions) {\n        actions.setForceQuery(false);\n      }\n      setIsLoading(false);\n    }\n    if (isRequest && !cache.has(queryFormData)) {\n      setIsLoading(true);\n      getChartDataRequest({\n        formData: queryFormData,\n        force: queryForce,\n        resultFormat: 'json',\n        resultType: 'results',\n        ownState\n      }).\n      then(({ json }) => {\n        setResultResp(ensureIsArray(json.result));\n        setResponseError('');\n        cache.set(queryFormData, json.result);\n        if (queryForce && actions) {\n          actions.setForceQuery(false);\n        }\n      }).\n      catch((response) => {\n        getClientErrorObject(response).then(({ error, message }) => {\n          setResponseError(error || message || t('Sorry, an error occurred'));\n        });\n      }).\n      finally(() => {\n        setIsLoading(false);\n      });\n    }\n  }, [queryFormData, isRequest]);\n  useEffect(() => {\n    if (errorMessage) {\n      setIsLoading(false);\n    }\n  }, [errorMessage]);\n  if (isLoading) {\n    return Array(queryCount).fill(_jsx(Loading, {}));\n  }\n  if (errorMessage) {\n    const title = t('Run a query to display results');\n    return Array(queryCount).fill(_jsx(EmptyStateMedium, { image: \"document.svg\", title: title }));\n  }\n  if (responseError) {\n    const err = _jsxs(_Fragment, { children: [\n      _jsx(TableControls, { data: [], columnNames: [], columnTypes: [], rowcount: 0, datasourceId: queryFormData.datasource, onInputChange: () => {}, isLoading: false, canDownload: canDownload }),\n      _jsx(Error, { children: responseError })] }\n    );\n    return Array(queryCount).fill(err);\n  }\n  if (resultResp.length === 0) {\n    const title = t('No results were returned for this query');\n    return Array(queryCount).fill(_jsx(EmptyStateMedium, { image: \"document.svg\", title: title }));\n  }\n  return resultResp.\n  slice(0, queryCount).\n  map((result, idx) => _jsx(SingleQueryResultPane, { data: result.data, colnames: result.colnames, coltypes: result.coltypes, rowcount: result.rowcount, dataSize: dataSize, datasourceId: queryFormData.datasource, isVisible: isVisible, canDownload: canDownload }, idx));\n};__signature__(useResultsPane, \"useState{[resultResp, setResultResp]([])}\\nuseState{[isLoading, setIsLoading](true)}\\nuseState{[responseError, setResponseError]('')}\\nuseEffect{}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Error, \"Error\", \"/app/superset-frontend/src/explore/components/DataTablesPane/components/useResultsPane.tsx\");reactHotLoader.register(cache, \"cache\", \"/app/superset-frontend/src/explore/components/DataTablesPane/components/useResultsPane.tsx\");reactHotLoader.register(useResultsPane, \"useResultsPane\", \"/app/superset-frontend/src/explore/components/DataTablesPane/components/useResultsPane.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useEffect","ensureIsArray","styled","t","getChartMetadataRegistry","getClientErrorObject","Loading","EmptyStateMedium","getChartDataRequest","SingleQueryResultPane","TableControls","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Error","pre","theme","gridUnit","cache","WeakMap","useResultsPane","isRequest","queryFormData","queryForce","ownState","errorMessage","actions","isVisible","dataSize","canDownload","_metadata$queryObject","metadata","get","viz_type","vizType","resultResp","setResultResp","isLoading","setIsLoading","responseError","setResponseError","queryCount","queryObjectCount","has","setForceQuery","formData","force","resultFormat","resultType","then","json","result","set","catch","response","error","message","finally","Array","fill","title","image","err","children","data","columnNames","columnTypes","rowcount","datasourceId","datasource","onInputChange","length","slice","map","idx","colnames","coltypes","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/DataTablesPane/components/useResultsPane.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect, ReactElement } from 'react';\n\nimport {\n  ensureIsArray,\n  styled,\n  t,\n  getChartMetadataRegistry,\n  getClientErrorObject,\n} from '@superset-ui/core';\nimport Loading from 'src/components/Loading';\nimport { EmptyStateMedium } from 'src/components/EmptyState';\nimport { getChartDataRequest } from 'src/components/Chart/chartAction';\nimport { ResultsPaneProps, QueryResultInterface } from '../types';\nimport { SingleQueryResultPane } from './SingleQueryResultPane';\nimport { TableControls } from './DataTableControls';\n\nconst Error = styled.pre`\n  margin-top: ${({ theme }) => `${theme.gridUnit * 4}px`};\n`;\n\nconst cache = new WeakMap();\n\nexport const useResultsPane = ({\n  isRequest,\n  queryFormData,\n  queryForce,\n  ownState,\n  errorMessage,\n  actions,\n  isVisible,\n  dataSize = 50,\n  canDownload,\n}: ResultsPaneProps): ReactElement[] => {\n  const metadata = getChartMetadataRegistry().get(\n    queryFormData?.viz_type || queryFormData?.vizType,\n  );\n\n  const [resultResp, setResultResp] = useState<QueryResultInterface[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [responseError, setResponseError] = useState<string>('');\n  const queryCount = metadata?.queryObjectCount ?? 1;\n\n  useEffect(() => {\n    // it's an invalid formData when gets a errorMessage\n    if (errorMessage) return;\n    if (isRequest && cache.has(queryFormData)) {\n      setResultResp(ensureIsArray(cache.get(queryFormData)));\n      setResponseError('');\n      if (queryForce && actions) {\n        actions.setForceQuery(false);\n      }\n      setIsLoading(false);\n    }\n    if (isRequest && !cache.has(queryFormData)) {\n      setIsLoading(true);\n      getChartDataRequest({\n        formData: queryFormData,\n        force: queryForce,\n        resultFormat: 'json',\n        resultType: 'results',\n        ownState,\n      })\n        .then(({ json }) => {\n          setResultResp(ensureIsArray(json.result));\n          setResponseError('');\n          cache.set(queryFormData, json.result);\n          if (queryForce && actions) {\n            actions.setForceQuery(false);\n          }\n        })\n        .catch(response => {\n          getClientErrorObject(response).then(({ error, message }) => {\n            setResponseError(error || message || t('Sorry, an error occurred'));\n          });\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [queryFormData, isRequest]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      setIsLoading(false);\n    }\n  }, [errorMessage]);\n\n  if (isLoading) {\n    return Array(queryCount).fill(<Loading />);\n  }\n\n  if (errorMessage) {\n    const title = t('Run a query to display results');\n    return Array(queryCount).fill(\n      <EmptyStateMedium image=\"document.svg\" title={title} />,\n    );\n  }\n\n  if (responseError) {\n    const err = (\n      <>\n        <TableControls\n          data={[]}\n          columnNames={[]}\n          columnTypes={[]}\n          rowcount={0}\n          datasourceId={queryFormData.datasource}\n          onInputChange={() => {}}\n          isLoading={false}\n          canDownload={canDownload}\n        />\n        <Error>{responseError}</Error>\n      </>\n    );\n    return Array(queryCount).fill(err);\n  }\n\n  if (resultResp.length === 0) {\n    const title = t('No results were returned for this query');\n    return Array(queryCount).fill(\n      <EmptyStateMedium image=\"document.svg\" title={title} />,\n    );\n  }\n  return resultResp\n    .slice(0, queryCount)\n    .map((result, idx) => (\n      <SingleQueryResultPane\n        data={result.data}\n        colnames={result.colnames}\n        coltypes={result.coltypes}\n        rowcount={result.rowcount}\n        dataSize={dataSize}\n        datasourceId={queryFormData.datasource}\n        key={idx}\n        isVisible={isVisible}\n        canDownload={canDownload}\n      />\n    ));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}