{"ast":null,"code":"import _uniqWith from \"lodash/uniqWith\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\n\nimport { styled } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { config } from './ContentConfig';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport const MIN_NUMBER_ITEMS = 2;\nexport const MAX_NUMBER_ITEMS = 6;\nconst HORIZONTAL_PADDING = 12;\nconst VERTICAL_PADDING = 8;\nconst ICON_PADDING = 8;\nconst SPACE_BETWEEN_ITEMS = 16;\nconst ICON_WIDTH = 16;\nconst TEXT_MIN_WIDTH = 70;\nconst TEXT_MAX_WIDTH = 150;\nconst ORDER = {\n  dashboards: 0,\n  table: 1,\n  sql: 2,\n  rows: 3,\n  tags: 4,\n  description: 5,\n  owner: 6,\n  lastModified: 7\n};\nconst Bar = styled.div`\n  ${({ theme, count }) => `\n    display: flex;\n    align-items: center;\n    padding: ${VERTICAL_PADDING}px ${HORIZONTAL_PADDING}px;\n    background-color: ${theme.colors.grayscale.light4};\n    color: ${theme.colors.grayscale.base};\n    font-size: ${theme.typography.sizes.s}px;\n    min-width: ${HORIZONTAL_PADDING * 2 +\n(ICON_WIDTH + SPACE_BETWEEN_ITEMS) * count -\nSPACE_BETWEEN_ITEMS}px;\n    border-radius: ${theme.borderRadius}px;\n    line-height: 1;\n  `}\n`;\nconst StyledItem = styled.div`\n  ${({ theme, collapsed, last, onClick }) => `\n    display: flex;\n    align-items: center;\n    max-width: ${ICON_WIDTH +\nICON_PADDING +\nTEXT_MAX_WIDTH + (\nlast ? 0 : SPACE_BETWEEN_ITEMS)}px;\n    min-width: ${collapsed ?\nICON_WIDTH + (last ? 0 : SPACE_BETWEEN_ITEMS) :\nICON_WIDTH +\nICON_PADDING +\nTEXT_MIN_WIDTH + (\nlast ? 0 : SPACE_BETWEEN_ITEMS)}px;\n    padding-right: ${last ? 0 : SPACE_BETWEEN_ITEMS}px;\n    cursor: ${onClick ? 'pointer' : 'default'};\n    & .metadata-icon {\n      color: ${onClick && collapsed ?\ntheme.colors.primary.base :\ntheme.colors.grayscale.base};\n      padding-right: ${collapsed ? 0 : ICON_PADDING}px;\n      & .anticon {\n        line-height: 0;\n      }\n    }\n    & .metadata-text {\n      min-width: ${TEXT_MIN_WIDTH}px;\n      overflow: hidden;\n      text-overflow: ${collapsed ? 'unset' : 'ellipsis'};\n      white-space: nowrap;\n      text-decoration: ${onClick ? 'underline' : 'none'};\n      line-height: 1.4;\n    }\n  `}\n`;\n// Make sure big tootips are truncated\nconst TootipContent = styled.div`\n  display: -webkit-box;\n  -webkit-line-clamp: 20;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nconst Item = ({ barWidth, contentType, collapsed, last = false, tooltipPlacement }) => {\n  const { icon, title, tooltip = title } = config(contentType);\n  const [isTruncated, setIsTruncated] = useState(false);\n  const ref = useRef(null);\n  const Icon = icon;\n  const { type, onClick } = contentType;\n  useEffect(() => {\n    setIsTruncated(ref.current ? ref.current.scrollWidth > ref.current.clientWidth : false);\n  }, [barWidth, setIsTruncated, contentType]);\n  const content = _jsxs(StyledItem, { collapsed: collapsed, last: last, onClick: onClick ? () => onClick(type) : undefined, role: onClick ? 'button' : undefined, children: [\n    _jsx(Icon, { iconSize: \"l\", className: \"metadata-icon\" }),\n    !collapsed && _jsx(\"span\", { ref: ref, className: \"metadata-text\", children:\n      title }\n    )] }\n  );\n  return isTruncated || collapsed || tooltip && tooltip !== title ? _jsx(Tooltip, { placement: tooltipPlacement, title: _jsx(TootipContent, { children: tooltip }), children:\n    content }\n  ) : content;\n};\n/**\n * The metadata bar component is used to display additional information about an entity.\n * Content types are predefined and consistent across the whole app. This means that\n * they will be displayed and behave in a consistent manner, keeping the same ordering,\n * information formatting, and interactions.\n * To extend the list of content types, a developer needs to request the inclusion of the new type in the design system.\n * This process is important to make sure the new type is reviewed by the design team, improving Superset consistency.\n */__signature__(Item, \"useState{[isTruncated, setIsTruncated](false)}\\nuseRef{ref}\\nuseEffect{}\");\nconst MetadataBar = ({ items, tooltipPlacement = 'top' }) => {\n  const [width, setWidth] = useState();\n  const [collapsed, setCollapsed] = useState(false);\n  const uniqueItems = _uniqWith(items, (a, b) => a.type === b.type);\n  const sortedItems = uniqueItems.sort((a, b) => ORDER[a.type] - ORDER[b.type]);\n  const count = sortedItems.length;\n  if (count < MIN_NUMBER_ITEMS) {\n    throw Error('The minimum number of items for the metadata bar is 2.');\n  }\n  if (count > MAX_NUMBER_ITEMS) {\n    throw Error('The maximum number of items for the metadata bar is 6.');\n  }\n  const onResize = useCallback((width) => {\n    // Calculates the breakpoint width to collapse the bar.\n    // The last item does not have a space, so we subtract SPACE_BETWEEN_ITEMS from the total.\n    const breakpoint = (ICON_WIDTH + ICON_PADDING + TEXT_MIN_WIDTH + SPACE_BETWEEN_ITEMS) *\n    count -\n    SPACE_BETWEEN_ITEMS;\n    setWidth(width);\n    setCollapsed(Boolean(width && width < breakpoint));\n  }, [count]);\n  const { ref } = useResizeDetector({ onResize });\n  return _jsx(Bar, { ref: ref, count: count, \"data-test\": \"metadata-bar\", children:\n    sortedItems.map((item, index) => _jsx(Item, { barWidth: width, contentType: item, collapsed: collapsed, last: index === count - 1, tooltipPlacement: tooltipPlacement }, index)) }\n  );\n};__signature__(MetadataBar, \"useState{[width, setWidth]}\\nuseState{[collapsed, setCollapsed](false)}\\nuseCallback{onResize}\\nuseResizeDetector{{ ref }}\", () => [useResizeDetector]);const _default =\nMetadataBar;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(MIN_NUMBER_ITEMS, \"MIN_NUMBER_ITEMS\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(MAX_NUMBER_ITEMS, \"MAX_NUMBER_ITEMS\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(HORIZONTAL_PADDING, \"HORIZONTAL_PADDING\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(VERTICAL_PADDING, \"VERTICAL_PADDING\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(ICON_PADDING, \"ICON_PADDING\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(SPACE_BETWEEN_ITEMS, \"SPACE_BETWEEN_ITEMS\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(ICON_WIDTH, \"ICON_WIDTH\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(TEXT_MIN_WIDTH, \"TEXT_MIN_WIDTH\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(TEXT_MAX_WIDTH, \"TEXT_MAX_WIDTH\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(ORDER, \"ORDER\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(Bar, \"Bar\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(StyledItem, \"StyledItem\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(TootipContent, \"TootipContent\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(Item, \"Item\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(MetadataBar, \"MetadataBar\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","useResizeDetector","styled","Tooltip","config","jsx","_jsx","jsxs","_jsxs","MIN_NUMBER_ITEMS","MAX_NUMBER_ITEMS","HORIZONTAL_PADDING","VERTICAL_PADDING","ICON_PADDING","SPACE_BETWEEN_ITEMS","ICON_WIDTH","TEXT_MIN_WIDTH","TEXT_MAX_WIDTH","ORDER","dashboards","table","sql","rows","tags","description","owner","lastModified","Bar","div","theme","count","colors","grayscale","light4","base","typography","sizes","s","borderRadius","StyledItem","collapsed","last","onClick","primary","TootipContent","Item","barWidth","contentType","tooltipPlacement","icon","title","tooltip","isTruncated","setIsTruncated","ref","Icon","type","current","scrollWidth","clientWidth","content","undefined","role","children","iconSize","className","placement","__signature__","MetadataBar","items","width","setWidth","setCollapsed","uniqueItems","_uniqWith","a","b","sortedItems","sort","length","Error","onResize","breakpoint","Boolean","map","item","index","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/src/components/MetadataBar/MetadataBar.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { uniqWith } from 'lodash';\nimport { styled } from '@superset-ui/core';\nimport { Tooltip, TooltipPlacement } from 'src/components/Tooltip';\nimport { ContentType } from './ContentType';\nimport { config } from './ContentConfig';\n\nexport const MIN_NUMBER_ITEMS = 2;\nexport const MAX_NUMBER_ITEMS = 6;\n\nconst HORIZONTAL_PADDING = 12;\nconst VERTICAL_PADDING = 8;\nconst ICON_PADDING = 8;\nconst SPACE_BETWEEN_ITEMS = 16;\nconst ICON_WIDTH = 16;\nconst TEXT_MIN_WIDTH = 70;\nconst TEXT_MAX_WIDTH = 150;\nconst ORDER = {\n  dashboards: 0,\n  table: 1,\n  sql: 2,\n  rows: 3,\n  tags: 4,\n  description: 5,\n  owner: 6,\n  lastModified: 7,\n};\n\nconst Bar = styled.div<{ count: number }>`\n  ${({ theme, count }) => `\n    display: flex;\n    align-items: center;\n    padding: ${VERTICAL_PADDING}px ${HORIZONTAL_PADDING}px;\n    background-color: ${theme.colors.grayscale.light4};\n    color: ${theme.colors.grayscale.base};\n    font-size: ${theme.typography.sizes.s}px;\n    min-width: ${\n      HORIZONTAL_PADDING * 2 +\n      (ICON_WIDTH + SPACE_BETWEEN_ITEMS) * count -\n      SPACE_BETWEEN_ITEMS\n    }px;\n    border-radius: ${theme.borderRadius}px;\n    line-height: 1;\n  `}\n`;\n\nconst StyledItem = styled.div<{\n  collapsed: boolean;\n  last: boolean;\n  onClick?: () => void;\n}>`\n  ${({ theme, collapsed, last, onClick }) => `\n    display: flex;\n    align-items: center;\n    max-width: ${\n      ICON_WIDTH +\n      ICON_PADDING +\n      TEXT_MAX_WIDTH +\n      (last ? 0 : SPACE_BETWEEN_ITEMS)\n    }px;\n    min-width: ${\n      collapsed\n        ? ICON_WIDTH + (last ? 0 : SPACE_BETWEEN_ITEMS)\n        : ICON_WIDTH +\n          ICON_PADDING +\n          TEXT_MIN_WIDTH +\n          (last ? 0 : SPACE_BETWEEN_ITEMS)\n    }px;\n    padding-right: ${last ? 0 : SPACE_BETWEEN_ITEMS}px;\n    cursor: ${onClick ? 'pointer' : 'default'};\n    & .metadata-icon {\n      color: ${\n        onClick && collapsed\n          ? theme.colors.primary.base\n          : theme.colors.grayscale.base\n      };\n      padding-right: ${collapsed ? 0 : ICON_PADDING}px;\n      & .anticon {\n        line-height: 0;\n      }\n    }\n    & .metadata-text {\n      min-width: ${TEXT_MIN_WIDTH}px;\n      overflow: hidden;\n      text-overflow: ${collapsed ? 'unset' : 'ellipsis'};\n      white-space: nowrap;\n      text-decoration: ${onClick ? 'underline' : 'none'};\n      line-height: 1.4;\n    }\n  `}\n`;\n\n// Make sure big tootips are truncated\nconst TootipContent = styled.div`\n  display: -webkit-box;\n  -webkit-line-clamp: 20;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Item = ({\n  barWidth,\n  contentType,\n  collapsed,\n  last = false,\n  tooltipPlacement,\n}: {\n  barWidth: number | undefined;\n  contentType: ContentType;\n  collapsed: boolean;\n  last?: boolean;\n  tooltipPlacement: TooltipPlacement;\n}) => {\n  const { icon, title, tooltip = title } = config(contentType);\n  const [isTruncated, setIsTruncated] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n  const Icon = icon;\n  const { type, onClick } = contentType;\n\n  useEffect(() => {\n    setIsTruncated(\n      ref.current ? ref.current.scrollWidth > ref.current.clientWidth : false,\n    );\n  }, [barWidth, setIsTruncated, contentType]);\n\n  const content = (\n    <StyledItem\n      collapsed={collapsed}\n      last={last}\n      onClick={onClick ? () => onClick(type) : undefined}\n      role={onClick ? 'button' : undefined}\n    >\n      <Icon iconSize=\"l\" className=\"metadata-icon\" />\n      {!collapsed && (\n        <span ref={ref} className=\"metadata-text\">\n          {title}\n        </span>\n      )}\n    </StyledItem>\n  );\n  return isTruncated || collapsed || (tooltip && tooltip !== title) ? (\n    <Tooltip\n      placement={tooltipPlacement}\n      title={<TootipContent>{tooltip}</TootipContent>}\n    >\n      {content}\n    </Tooltip>\n  ) : (\n    content\n  );\n};\n\nexport interface MetadataBarProps {\n  /**\n   * Array of content type configurations. To see the available properties\n   * for each content type, check {@link ContentType}\n   */\n  items: ContentType[];\n  /**\n   * Antd tooltip placement. To see available values, check {@link TooltipPlacement}.\n   * Defaults to \"top\".\n   */\n  tooltipPlacement?: TooltipPlacement;\n}\n\n/**\n * The metadata bar component is used to display additional information about an entity.\n * Content types are predefined and consistent across the whole app. This means that\n * they will be displayed and behave in a consistent manner, keeping the same ordering,\n * information formatting, and interactions.\n * To extend the list of content types, a developer needs to request the inclusion of the new type in the design system.\n * This process is important to make sure the new type is reviewed by the design team, improving Superset consistency.\n */\nconst MetadataBar = ({ items, tooltipPlacement = 'top' }: MetadataBarProps) => {\n  const [width, setWidth] = useState<number>();\n  const [collapsed, setCollapsed] = useState(false);\n  const uniqueItems = uniqWith(items, (a, b) => a.type === b.type);\n  const sortedItems = uniqueItems.sort((a, b) => ORDER[a.type] - ORDER[b.type]);\n  const count = sortedItems.length;\n  if (count < MIN_NUMBER_ITEMS) {\n    throw Error('The minimum number of items for the metadata bar is 2.');\n  }\n  if (count > MAX_NUMBER_ITEMS) {\n    throw Error('The maximum number of items for the metadata bar is 6.');\n  }\n\n  const onResize = useCallback(\n    width => {\n      // Calculates the breakpoint width to collapse the bar.\n      // The last item does not have a space, so we subtract SPACE_BETWEEN_ITEMS from the total.\n      const breakpoint =\n        (ICON_WIDTH + ICON_PADDING + TEXT_MIN_WIDTH + SPACE_BETWEEN_ITEMS) *\n          count -\n        SPACE_BETWEEN_ITEMS;\n      setWidth(width);\n      setCollapsed(Boolean(width && width < breakpoint));\n    },\n    [count],\n  );\n\n  const { ref } = useResizeDetector({ onResize });\n\n  return (\n    <Bar ref={ref} count={count} data-test=\"metadata-bar\">\n      {sortedItems.map((item, index) => (\n        <Item\n          barWidth={width}\n          key={index}\n          contentType={item}\n          collapsed={collapsed}\n          last={index === count - 1}\n          tooltipPlacement={tooltipPlacement}\n        />\n      ))}\n    </Bar>\n  );\n};\n\nexport default MetadataBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}