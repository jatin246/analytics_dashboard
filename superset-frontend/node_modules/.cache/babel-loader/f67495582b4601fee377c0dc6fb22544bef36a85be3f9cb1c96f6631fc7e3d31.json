{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { t } from '@superset-ui/core';\nimport { createCtasDatasource, addInfoToast, addDangerToast } from 'src/SqlLab/actions/sqlLab';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport Button from 'src/components/Button';\nimport { exploreChart } from 'src/explore/exploreUtils';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst ExploreCtasResultsButton = ({ table, schema, dbId, templateParams }) => {\n  const errorMessage = useSelector((state) => state.sqlLab.errorMessage);\n  const dispatch = useDispatch();\n  const buildVizOptions = {\n    table_name: table,\n    schema,\n    database_id: dbId,\n    template_params: templateParams\n  };\n  const visualize = () => {\n    dispatch(createCtasDatasource(buildVizOptions)).\n    then((data) => {\n      const formData = {\n        datasource: `${data.table_id}__table`,\n        metrics: ['count'],\n        groupby: [],\n        viz_type: 'table',\n        since: '100 years ago',\n        all_columns: [],\n        row_limit: 1000\n      };\n      dispatch(addInfoToast(t('Creating a data source and creating a new tab')));\n      // open new window for data visualization\n      exploreChart(formData);\n    }).\n    catch(() => {\n      dispatch(addDangerToast(errorMessage || t('An error occurred')));\n    });\n  };\n  return _jsxs(Button, { buttonSize: \"small\", onClick: visualize, tooltip: t('Explore the result set in the data exploration view'), children: [\n    _jsx(InfoTooltipWithTrigger, { icon: \"line-chart\", placement: \"top\", label: t('explore') }), ' ',\n    t('Explore')] }\n  );\n};__signature__(ExploreCtasResultsButton, \"useSelector{errorMessage}\\nuseDispatch{dispatch}\", () => [useSelector, useDispatch]);const _default =\nExploreCtasResultsButton;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ExploreCtasResultsButton, \"ExploreCtasResultsButton\", \"/app/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useSelector","useDispatch","t","createCtasDatasource","addInfoToast","addDangerToast","InfoTooltipWithTrigger","Button","exploreChart","jsx","_jsx","jsxs","_jsxs","ExploreCtasResultsButton","table","schema","dbId","templateParams","errorMessage","state","sqlLab","dispatch","buildVizOptions","table_name","database_id","template_params","visualize","then","data","formData","datasource","table_id","metrics","groupby","viz_type","since","all_columns","row_limit","catch","buttonSize","onClick","tooltip","children","icon","placement","label","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/SqlLab/components/ExploreCtasResultsButton/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { t, JsonObject } from '@superset-ui/core';\nimport {\n  createCtasDatasource,\n  addInfoToast,\n  addDangerToast,\n} from 'src/SqlLab/actions/sqlLab';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport Button from 'src/components/Button';\nimport { exploreChart } from 'src/explore/exploreUtils';\nimport { SqlLabRootState } from 'src/SqlLab/types';\n\nexport interface ExploreCtasResultsButtonProps {\n  table: string;\n  schema?: string | null;\n  dbId: number;\n  templateParams?: string;\n}\n\nconst ExploreCtasResultsButton = ({\n  table,\n  schema,\n  dbId,\n  templateParams,\n}: ExploreCtasResultsButtonProps) => {\n  const errorMessage = useSelector(\n    (state: SqlLabRootState) => state.sqlLab.errorMessage,\n  );\n  const dispatch = useDispatch<(dispatch: any) => Promise<JsonObject>>();\n\n  const buildVizOptions = {\n    table_name: table,\n    schema,\n    database_id: dbId,\n    template_params: templateParams,\n  };\n\n  const visualize = () => {\n    dispatch(createCtasDatasource(buildVizOptions))\n      .then((data: { table_id: number }) => {\n        const formData = {\n          datasource: `${data.table_id}__table`,\n          metrics: ['count'],\n          groupby: [],\n          viz_type: 'table',\n          since: '100 years ago',\n          all_columns: [],\n          row_limit: 1000,\n        };\n        dispatch(\n          addInfoToast(t('Creating a data source and creating a new tab')),\n        );\n        // open new window for data visualization\n        exploreChart(formData);\n      })\n      .catch(() => {\n        dispatch(addDangerToast(errorMessage || t('An error occurred')));\n      });\n  };\n\n  return (\n    <Button\n      buttonSize=\"small\"\n      onClick={visualize}\n      tooltip={t('Explore the result set in the data exploration view')}\n    >\n      <InfoTooltipWithTrigger\n        icon=\"line-chart\"\n        placement=\"top\"\n        label={t('explore')}\n      />{' '}\n      {t('Explore')}\n    </Button>\n  );\n};\n\nexport default ExploreCtasResultsButton;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,CAAC,QAAoB,mBAAmB;AACjD,SACEC,oBAAoB,EACpBC,YAAY,EACZC,cAAc,QACT,2BAA2B;AAClC,SAASC,sBAAsB,QAAQ,6BAA6B;AACpE,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,YAAY,QAAQ,0BAA0B,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAUxD,MAAMC,wBAAwB,GAAGA,CAAC,EAChCC,KAAK,EACLC,MAAM,EACNC,IAAI,EACJC,cAAc,EACgB,KAAI;EAClC,MAAMC,YAAY,GAAGlB,WAAW,CAC9B,CAACmB,KAAsB,KAAKA,KAAK,CAACC,MAAM,CAACF,YAAY,CACtD;EACD,MAAMG,QAAQ,GAAGpB,WAAW,EAA0C;EAEtE,MAAMqB,eAAe,GAAG;IACtBC,UAAU,EAAET,KAAK;IACjBC,MAAM;IACNS,WAAW,EAAER,IAAI;IACjBS,eAAe,EAAER;GAClB;EAED,MAAMS,SAAS,GAAGA,CAAA,KAAK;IACrBL,QAAQ,CAAClB,oBAAoB,CAACmB,eAAe,CAAC,CAAC;IAC5CK,IAAI,CAAC,CAACC,IAA0B,KAAI;MACnC,MAAMC,QAAQ,GAAG;QACfC,UAAU,EAAE,GAAGF,IAAI,CAACG,QAAQ,SAAS;QACrCC,OAAO,EAAE,CAAC,OAAO,CAAC;QAClBC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE,OAAO;QACjBC,KAAK,EAAE,eAAe;QACtBC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;OACZ;MACDhB,QAAQ,CACNjB,YAAY,CAACF,CAAC,CAAC,+CAA+C,CAAC,CAAC,CACjE;MACD;MACAM,YAAY,CAACqB,QAAQ,CAAC;IACxB,CAAC,CAAC;IACDS,KAAK,CAAC,MAAK;MACVjB,QAAQ,CAAChB,cAAc,CAACa,YAAY,IAAIhB,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC;EACN,CAAC;EAED,OACEU,KAAA,CAACL,MAAM,IACLgC,UAAU,EAAC,OAAO,EAClBC,OAAO,EAAEd,SAAU,EACnBe,OAAO,EAAEvC,CAAC,CAAC,qDAAqD,CAAE,EAAAwC,QAAA;IAElEhC,IAAA,CAACJ,sBAAsB,IACrBqC,IAAI,EAAC,YAAY,EACjBC,SAAS,EAAC,KAAK,EACfC,KAAK,EAAE3C,CAAC,CAAC,SAAS,CAAE,GACpB,EAAC,GAAG;IACLA,CAAC,CAAC,SAAS,CAAC;EACP,CAAC;AAEb,CAAC,CAAC4C,aAAA,CAvDIjC,wBAAwB,6DAMPb,WAAW,EAGfC,WAAW,SAAA8C,QAAA;AAgDflC,wBAAwB,CAAvC,eAAAkC,QAAA,CAAwC,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAzDlCvC,wBAAwB,iHAAAmC,cAAA,CAAAI,QAAA,CAAAL,QAAA,wHAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}