{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import copyTextToClipboard from 'src/utils/copy';\nimport { t, logging } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { getDashboardPermalink } from 'src/utils/urlUtils';\nimport { MenuKeys } from 'src/dashboard/types';\nimport { useSelector } from 'react-redux';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst ShareMenuItems = (props) => {\n  const { copyMenuItemTitle, emailMenuItemTitle, emailSubject, emailBody, addDangerToast, addSuccessToast, dashboardId, dashboardComponentId, copyMenuItemRef, shareByEmailMenuItemRef, selectedKeys, ...rest } = props;\n  const { dataMask, activeTabs } = useSelector((state) => ({\n    dataMask: state.dataMask,\n    activeTabs: state.dashboardState.activeTabs\n  }));\n  async function generateUrl() {\n    return getDashboardPermalink({\n      dashboardId,\n      dataMask,\n      activeTabs,\n      anchor: dashboardComponentId\n    });\n  }\n  async function onCopyLink() {\n    try {\n      await copyTextToClipboard(generateUrl);\n      addSuccessToast(t('Copied to clipboard!'));\n    }\n    catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n  async function onShareByEmail() {\n    try {\n      const encodedBody = encodeURIComponent(`${emailBody}${await generateUrl()}`);\n      const encodedSubject = encodeURIComponent(emailSubject);\n      window.location.href = `mailto:?Subject=${encodedSubject}%20&Body=${encodedBody}`;\n    }\n    catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n  return _jsxs(Menu, { selectable: false, selectedKeys: selectedKeys, onClick: (e) => e.key === MenuKeys.CopyLink ? onCopyLink() : onShareByEmail(), children: [\n    _jsx(Menu.Item, { ref: copyMenuItemRef, ...rest, children:\n      _jsx(\"div\", { role: \"button\", tabIndex: 0, children:\n        copyMenuItemTitle }\n      ) }, MenuKeys.CopyLink\n    ),\n    _jsx(Menu.Item, { ref: shareByEmailMenuItemRef, ...rest, children:\n      _jsx(\"div\", { role: \"button\", tabIndex: 0, children:\n        emailMenuItemTitle }\n      ) }, MenuKeys.ShareByEmail\n    )] }\n  );\n};__signature__(ShareMenuItems, \"useSelector{{ dataMask, activeTabs }}\", () => [useSelector]);const _default =\nShareMenuItems;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ShareMenuItems, \"ShareMenuItems\", \"/app/superset-frontend/src/dashboard/components/menu/ShareMenuItems/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/menu/ShareMenuItems/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["copyTextToClipboard","t","logging","Menu","getDashboardPermalink","MenuKeys","useSelector","jsx","_jsx","jsxs","_jsxs","ShareMenuItems","props","copyMenuItemTitle","emailMenuItemTitle","emailSubject","emailBody","addDangerToast","addSuccessToast","dashboardId","dashboardComponentId","copyMenuItemRef","shareByEmailMenuItemRef","selectedKeys","rest","dataMask","activeTabs","state","dashboardState","generateUrl","anchor","onCopyLink","error","onShareByEmail","encodedBody","encodeURIComponent","encodedSubject","window","location","href","selectable","onClick","e","key","CopyLink","children","Item","ref","role","tabIndex","ShareByEmail","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/dashboard/components/menu/ShareMenuItems/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { RefObject } from 'react';\nimport copyTextToClipboard from 'src/utils/copy';\nimport { t, logging } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { getDashboardPermalink } from 'src/utils/urlUtils';\nimport { MenuKeys, RootState } from 'src/dashboard/types';\nimport { useSelector } from 'react-redux';\n\ninterface ShareMenuItemProps {\n  url?: string;\n  copyMenuItemTitle: string;\n  emailMenuItemTitle: string;\n  emailSubject: string;\n  emailBody: string;\n  addDangerToast: Function;\n  addSuccessToast: Function;\n  dashboardId: string | number;\n  dashboardComponentId?: string;\n  copyMenuItemRef?: RefObject<any>;\n  shareByEmailMenuItemRef?: RefObject<any>;\n  selectedKeys?: string[];\n}\n\nconst ShareMenuItems = (props: ShareMenuItemProps) => {\n  const {\n    copyMenuItemTitle,\n    emailMenuItemTitle,\n    emailSubject,\n    emailBody,\n    addDangerToast,\n    addSuccessToast,\n    dashboardId,\n    dashboardComponentId,\n    copyMenuItemRef,\n    shareByEmailMenuItemRef,\n    selectedKeys,\n    ...rest\n  } = props;\n  const { dataMask, activeTabs } = useSelector((state: RootState) => ({\n    dataMask: state.dataMask,\n    activeTabs: state.dashboardState.activeTabs,\n  }));\n\n  async function generateUrl() {\n    return getDashboardPermalink({\n      dashboardId,\n      dataMask,\n      activeTabs,\n      anchor: dashboardComponentId,\n    });\n  }\n\n  async function onCopyLink() {\n    try {\n      await copyTextToClipboard(generateUrl);\n      addSuccessToast(t('Copied to clipboard!'));\n    } catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n\n  async function onShareByEmail() {\n    try {\n      const encodedBody = encodeURIComponent(\n        `${emailBody}${await generateUrl()}`,\n      );\n      const encodedSubject = encodeURIComponent(emailSubject);\n      window.location.href = `mailto:?Subject=${encodedSubject}%20&Body=${encodedBody}`;\n    } catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n\n  return (\n    <Menu\n      selectable={false}\n      selectedKeys={selectedKeys}\n      onClick={e =>\n        e.key === MenuKeys.CopyLink ? onCopyLink() : onShareByEmail()\n      }\n    >\n      <Menu.Item key={MenuKeys.CopyLink} ref={copyMenuItemRef} {...rest}>\n        <div role=\"button\" tabIndex={0}>\n          {copyMenuItemTitle}\n        </div>\n      </Menu.Item>\n      <Menu.Item\n        key={MenuKeys.ShareByEmail}\n        ref={shareByEmailMenuItemRef}\n        {...rest}\n      >\n        <div role=\"button\" tabIndex={0}>\n          {emailMenuItemTitle}\n        </div>\n      </Menu.Item>\n    </Menu>\n  );\n};\nexport default ShareMenuItems;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}