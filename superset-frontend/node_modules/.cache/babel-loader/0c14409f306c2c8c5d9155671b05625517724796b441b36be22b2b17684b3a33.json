{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { getChartMetadataRegistry, t } from '@superset-ui/core';\nimport { Row, RowLabel, RowValue } from './Styles';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport const TypeRow = ({ filter }) => {\n  const metadata = useMemo(() => getChartMetadataRegistry().get(filter.filterType), [filter.filterType]);\n  return _jsxs(Row, { children: [\n    _jsx(RowLabel, { children: t('Filter type') }),\n    _jsx(RowValue, { children: metadata == null ? void 0 : metadata.name })] }\n  );\n};__signature__(TypeRow, \"useMemo{metadata}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TypeRow, \"TypeRow\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/TypeRow.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","getChartMetadataRegistry","t","Row","RowLabel","RowValue","jsx","_jsx","jsxs","_jsxs","TypeRow","filter","metadata","get","filterType","children","name","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FilterCard/TypeRow.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { getChartMetadataRegistry, t } from '@superset-ui/core';\nimport { Row, RowLabel, RowValue } from './Styles';\nimport { FilterCardRowProps } from './types';\n\nexport const TypeRow = ({ filter }: FilterCardRowProps) => {\n  const metadata = useMemo(\n    () => getChartMetadataRegistry().get(filter.filterType),\n    [filter.filterType],\n  );\n  return (\n    <Row>\n      <RowLabel>{t('Filter type')}</RowLabel>\n      <RowValue>{metadata?.name}</RowValue>\n    </Row>\n  );\n};\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,wBAAwB,EAAEC,CAAC,QAAQ,mBAAmB;AAC/D,SAASC,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,UAAU,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAGnD,OAAO,MAAMC,OAAO,GAAGA,CAAC,EAAEC,MAAM,EAAsB,KAAI;EACxD,MAAMC,QAAQ,GAAGZ,OAAO,CACtB,MAAMC,wBAAwB,EAAE,CAACY,GAAG,CAACF,MAAM,CAACG,UAAU,CAAC,EACvD,CAACH,MAAM,CAACG,UAAU,CAAC,CACpB;EACD,OACEL,KAAA,CAACN,GAAG,IAAAY,QAAA;IACFR,IAAA,CAACH,QAAQ,IAAAW,QAAA,EAAEb,CAAC,CAAC,aAAa,CAAC,EAAW,CACtC;IAAAK,IAAA,CAACF,QAAQ,IAAAU,QAAA,EAAEH,QAAQ,oBAARA,QAAQ,CAAEI,IAAI,EAAW,CACtC;EAAK,CAAC;AAEV,CAAC,CAACC,aAAA,CAXWP,OAAO,0CAAAQ,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAAPZ,OAAO,6HAAAa,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}