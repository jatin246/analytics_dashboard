{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useRef } from 'react';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport { FeatureFlag, isDefined, isFeatureEnabled, styled, SupersetClient, getClientErrorObject, t } from '@superset-ui/core';\nimport Modal from 'src/components/Modal';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useSelector } from 'react-redux';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst DatasourceEditor = AsyncEsmComponent(() => import('./DatasourceEditor'));\nconst StyledDatasourceModal = styled(Modal)`\n  .modal-content {\n    height: 900px;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .modal-header {\n    flex: 0 1 auto;\n  }\n  .modal-body {\n    flex: 1 1 auto;\n    overflow: auto;\n  }\n\n  .modal-footer {\n    flex: 0 1 auto;\n  }\n`;\nfunction buildExtraJsonObject(item) {\n  const certification = item != null && item.certified_by || item != null && item.certification_details ?\n  {\n    certified_by: item == null ? void 0 : item.certified_by,\n    details: item == null ? void 0 : item.certification_details\n  } :\n  undefined;\n  return JSON.stringify({\n    certification,\n    warning_markdown: item == null ? void 0 : item.warning_markdown\n  });\n}\nconst DatasourceModal = ({ addSuccessToast, datasource, onDatasourceSave, onHide, show }) => {var _datasource$metrics;\n  const [currentDatasource, setCurrentDatasource] = useState({\n    ...datasource,\n    metrics: datasource == null ? void 0 : (_datasource$metrics = datasource.metrics) == null ? void 0 : _datasource$metrics.map((metric) => ({\n      ...metric,\n      currency: JSON.parse(metric.currency || 'null')\n    }))\n  });\n  const currencies = useSelector((state) => {var _state$common;return (_state$common = state.common) == null ? void 0 : _state$common.currencies;});\n  const [errors, setErrors] = useState([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const dialog = useRef(null);\n  const [modal, contextHolder] = Modal.useModal();\n  const onConfirmSave = () => {var _currentDatasource$ta, _currentDatasource$da, _currentDatasource$da2, _currentDatasource$me, _currentDatasource$co;\n    // Pull out extra fields into the extra object\n    const schema = ((_currentDatasource$ta = currentDatasource.tableSelector) == null ? void 0 : _currentDatasource$ta.schema) || ((_currentDatasource$da =\n    currentDatasource.databaseSelector) == null ? void 0 : _currentDatasource$da.schema) ||\n    currentDatasource.schema;\n    setIsSaving(true);\n    SupersetClient.put({\n      endpoint: `/api/v1/dataset/${currentDatasource.id}`,\n      jsonPayload: {\n        table_name: currentDatasource.table_name,\n        database_id: (_currentDatasource$da2 = currentDatasource.database) == null ? void 0 : _currentDatasource$da2.id,\n        sql: currentDatasource.sql,\n        filter_select_enabled: currentDatasource.filter_select_enabled,\n        fetch_values_predicate: currentDatasource.fetch_values_predicate,\n        schema,\n        description: currentDatasource.description,\n        main_dttm_col: currentDatasource.main_dttm_col,\n        normalize_columns: currentDatasource.normalize_columns,\n        always_filter_main_dttm: currentDatasource.always_filter_main_dttm,\n        offset: currentDatasource.offset,\n        default_endpoint: currentDatasource.default_endpoint,\n        cache_timeout: currentDatasource.cache_timeout === '' ?\n        null :\n        currentDatasource.cache_timeout,\n        is_sqllab_view: currentDatasource.is_sqllab_view,\n        template_params: currentDatasource.template_params,\n        extra: currentDatasource.extra,\n        is_managed_externally: currentDatasource.is_managed_externally,\n        external_url: currentDatasource.external_url,\n        metrics: currentDatasource == null ? void 0 : (_currentDatasource$me = currentDatasource.metrics) == null ? void 0 : _currentDatasource$me.map((metric) => {\n          const metricBody = {\n            expression: metric.expression,\n            description: metric.description,\n            metric_name: metric.metric_name,\n            metric_type: metric.metric_type,\n            d3format: metric.d3format || null,\n            currency: !isDefined(metric.currency) ?\n            null :\n            JSON.stringify(metric.currency),\n            verbose_name: metric.verbose_name,\n            warning_text: metric.warning_text,\n            uuid: metric.uuid,\n            extra: buildExtraJsonObject(metric)\n          };\n          if (!Number.isNaN(Number(metric.id))) {\n            metricBody.id = metric.id;\n          }\n          return metricBody;\n        }),\n        columns: currentDatasource == null ? void 0 : (_currentDatasource$co = currentDatasource.columns) == null ? void 0 : _currentDatasource$co.map((column) => ({\n          id: typeof column.id === 'number' ? column.id : undefined,\n          column_name: column.column_name,\n          type: column.type,\n          advanced_data_type: column.advanced_data_type,\n          verbose_name: column.verbose_name,\n          description: column.description,\n          expression: column.expression,\n          filterable: column.filterable,\n          groupby: column.groupby,\n          is_active: column.is_active,\n          is_dttm: column.is_dttm,\n          python_date_format: column.python_date_format || null,\n          uuid: column.uuid,\n          extra: buildExtraJsonObject(column)\n        })),\n        owners: currentDatasource.owners.map((o) => o.value || o.id)\n      }\n    }).\n    then(() => {\n      addSuccessToast(t('The dataset has been saved'));\n      return SupersetClient.get({\n        endpoint: `/api/v1/dataset/${currentDatasource == null ? void 0 : currentDatasource.id}`\n      });\n    }).\n    then(({ json }) => {\n      // eslint-disable-next-line no-param-reassign\n      json.result.type = 'table';\n      onDatasourceSave({\n        ...json.result,\n        owners: currentDatasource.owners\n      });\n      onHide();\n    }).\n    catch((response) => {\n      setIsSaving(false);\n      getClientErrorObject(response).then((error) => {var _error$errors;\n        let errorResponse;\n        let errorText;\n        // sip-40 error response\n        if (error != null && (_error$errors = error.errors) != null && _error$errors.length) {\n          errorResponse = error.errors[0];\n        } else\n        if (typeof error.error === 'string') {\n          // backward compatible with old error messages\n          errorText = error.error;\n        }\n        modal.error({\n          title: t('Error saving dataset'),\n          okButtonProps: { danger: true, className: 'btn-danger' },\n          content: _jsx(ErrorMessageWithStackTrace, { error: errorResponse, source: \"crud\", fallback: errorText })\n        });\n      });\n    });\n  };\n  const onDatasourceChange = (data, err) => {\n    setCurrentDatasource({\n      ...data,\n      metrics: data == null ? void 0 : data.metrics.map((metric) => ({\n        ...metric,\n        is_certified: (metric == null ? void 0 : metric.certified_by) || (metric == null ? void 0 : metric.certification_details)\n      }))\n    });\n    setErrors(err);\n  };\n  const renderSaveDialog = () => _jsxs(\"div\", { children: [\n    _jsx(Alert, { css: (theme) => ({\n        marginTop: theme.gridUnit * 4,\n        marginBottom: theme.gridUnit * 4\n      }), type: \"warning\", showIcon: true, message: t(`The dataset configuration exposed here\n                affects all the charts using this dataset.\n                Be mindful that changing settings\n                here may affect other charts\n                in undesirable ways.`) }),\n    t('Are you sure you want to save and apply changes?')] }\n  );\n  const onClickSave = () => {\n    dialog.current = modal.confirm({\n      title: t('Confirm save'),\n      content: renderSaveDialog(),\n      onOk: onConfirmSave,\n      icon: null,\n      okText: t('OK'),\n      cancelText: t('Cancel')\n    });\n  };\n  const showLegacyDatasourceEditor = !isFeatureEnabled(FeatureFlag.DisableLegacyDatasourceEditor);\n  return _jsxs(StyledDatasourceModal, { show: show, onHide: onHide, title: _jsxs(\"span\", { children: [\n      t('Edit Dataset '),\n      _jsx(\"strong\", { children: currentDatasource.table_name })] }\n    ), maskClosable: !isEditing, footer: _jsxs(_Fragment, { children: [\n      showLegacyDatasourceEditor && _jsx(Button, { buttonSize: \"small\", buttonStyle: \"default\", \"data-test\": \"datasource-modal-legacy-edit\", className: \"m-r-5\", onClick: () => {\n          window.location.href =\n          currentDatasource.edit_url || currentDatasource.url;\n        }, children:\n        t('Use legacy datasource editor') }\n      ),\n      _jsx(Button, { \"data-test\": \"datasource-modal-cancel\", buttonSize: \"small\", className: \"m-r-5\", onClick: onHide, children:\n        t('Cancel') }\n      ),\n      _jsx(Button, { buttonSize: \"small\", buttonStyle: \"primary\", \"data-test\": \"datasource-modal-save\", onClick: onClickSave, disabled: isSaving ||\n        errors.length > 0 ||\n        currentDatasource.is_managed_externally, tooltip: currentDatasource.is_managed_externally ?\n        t(\"This dataset is managed externally, and can't be edited in Superset\") :\n        '', children:\n        t('Save') }\n      )] }\n    ), responsive: true, children: [\n    _jsx(DatasourceEditor, { showLoadingForImport: true, height: 500, datasource: currentDatasource, onChange: onDatasourceChange, setIsEditing: setIsEditing, currencies: currencies }),\n    contextHolder] }\n  );\n};__signature__(DatasourceModal, \"useState{[currentDatasource, setCurrentDatasource]({\\n        ...datasource,\\n        metrics: datasource?.metrics?.map((metric) => ({\\n            ...metric,\\n            currency: JSON.parse(metric.currency || 'null'),\\n        })),\\n    })}\\nuseSelector{currencies}\\nuseState{[errors, setErrors]([])}\\nuseState{[isSaving, setIsSaving](false)}\\nuseState{[isEditing, setIsEditing](false)}\\nuseRef{dialog}\\nuseModal{[modal, contextHolder]}\", () => [useSelector]);const _default =\nwithToasts(DatasourceModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourceEditor, \"DatasourceEditor\", \"/app/superset-frontend/src/components/Datasource/DatasourceModal.tsx\");reactHotLoader.register(StyledDatasourceModal, \"StyledDatasourceModal\", \"/app/superset-frontend/src/components/Datasource/DatasourceModal.tsx\");reactHotLoader.register(buildExtraJsonObject, \"buildExtraJsonObject\", \"/app/superset-frontend/src/components/Datasource/DatasourceModal.tsx\");reactHotLoader.register(DatasourceModal, \"DatasourceModal\", \"/app/superset-frontend/src/components/Datasource/DatasourceModal.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/Datasource/DatasourceModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useRef","Alert","Button","FeatureFlag","isDefined","isFeatureEnabled","styled","SupersetClient","getClientErrorObject","t","Modal","AsyncEsmComponent","ErrorMessageWithStackTrace","withToasts","useSelector","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DatasourceEditor","StyledDatasourceModal","buildExtraJsonObject","item","certification","certified_by","certification_details","details","undefined","JSON","stringify","warning_markdown","DatasourceModal","addSuccessToast","datasource","onDatasourceSave","onHide","show","_datasource$metrics","currentDatasource","setCurrentDatasource","metrics","map","metric","currency","parse","currencies","state","_state$common","common","errors","setErrors","isSaving","setIsSaving","isEditing","setIsEditing","dialog","modal","contextHolder","useModal","onConfirmSave","_currentDatasource$ta","_currentDatasource$da","_currentDatasource$da2","_currentDatasource$me","_currentDatasource$co","schema","tableSelector","databaseSelector","put","endpoint","id","jsonPayload","table_name","database_id","database","sql","filter_select_enabled","fetch_values_predicate","description","main_dttm_col","normalize_columns","always_filter_main_dttm","offset","default_endpoint","cache_timeout","is_sqllab_view","template_params","extra","is_managed_externally","external_url","metricBody","expression","metric_name","metric_type","d3format","verbose_name","warning_text","uuid","Number","isNaN","columns","column","column_name","type","advanced_data_type","filterable","groupby","is_active","is_dttm","python_date_format","owners","o","value","then","get","json","result","catch","response","error","_error$errors","errorResponse","errorText","length","title","okButtonProps","danger","className","content","source","fallback","onDatasourceChange","data","err","is_certified","renderSaveDialog","children","css","theme","marginTop","gridUnit","marginBottom","showIcon","message","onClickSave","current","confirm","onOk","icon","okText","cancelText","showLegacyDatasourceEditor","DisableLegacyDatasourceEditor","maskClosable","footer","buttonSize","buttonStyle","onClick","window","location","href","edit_url","url","disabled","tooltip","responsive","showLoadingForImport","height","onChange","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/src/components/Datasource/DatasourceModal.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FunctionComponent, useState, useRef } from 'react';\nimport Alert from 'src/components/Alert';\nimport Button from 'src/components/Button';\nimport {\n  FeatureFlag,\n  isDefined,\n  isFeatureEnabled,\n  Metric,\n  styled,\n  SupersetClient,\n  getClientErrorObject,\n  t,\n  SupersetError,\n} from '@superset-ui/core';\n\nimport Modal from 'src/components/Modal';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { useSelector } from 'react-redux';\n\nconst DatasourceEditor = AsyncEsmComponent(() => import('./DatasourceEditor'));\n\nconst StyledDatasourceModal = styled(Modal)`\n  .modal-content {\n    height: 900px;\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n  }\n\n  .modal-header {\n    flex: 0 1 auto;\n  }\n  .modal-body {\n    flex: 1 1 auto;\n    overflow: auto;\n  }\n\n  .modal-footer {\n    flex: 0 1 auto;\n  }\n`;\n\ninterface DatasourceModalProps {\n  addSuccessToast: (msg: string) => void;\n  datasource: any;\n  onChange: () => {};\n  onDatasourceSave: (datasource: object, errors?: Array<any>) => {};\n  onHide: () => {};\n  show: boolean;\n}\n\nfunction buildExtraJsonObject(item: Record<string, unknown>) {\n  const certification =\n    item?.certified_by || item?.certification_details\n      ? {\n          certified_by: item?.certified_by,\n          details: item?.certification_details,\n        }\n      : undefined;\n  return JSON.stringify({\n    certification,\n    warning_markdown: item?.warning_markdown,\n  });\n}\n\nconst DatasourceModal: FunctionComponent<DatasourceModalProps> = ({\n  addSuccessToast,\n  datasource,\n  onDatasourceSave,\n  onHide,\n  show,\n}) => {\n  const [currentDatasource, setCurrentDatasource] = useState({\n    ...datasource,\n    metrics: datasource?.metrics?.map((metric: Metric) => ({\n      ...metric,\n      currency: JSON.parse(metric.currency || 'null'),\n    })),\n  });\n  const currencies = useSelector<\n    {\n      common: {\n        currencies: string[];\n      };\n    },\n    string[]\n  >(state => state.common?.currencies);\n  const [errors, setErrors] = useState<any[]>([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const dialog = useRef<any>(null);\n  const [modal, contextHolder] = Modal.useModal();\n\n  const onConfirmSave = () => {\n    // Pull out extra fields into the extra object\n    const schema =\n      currentDatasource.tableSelector?.schema ||\n      currentDatasource.databaseSelector?.schema ||\n      currentDatasource.schema;\n\n    setIsSaving(true);\n    SupersetClient.put({\n      endpoint: `/api/v1/dataset/${currentDatasource.id}`,\n      jsonPayload: {\n        table_name: currentDatasource.table_name,\n        database_id: currentDatasource.database?.id,\n        sql: currentDatasource.sql,\n        filter_select_enabled: currentDatasource.filter_select_enabled,\n        fetch_values_predicate: currentDatasource.fetch_values_predicate,\n        schema,\n        description: currentDatasource.description,\n        main_dttm_col: currentDatasource.main_dttm_col,\n        normalize_columns: currentDatasource.normalize_columns,\n        always_filter_main_dttm: currentDatasource.always_filter_main_dttm,\n        offset: currentDatasource.offset,\n        default_endpoint: currentDatasource.default_endpoint,\n        cache_timeout:\n          currentDatasource.cache_timeout === ''\n            ? null\n            : currentDatasource.cache_timeout,\n        is_sqllab_view: currentDatasource.is_sqllab_view,\n        template_params: currentDatasource.template_params,\n        extra: currentDatasource.extra,\n        is_managed_externally: currentDatasource.is_managed_externally,\n        external_url: currentDatasource.external_url,\n        metrics: currentDatasource?.metrics?.map(\n          (metric: Record<string, unknown>) => {\n            const metricBody: any = {\n              expression: metric.expression,\n              description: metric.description,\n              metric_name: metric.metric_name,\n              metric_type: metric.metric_type,\n              d3format: metric.d3format || null,\n              currency: !isDefined(metric.currency)\n                ? null\n                : JSON.stringify(metric.currency),\n              verbose_name: metric.verbose_name,\n              warning_text: metric.warning_text,\n              uuid: metric.uuid,\n              extra: buildExtraJsonObject(metric),\n            };\n            if (!Number.isNaN(Number(metric.id))) {\n              metricBody.id = metric.id;\n            }\n            return metricBody;\n          },\n        ),\n        columns: currentDatasource?.columns?.map(\n          (column: Record<string, unknown>) => ({\n            id: typeof column.id === 'number' ? column.id : undefined,\n            column_name: column.column_name,\n            type: column.type,\n            advanced_data_type: column.advanced_data_type,\n            verbose_name: column.verbose_name,\n            description: column.description,\n            expression: column.expression,\n            filterable: column.filterable,\n            groupby: column.groupby,\n            is_active: column.is_active,\n            is_dttm: column.is_dttm,\n            python_date_format: column.python_date_format || null,\n            uuid: column.uuid,\n            extra: buildExtraJsonObject(column),\n          }),\n        ),\n        owners: currentDatasource.owners.map(\n          (o: Record<string, number>) => o.value || o.id,\n        ),\n      },\n    })\n      .then(() => {\n        addSuccessToast(t('The dataset has been saved'));\n        return SupersetClient.get({\n          endpoint: `/api/v1/dataset/${currentDatasource?.id}`,\n        });\n      })\n      .then(({ json }) => {\n        // eslint-disable-next-line no-param-reassign\n        json.result.type = 'table';\n        onDatasourceSave({\n          ...json.result,\n          owners: currentDatasource.owners,\n        });\n        onHide();\n      })\n      .catch(response => {\n        setIsSaving(false);\n        getClientErrorObject(response).then(error => {\n          let errorResponse: SupersetError | undefined;\n          let errorText: string | undefined;\n          // sip-40 error response\n          if (error?.errors?.length) {\n            errorResponse = error.errors[0];\n          } else if (typeof error.error === 'string') {\n            // backward compatible with old error messages\n            errorText = error.error;\n          }\n          modal.error({\n            title: t('Error saving dataset'),\n            okButtonProps: { danger: true, className: 'btn-danger' },\n            content: (\n              <ErrorMessageWithStackTrace\n                error={errorResponse}\n                source=\"crud\"\n                fallback={errorText}\n              />\n            ),\n          });\n        });\n      });\n  };\n\n  const onDatasourceChange = (data: Record<string, any>, err: Array<any>) => {\n    setCurrentDatasource({\n      ...data,\n      metrics: data?.metrics.map((metric: Record<string, unknown>) => ({\n        ...metric,\n        is_certified: metric?.certified_by || metric?.certification_details,\n      })),\n    });\n    setErrors(err);\n  };\n\n  const renderSaveDialog = () => (\n    <div>\n      <Alert\n        css={theme => ({\n          marginTop: theme.gridUnit * 4,\n          marginBottom: theme.gridUnit * 4,\n        })}\n        type=\"warning\"\n        showIcon\n        message={t(`The dataset configuration exposed here\n                affects all the charts using this dataset.\n                Be mindful that changing settings\n                here may affect other charts\n                in undesirable ways.`)}\n      />\n      {t('Are you sure you want to save and apply changes?')}\n    </div>\n  );\n\n  const onClickSave = () => {\n    dialog.current = modal.confirm({\n      title: t('Confirm save'),\n      content: renderSaveDialog(),\n      onOk: onConfirmSave,\n      icon: null,\n      okText: t('OK'),\n      cancelText: t('Cancel'),\n    });\n  };\n\n  const showLegacyDatasourceEditor = !isFeatureEnabled(\n    FeatureFlag.DisableLegacyDatasourceEditor,\n  );\n\n  return (\n    <StyledDatasourceModal\n      show={show}\n      onHide={onHide}\n      title={\n        <span>\n          {t('Edit Dataset ')}\n          <strong>{currentDatasource.table_name}</strong>\n        </span>\n      }\n      maskClosable={!isEditing}\n      footer={\n        <>\n          {showLegacyDatasourceEditor && (\n            <Button\n              buttonSize=\"small\"\n              buttonStyle=\"default\"\n              data-test=\"datasource-modal-legacy-edit\"\n              className=\"m-r-5\"\n              onClick={() => {\n                window.location.href =\n                  currentDatasource.edit_url || currentDatasource.url;\n              }}\n            >\n              {t('Use legacy datasource editor')}\n            </Button>\n          )}\n          <Button\n            data-test=\"datasource-modal-cancel\"\n            buttonSize=\"small\"\n            className=\"m-r-5\"\n            onClick={onHide}\n          >\n            {t('Cancel')}\n          </Button>\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"primary\"\n            data-test=\"datasource-modal-save\"\n            onClick={onClickSave}\n            disabled={\n              isSaving ||\n              errors.length > 0 ||\n              currentDatasource.is_managed_externally\n            }\n            tooltip={\n              currentDatasource.is_managed_externally\n                ? t(\n                    \"This dataset is managed externally, and can't be edited in Superset\",\n                  )\n                : ''\n            }\n          >\n            {t('Save')}\n          </Button>\n        </>\n      }\n      responsive\n    >\n      <DatasourceEditor\n        showLoadingForImport\n        height={500}\n        datasource={currentDatasource}\n        onChange={onDatasourceChange}\n        setIsEditing={setIsEditing}\n        currencies={currencies}\n      />\n      {contextHolder}\n    </StyledDatasourceModal>\n  );\n};\n\nexport default withToasts(DatasourceModal);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}