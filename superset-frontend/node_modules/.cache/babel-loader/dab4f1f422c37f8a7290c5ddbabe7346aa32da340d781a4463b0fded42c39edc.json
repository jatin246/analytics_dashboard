{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logging } from '@superset-ui/core';\nimport { useUpdateCurrentSqlEditorTabMutation, useUpdateSqlEditorTabMutation, useDeleteSqlEditorTabMutation } from 'src/hooks/apiResources/sqlEditorTabs';\nimport { useDebounceValue } from 'src/hooks/useDebounceValue';\nimport { syncQueryEditor, setEditorTabLastUpdate, setLastUpdatedActiveTab, clearDestoryedQueryEditor } from 'src/SqlLab/actions/sqlLab';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nexport const INTERVAL = 5000;\nfunction hasUnsavedChanges(queryEditor, lastSavedTimestamp) {\n  return queryEditor.inLocalStorage ||\n  queryEditor.updatedAt && queryEditor.updatedAt > lastSavedTimestamp;\n}\nexport function filterUnsavedQueryEditorList(queryEditors, unsavedQueryEditor, lastSavedTimestamp) {\n  return queryEditors.\n  map((queryEditor) => ({\n    ...queryEditor,\n    ...(unsavedQueryEditor.id === queryEditor.id && unsavedQueryEditor)\n  })).\n  filter((queryEditor) => hasUnsavedChanges(queryEditor, lastSavedTimestamp));\n}\nconst EditorAutoSync = () => {\n  const queryEditors = useSelector((state) => state.sqlLab.queryEditors);\n  const unsavedQueryEditor = useSelector((state) => state.sqlLab.unsavedQueryEditor);\n  const editorTabLastUpdatedAt = useSelector((state) => state.sqlLab.editorTabLastUpdatedAt);\n  const dispatch = useDispatch();\n  const lastSavedTimestampRef = useRef(editorTabLastUpdatedAt);\n  const currentQueryEditorId = useSelector(({ sqlLab }) => sqlLab.tabHistory.slice(-1)[0] || '');\n  const lastUpdatedActiveTab = useSelector(({ sqlLab }) => sqlLab.lastUpdatedActiveTab);\n  const destroyedQueryEditors = useSelector(({ sqlLab }) => sqlLab.destroyedQueryEditors);\n  const [updateSqlEditor, { error }] = useUpdateSqlEditorTabMutation();\n  const [updateCurrentSqlEditor] = useUpdateCurrentSqlEditorTabMutation();\n  const [deleteSqlEditor] = useDeleteSqlEditorTabMutation();\n  const debouncedUnsavedQueryEditor = useDebounceValue(unsavedQueryEditor, INTERVAL);\n  const getUnsavedItems = useEffectEvent((unsavedQE) => filterUnsavedQueryEditorList(queryEditors, unsavedQE, lastSavedTimestampRef.current));\n  const getUnsavedNewQueryEditor = useEffectEvent(() => filterUnsavedQueryEditorList(queryEditors, unsavedQueryEditor, lastSavedTimestampRef.current).find(({ inLocalStorage }) => Boolean(inLocalStorage)));\n  const syncCurrentQueryEditor = useEffectEvent(() => {var _queryEditors$find;\n    if (currentQueryEditorId &&\n    currentQueryEditorId !== lastUpdatedActiveTab &&\n    !((_queryEditors$find = queryEditors.find(({ id }) => id === currentQueryEditorId)) != null && _queryEditors$find.\n    inLocalStorage)) {\n      updateCurrentSqlEditor(currentQueryEditorId).then(() => {\n        dispatch(setLastUpdatedActiveTab(currentQueryEditorId));\n      });\n    }\n  });\n  const syncDeletedQueryEditor = useEffectEvent(() => {\n    if (Object.keys(destroyedQueryEditors).length > 0) {\n      Object.keys(destroyedQueryEditors).forEach((id) => {\n        deleteSqlEditor(id).\n        then(() => {\n          dispatch(clearDestoryedQueryEditor(id));\n        }).\n        catch(({ status }) => {\n          if (status === 404) {\n            dispatch(clearDestoryedQueryEditor(id));\n          }\n        });\n      });\n    }\n  });\n  useEffect(() => {\n    let saveTimer;\n    function saveUnsavedQueryEditor() {\n      const firstUnsavedQueryEditor = getUnsavedNewQueryEditor();\n      if (firstUnsavedQueryEditor) {\n        dispatch(syncQueryEditor(firstUnsavedQueryEditor));\n      }\n      saveTimer = setTimeout(saveUnsavedQueryEditor, INTERVAL);\n    }\n    const syncTimer = setInterval(syncCurrentQueryEditor, INTERVAL);\n    saveTimer = setTimeout(saveUnsavedQueryEditor, INTERVAL);\n    const clearQueryEditorTimer = setInterval(syncDeletedQueryEditor, INTERVAL);\n    return () => {\n      clearTimeout(saveTimer);\n      clearInterval(syncTimer);\n      clearInterval(clearQueryEditorTimer);\n    };\n  }, [\n  getUnsavedNewQueryEditor,\n  syncCurrentQueryEditor,\n  syncDeletedQueryEditor,\n  dispatch]\n  );\n  useEffect(() => {\n    const unsaved = getUnsavedItems(debouncedUnsavedQueryEditor);\n    Promise.all(unsaved.\n    filter(({ inLocalStorage }) => !inLocalStorage).\n    map((queryEditor) => updateSqlEditor({ queryEditor }))).then((resolvers) => {\n      if (!resolvers.some((result) => 'error' in result)) {\n        lastSavedTimestampRef.current = Date.now();\n        dispatch(setEditorTabLastUpdate(lastSavedTimestampRef.current));\n      }\n    });\n  }, [debouncedUnsavedQueryEditor, getUnsavedItems, dispatch, updateSqlEditor]);\n  useEffect(() => {\n    if (error) {\n      logging.warn('An error occurred while saving your editor state.', error);\n    }\n  }, [dispatch, error]);\n  return null;\n};__signature__(EditorAutoSync, \"useSelector{queryEditors}\\nuseSelector{unsavedQueryEditor}\\nuseSelector{editorTabLastUpdatedAt}\\nuseDispatch{dispatch}\\nuseRef{lastSavedTimestampRef}\\nuseSelector{currentQueryEditorId}\\nuseSelector{lastUpdatedActiveTab}\\nuseSelector{destroyedQueryEditors}\\nuseUpdateSqlEditorTabMutation{[updateSqlEditor, { error }]}\\nuseUpdateCurrentSqlEditorTabMutation{[updateCurrentSqlEditor]}\\nuseDeleteSqlEditorTabMutation{[deleteSqlEditor]}\\nuseDebounceValue{debouncedUnsavedQueryEditor}\\nuseEffectEvent{getUnsavedItems}\\nuseEffectEvent{getUnsavedNewQueryEditor}\\nuseEffectEvent{syncCurrentQueryEditor}\\nuseEffectEvent{syncDeletedQueryEditor}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\", () => [useSelector, useSelector, useSelector, useDispatch, useSelector, useSelector, useSelector, useUpdateSqlEditorTabMutation, useUpdateCurrentSqlEditorTabMutation, useDeleteSqlEditorTabMutation, useDebounceValue, useEffectEvent, useEffectEvent, useEffectEvent, useEffectEvent]);const _default =\nEditorAutoSync;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(INTERVAL, \"INTERVAL\", \"/app/superset-frontend/src/SqlLab/components/EditorAutoSync/index.tsx\");reactHotLoader.register(hasUnsavedChanges, \"hasUnsavedChanges\", \"/app/superset-frontend/src/SqlLab/components/EditorAutoSync/index.tsx\");reactHotLoader.register(filterUnsavedQueryEditorList, \"filterUnsavedQueryEditorList\", \"/app/superset-frontend/src/SqlLab/components/EditorAutoSync/index.tsx\");reactHotLoader.register(EditorAutoSync, \"EditorAutoSync\", \"/app/superset-frontend/src/SqlLab/components/EditorAutoSync/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/EditorAutoSync/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useRef","useEffect","useDispatch","useSelector","logging","useUpdateCurrentSqlEditorTabMutation","useUpdateSqlEditorTabMutation","useDeleteSqlEditorTabMutation","useDebounceValue","syncQueryEditor","setEditorTabLastUpdate","setLastUpdatedActiveTab","clearDestoryedQueryEditor","useEffectEvent","INTERVAL","hasUnsavedChanges","queryEditor","lastSavedTimestamp","inLocalStorage","updatedAt","filterUnsavedQueryEditorList","queryEditors","unsavedQueryEditor","map","id","filter","EditorAutoSync","state","sqlLab","editorTabLastUpdatedAt","dispatch","lastSavedTimestampRef","currentQueryEditorId","tabHistory","slice","lastUpdatedActiveTab","destroyedQueryEditors","updateSqlEditor","error","updateCurrentSqlEditor","deleteSqlEditor","debouncedUnsavedQueryEditor","getUnsavedItems","unsavedQE","current","getUnsavedNewQueryEditor","find","Boolean","syncCurrentQueryEditor","_queryEditors$find","then","syncDeletedQueryEditor","Object","keys","length","forEach","catch","status","saveTimer","saveUnsavedQueryEditor","firstUnsavedQueryEditor","setTimeout","syncTimer","setInterval","clearQueryEditorTimer","clearTimeout","clearInterval","unsaved","Promise","all","resolvers","some","result","Date","now","warn","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/SqlLab/components/EditorAutoSync/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useRef, useEffect, FC } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logging } from '@superset-ui/core';\nimport {\n  SqlLabRootState,\n  QueryEditor,\n  UnsavedQueryEditor,\n} from 'src/SqlLab/types';\nimport {\n  useUpdateCurrentSqlEditorTabMutation,\n  useUpdateSqlEditorTabMutation,\n  useDeleteSqlEditorTabMutation,\n} from 'src/hooks/apiResources/sqlEditorTabs';\nimport { useDebounceValue } from 'src/hooks/useDebounceValue';\nimport {\n  syncQueryEditor,\n  setEditorTabLastUpdate,\n  setLastUpdatedActiveTab,\n  clearDestoryedQueryEditor,\n} from 'src/SqlLab/actions/sqlLab';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\n\nexport const INTERVAL = 5000;\n\nfunction hasUnsavedChanges(\n  queryEditor: QueryEditor,\n  lastSavedTimestamp: number,\n) {\n  return (\n    queryEditor.inLocalStorage ||\n    (queryEditor.updatedAt && queryEditor.updatedAt > lastSavedTimestamp)\n  );\n}\n\nexport function filterUnsavedQueryEditorList(\n  queryEditors: QueryEditor[],\n  unsavedQueryEditor: UnsavedQueryEditor,\n  lastSavedTimestamp: number,\n) {\n  return queryEditors\n    .map(queryEditor => ({\n      ...queryEditor,\n      ...(unsavedQueryEditor.id === queryEditor.id && unsavedQueryEditor),\n    }))\n    .filter(queryEditor => hasUnsavedChanges(queryEditor, lastSavedTimestamp));\n}\n\nconst EditorAutoSync: FC = () => {\n  const queryEditors = useSelector<SqlLabRootState, QueryEditor[]>(\n    state => state.sqlLab.queryEditors,\n  );\n  const unsavedQueryEditor = useSelector<SqlLabRootState, UnsavedQueryEditor>(\n    state => state.sqlLab.unsavedQueryEditor,\n  );\n  const editorTabLastUpdatedAt = useSelector<SqlLabRootState, number>(\n    state => state.sqlLab.editorTabLastUpdatedAt,\n  );\n  const dispatch = useDispatch();\n  const lastSavedTimestampRef = useRef<number>(editorTabLastUpdatedAt);\n\n  const currentQueryEditorId = useSelector<SqlLabRootState, string>(\n    ({ sqlLab }) => sqlLab.tabHistory.slice(-1)[0] || '',\n  );\n  const lastUpdatedActiveTab = useSelector<SqlLabRootState, string>(\n    ({ sqlLab }) => sqlLab.lastUpdatedActiveTab,\n  );\n  const destroyedQueryEditors = useSelector<\n    SqlLabRootState,\n    Record<string, number>\n  >(({ sqlLab }) => sqlLab.destroyedQueryEditors);\n  const [updateSqlEditor, { error }] = useUpdateSqlEditorTabMutation();\n  const [updateCurrentSqlEditor] = useUpdateCurrentSqlEditorTabMutation();\n  const [deleteSqlEditor] = useDeleteSqlEditorTabMutation();\n\n  const debouncedUnsavedQueryEditor = useDebounceValue(\n    unsavedQueryEditor,\n    INTERVAL,\n  );\n\n  const getUnsavedItems = useEffectEvent(unsavedQE =>\n    filterUnsavedQueryEditorList(\n      queryEditors,\n      unsavedQE,\n      lastSavedTimestampRef.current,\n    ),\n  );\n\n  const getUnsavedNewQueryEditor = useEffectEvent(() =>\n    filterUnsavedQueryEditorList(\n      queryEditors,\n      unsavedQueryEditor,\n      lastSavedTimestampRef.current,\n    ).find(({ inLocalStorage }) => Boolean(inLocalStorage)),\n  );\n\n  const syncCurrentQueryEditor = useEffectEvent(() => {\n    if (\n      currentQueryEditorId &&\n      currentQueryEditorId !== lastUpdatedActiveTab &&\n      !queryEditors.find(({ id }) => id === currentQueryEditorId)\n        ?.inLocalStorage\n    ) {\n      updateCurrentSqlEditor(currentQueryEditorId).then(() => {\n        dispatch(setLastUpdatedActiveTab(currentQueryEditorId));\n      });\n    }\n  });\n\n  const syncDeletedQueryEditor = useEffectEvent(() => {\n    if (Object.keys(destroyedQueryEditors).length > 0) {\n      Object.keys(destroyedQueryEditors).forEach(id => {\n        deleteSqlEditor(id)\n          .then(() => {\n            dispatch(clearDestoryedQueryEditor(id));\n          })\n          .catch(({ status }) => {\n            if (status === 404) {\n              dispatch(clearDestoryedQueryEditor(id));\n            }\n          });\n      });\n    }\n  });\n\n  useEffect(() => {\n    let saveTimer: NodeJS.Timeout;\n    function saveUnsavedQueryEditor() {\n      const firstUnsavedQueryEditor = getUnsavedNewQueryEditor();\n\n      if (firstUnsavedQueryEditor) {\n        dispatch(syncQueryEditor(firstUnsavedQueryEditor));\n      }\n      saveTimer = setTimeout(saveUnsavedQueryEditor, INTERVAL);\n    }\n    const syncTimer = setInterval(syncCurrentQueryEditor, INTERVAL);\n    saveTimer = setTimeout(saveUnsavedQueryEditor, INTERVAL);\n    const clearQueryEditorTimer = setInterval(syncDeletedQueryEditor, INTERVAL);\n    return () => {\n      clearTimeout(saveTimer);\n      clearInterval(syncTimer);\n      clearInterval(clearQueryEditorTimer);\n    };\n  }, [\n    getUnsavedNewQueryEditor,\n    syncCurrentQueryEditor,\n    syncDeletedQueryEditor,\n    dispatch,\n  ]);\n\n  useEffect(() => {\n    const unsaved = getUnsavedItems(debouncedUnsavedQueryEditor);\n\n    Promise.all(\n      unsaved\n        .filter(({ inLocalStorage }) => !inLocalStorage)\n        .map(queryEditor => updateSqlEditor({ queryEditor })),\n    ).then(resolvers => {\n      if (!resolvers.some(result => 'error' in result)) {\n        lastSavedTimestampRef.current = Date.now();\n        dispatch(setEditorTabLastUpdate(lastSavedTimestampRef.current));\n      }\n    });\n  }, [debouncedUnsavedQueryEditor, getUnsavedItems, dispatch, updateSqlEditor]);\n\n  useEffect(() => {\n    if (error) {\n      logging.warn('An error occurred while saving your editor state.', error);\n    }\n  }, [dispatch, error]);\n\n  return null;\n};\n\nexport default EditorAutoSync;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}