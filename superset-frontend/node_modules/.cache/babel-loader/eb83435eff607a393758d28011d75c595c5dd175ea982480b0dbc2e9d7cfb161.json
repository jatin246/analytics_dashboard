{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { GenericDataType } from '@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport { SHARED_COLUMN_CONFIG_PROPS } from './constants';\nimport { isTabLayoutItem } from './types';\nimport ControlForm, { ControlFormItem, ControlFormRow } from './ControlForm';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport default function ColumnConfigPopover({ column, configFormLayout, onChange }) {\n  const renderRow = (row, i) => _jsx(ControlFormRow, { children:\n    row.map((meta) => {\n      const key = typeof meta === 'string' ? meta : meta.name;\n      const override = typeof meta === 'string' ?\n      {} :\n      'override' in meta ?\n      meta.override :\n      meta.config;\n      const props = {\n        ...(key in SHARED_COLUMN_CONFIG_PROPS ?\n        SHARED_COLUMN_CONFIG_PROPS[key] :\n        undefined),\n        ...override\n      };\n      return _jsx(ControlFormItem, { name: key, ...props }, key);\n    }) }, i\n  );\n  const layout = configFormLayout[column.type === undefined ? GenericDataType.String : column.type];\n  if (isTabLayoutItem(layout[0])) {\n    return _jsx(Tabs, { centered: true, children:\n      layout.map((item, i) => isTabLayoutItem(item) ? _jsx(Tabs.TabPane, { tab: item.tab, children:\n        _jsx(ControlForm, { onChange: onChange, value: column.config, children:\n          item.children.map((row, i) => renderRow(row, i)) }\n        ) }, i\n      ) : null) }\n    );\n  }\n  return _jsx(ControlForm, { onChange: onChange, value: column.config, children:\n    layout.map((row, i) => renderRow(row, i)) }\n  );\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ColumnConfigPopover, \"ColumnConfigPopover\", \"/app/superset-frontend/src/explore/components/controls/ColumnConfigControl/ColumnConfigPopover.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["GenericDataType","Tabs","SHARED_COLUMN_CONFIG_PROPS","isTabLayoutItem","ControlForm","ControlFormItem","ControlFormRow","jsx","_jsx","ColumnConfigPopover","column","configFormLayout","onChange","renderRow","row","i","children","map","meta","key","name","override","config","props","undefined","layout","type","String","centered","item","TabPane","tab","value","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/controls/ColumnConfigControl/ColumnConfigPopover.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { GenericDataType } from '@superset-ui/core';\nimport Tabs from 'src/components/Tabs';\nimport {\n  SHARED_COLUMN_CONFIG_PROPS,\n  SharedColumnConfigProp,\n} from './constants';\nimport {\n  ColumnConfig,\n  ColumnConfigFormItem,\n  ColumnConfigFormLayout,\n  ColumnConfigInfo,\n  ControlFormItemDefaultSpec,\n  isTabLayoutItem,\n} from './types';\nimport ControlForm, { ControlFormItem, ControlFormRow } from './ControlForm';\n\nexport type ColumnConfigPopoverProps = {\n  column: ColumnConfigInfo;\n  configFormLayout: ColumnConfigFormLayout;\n  onChange: (value: ColumnConfig) => void;\n  width?: number | string;\n  height?: number | string;\n};\n\nexport default function ColumnConfigPopover({\n  column,\n  configFormLayout,\n  onChange,\n}: ColumnConfigPopoverProps) {\n  const renderRow = (row: ColumnConfigFormItem[], i: number) => (\n    <ControlFormRow key={i}>\n      {row.map(meta => {\n        const key = typeof meta === 'string' ? meta : meta.name;\n        const override =\n          typeof meta === 'string'\n            ? {}\n            : 'override' in meta\n              ? meta.override\n              : meta.config;\n        const props = {\n          ...(key in SHARED_COLUMN_CONFIG_PROPS\n            ? SHARED_COLUMN_CONFIG_PROPS[key as SharedColumnConfigProp]\n            : undefined),\n          ...override,\n        } as ControlFormItemDefaultSpec;\n        return <ControlFormItem key={key} name={key} {...props} />;\n      })}\n    </ControlFormRow>\n  );\n\n  const layout =\n    configFormLayout[\n      column.type === undefined ? GenericDataType.String : column.type\n    ];\n\n  if (isTabLayoutItem(layout[0])) {\n    return (\n      <Tabs centered>\n        {layout.map((item, i) =>\n          isTabLayoutItem(item) ? (\n            <Tabs.TabPane tab={item.tab} key={i}>\n              <ControlForm onChange={onChange} value={column.config}>\n                {item.children.map((row, i) => renderRow(row, i))}\n              </ControlForm>\n            </Tabs.TabPane>\n          ) : null,\n        )}\n      </Tabs>\n    );\n  }\n  return (\n    <ControlForm onChange={onChange} value={column.config}>\n      {layout.map((row, i) => renderRow(row as ColumnConfigFormItem[], i))}\n    </ControlForm>\n  );\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,eAAe,QAAQ,mBAAmB;AACnD,OAAOC,IAAI,MAAM,qBAAqB;AACtC,SACEC,0BAA0B,QAErB,aAAa;AACpB,SAMEC,eAAe,QACV,SAAS;AAChB,OAAOC,WAAW,IAAIC,eAAe,EAAEC,cAAc,QAAQ,eAAe,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAU7E,eAAc,SAAUC,mBAAmBA,CAAC,EAC1CC,MAAM,EACNC,gBAAgB,EAChBC,QAAQ,EACiB;EACzB,MAAMC,SAAS,GAAGA,CAACC,GAA2B,EAAEC,CAAS,KACvDP,IAAA,CAACF,cAAc,IAAAU,QAAA;IACZF,GAAG,CAACG,GAAG,CAAC,CAAAC,IAAI,KAAG;MACd,MAAMC,GAAG,GAAG,OAAOD,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGA,IAAI,CAACE,IAAI;MACvD,MAAMC,QAAQ,GACZ,OAAOH,IAAI,KAAK,QAAQ;MACpB,EAAE;MACF,UAAU,IAAIA,IAAI;MAChBA,IAAI,CAACG,QAAQ;MACbH,IAAI,CAACI,MAAM;MACnB,MAAMC,KAAK,GAAG;QACZ,IAAIJ,GAAG,IAAIjB,0BAA0B;QACjCA,0BAA0B,CAACiB,GAA6B,CAAC;QACzDK,SAAS,CAAC;QACd,GAAGH;OAC0B;MAC/B,OAAOb,IAAA,CAACH,eAAe,IAAWe,IAAI,EAAED,GAAI,KAAKI,KAAK,IAAzBJ,GAA0B,CAAG;IAC5D,CAAC,CAAC,IAhBiBJ;EAiBL,CACjB;EAED,MAAMU,MAAM,GACVd,gBAAgB,CACdD,MAAM,CAACgB,IAAI,KAAKF,SAAS,GAAGxB,eAAe,CAAC2B,MAAM,GAAGjB,MAAM,CAACgB,IAAI,CACjE;EAEH,IAAIvB,eAAe,CAACsB,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9B,OACEjB,IAAA,CAACP,IAAI,IAAC2B,QAAQ,QAAAZ,QAAA;MACXS,MAAM,CAACR,GAAG,CAAC,CAACY,IAAI,EAAEd,CAAC,KAClBZ,eAAe,CAAC0B,IAAI,CAAC,GACnBrB,IAAA,CAACP,IAAI,CAAC6B,OAAO,IAACC,GAAG,EAAEF,IAAI,CAACE,GAAI,EAAAf,QAAA;QAC1BR,IAAA,CAACJ,WAAW,IAACQ,QAAQ,EAAEA,QAAS,EAACoB,KAAK,EAAEtB,MAAM,CAACY,MAAO,EAAAN,QAAA;UACnDa,IAAI,CAACb,QAAQ,CAACC,GAAG,CAAC,CAACH,GAAG,EAAEC,CAAC,KAAKF,SAAS,CAACC,GAAG,EAAEC,CAAC,CAAC,CAAC;QACtC,CACf,IAJkCA;MAIpB,CAAC,GACb,IAAI,CACT;IACG,CAAC;;EAGX,OACEP,IAAA,CAACJ,WAAW,IAACQ,QAAQ,EAAEA,QAAS,EAACoB,KAAK,EAAEtB,MAAM,CAACY,MAAO,EAAAN,QAAA;IACnDS,MAAM,CAACR,GAAG,CAAC,CAACH,GAAG,EAAEC,CAAC,KAAKF,SAAS,CAACC,GAA6B,EAAEC,CAAC,CAAC,CAAC;EACzD,CAAC;AAElB,CAAC,mBAAAkB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAX,SAAA,MAAAS,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAnDuB3B,mBAAmB,uJAAA4B,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAb,SAAA,CAAAa,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}