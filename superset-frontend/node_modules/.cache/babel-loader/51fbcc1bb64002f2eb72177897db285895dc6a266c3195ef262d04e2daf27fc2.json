{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useDispatch } from 'react-redux';\nimport { styled, useTheme, t } from '@superset-ui/core';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport Icons from 'src/components/Icons';\nimport { queryEditorSetQueryLimit } from 'src/SqlLab/actions/sqlLab';\nimport useQueryEditor from 'src/SqlLab/hooks/useQueryEditor';import { jsxs as _jsxs, jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function convertToNumWithSpaces(num) {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ');\n}\nconst LimitSelectStyled = styled.span`\n  ${({ theme }) => `\n    .ant-dropdown-trigger {\n      align-items: center;\n      color: ${theme.colors.grayscale.dark2};\n      display: flex;\n      font-size: 12px;\n      margin-right: ${theme.gridUnit * 2}px;\n      text-decoration: none;\n      border: 0;\n      background: transparent;\n      span {\n        display: inline-block;\n        margin-right: ${theme.gridUnit * 2}px;\n        &:last-of-type: {\n          margin-right: ${theme.gridUnit * 4}px;\n        }\n      }\n    }\n  `}\n`;\nfunction renderQueryLimit(maxRow, setQueryLimit) {\n  const limitDropdown = [];\n  // Construct limit dropdown as increasing powers of ten until we reach SQL_MAX_ROW\n  for (let i = 10; i < maxRow; i *= 10) {\n    limitDropdown.push(i);\n  }\n  limitDropdown.push(maxRow);\n  return _jsx(Menu, { children:\n    [...new Set(limitDropdown)].map((limit) => _jsxs(Menu.Item, { onClick: () => setQueryLimit(limit), children: [\n\n      convertToNumWithSpaces(limit), ' '] }, `${limit}`\n    )) }\n  );\n}\nconst QueryLimitSelect = ({ queryEditorId, maxRow, defaultQueryLimit }) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const queryEditor = useQueryEditor(queryEditorId, ['id', 'queryLimit']);\n  const queryLimit = queryEditor.queryLimit || defaultQueryLimit;\n  const setQueryLimit = (updatedQueryLimit) => dispatch(queryEditorSetQueryLimit(queryEditor, updatedQueryLimit));\n  return _jsx(LimitSelectStyled, { children:\n    _jsx(AntdDropdown, { overlay: renderQueryLimit(maxRow, setQueryLimit), trigger: ['click'], children:\n      _jsxs(\"button\", { type: \"button\", onClick: (e) => e.preventDefault(), children: [\n        _jsxs(\"span\", { children: [t('LIMIT'), \":\"] }),\n        _jsx(\"span\", { className: \"limitDropdown\", children:\n          convertToNumWithSpaces(queryLimit) }\n        ),\n        _jsx(Icons.TriangleDown, { iconColor: theme.colors.grayscale.base })] }\n      ) }\n    ) }\n  );\n};__signature__(QueryLimitSelect, \"useTheme{theme}\\nuseDispatch{dispatch}\\nuseQueryEditor{queryEditor}\", () => [useTheme, useDispatch, useQueryEditor]);const _default =\nQueryLimitSelect;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(convertToNumWithSpaces, \"convertToNumWithSpaces\", \"/app/superset-frontend/src/SqlLab/components/QueryLimitSelect/index.tsx\");reactHotLoader.register(LimitSelectStyled, \"LimitSelectStyled\", \"/app/superset-frontend/src/SqlLab/components/QueryLimitSelect/index.tsx\");reactHotLoader.register(renderQueryLimit, \"renderQueryLimit\", \"/app/superset-frontend/src/SqlLab/components/QueryLimitSelect/index.tsx\");reactHotLoader.register(QueryLimitSelect, \"QueryLimitSelect\", \"/app/superset-frontend/src/SqlLab/components/QueryLimitSelect/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/QueryLimitSelect/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useDispatch","styled","useTheme","t","AntdDropdown","Menu","Icons","queryEditorSetQueryLimit","useQueryEditor","jsxs","_jsxs","jsx","_jsx","convertToNumWithSpaces","num","toString","replace","LimitSelectStyled","span","theme","colors","grayscale","dark2","gridUnit","renderQueryLimit","maxRow","setQueryLimit","limitDropdown","i","push","children","Set","map","limit","Item","onClick","QueryLimitSelect","queryEditorId","defaultQueryLimit","dispatch","queryEditor","queryLimit","updatedQueryLimit","overlay","trigger","type","e","preventDefault","className","TriangleDown","iconColor","base","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/SqlLab/components/QueryLimitSelect/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useDispatch } from 'react-redux';\nimport { styled, useTheme, t } from '@superset-ui/core';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport Icons from 'src/components/Icons';\nimport { queryEditorSetQueryLimit } from 'src/SqlLab/actions/sqlLab';\nimport useQueryEditor from 'src/SqlLab/hooks/useQueryEditor';\n\nexport interface QueryLimitSelectProps {\n  queryEditorId: string;\n  maxRow: number;\n  defaultQueryLimit: number;\n}\n\nexport function convertToNumWithSpaces(num: number) {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ');\n}\n\nconst LimitSelectStyled = styled.span`\n  ${({ theme }) => `\n    .ant-dropdown-trigger {\n      align-items: center;\n      color: ${theme.colors.grayscale.dark2};\n      display: flex;\n      font-size: 12px;\n      margin-right: ${theme.gridUnit * 2}px;\n      text-decoration: none;\n      border: 0;\n      background: transparent;\n      span {\n        display: inline-block;\n        margin-right: ${theme.gridUnit * 2}px;\n        &:last-of-type: {\n          margin-right: ${theme.gridUnit * 4}px;\n        }\n      }\n    }\n  `}\n`;\n\nfunction renderQueryLimit(\n  maxRow: number,\n  setQueryLimit: (limit: number) => void,\n) {\n  const limitDropdown = [];\n\n  // Construct limit dropdown as increasing powers of ten until we reach SQL_MAX_ROW\n  for (let i = 10; i < maxRow; i *= 10) {\n    limitDropdown.push(i);\n  }\n  limitDropdown.push(maxRow);\n\n  return (\n    <Menu>\n      {[...new Set(limitDropdown)].map(limit => (\n        <Menu.Item key={`${limit}`} onClick={() => setQueryLimit(limit)}>\n          {/* // eslint-disable-line no-use-before-define */}\n          {convertToNumWithSpaces(limit)}{' '}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n}\n\nconst QueryLimitSelect = ({\n  queryEditorId,\n  maxRow,\n  defaultQueryLimit,\n}: QueryLimitSelectProps) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const queryEditor = useQueryEditor(queryEditorId, ['id', 'queryLimit']);\n  const queryLimit = queryEditor.queryLimit || defaultQueryLimit;\n  const setQueryLimit = (updatedQueryLimit: number) =>\n    dispatch(queryEditorSetQueryLimit(queryEditor, updatedQueryLimit));\n\n  return (\n    <LimitSelectStyled>\n      <AntdDropdown\n        overlay={renderQueryLimit(maxRow, setQueryLimit)}\n        trigger={['click']}\n      >\n        <button type=\"button\" onClick={e => e.preventDefault()}>\n          <span>{t('LIMIT')}:</span>\n          <span className=\"limitDropdown\">\n            {convertToNumWithSpaces(queryLimit)}\n          </span>\n          <Icons.TriangleDown iconColor={theme.colors.grayscale.base} />\n        </button>\n      </AntdDropdown>\n    </LimitSelectStyled>\n  );\n};\n\nexport default QueryLimitSelect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}