{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport moment from 'moment';\nimport Card from 'src/components/Card';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Label from 'src/components/Label';\nimport { t, useTheme } from '@superset-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { queryEditorSetSql, cloneQueryToNewTab, fetchQueryResults, clearQueryResults, removeQuery } from 'src/SqlLab/actions/sqlLab';\nimport TableView from 'src/components/TableView';\nimport Button from 'src/components/Button';\nimport { fDuration } from 'src/utils/dates';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport ResultSet from '../ResultSet';\nimport HighlightedSql from '../HighlightedSql';\nimport { StaticPosition, verticalAlign, StyledTooltip } from './styles';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst openQuery = (id) => {\n  const url = `/sqllab?queryId=${id}`;\n  window.open(url);\n};\nconst QueryTable = ({ columns = ['started', 'duration', 'rows'], queries = [], onUserClicked = () => undefined, onDbClicked = () => undefined, displayLimit, latestQueryId }) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const QUERY_HISTORY_TABLE_HEADERS_LOCALIZED = {\n    state: t('State'),\n    started: t('Started'),\n    duration: t('Duration'),\n    progress: t('Progress'),\n    rows: t('Rows'),\n    sql: t('SQL'),\n    results: t('Results'),\n    actions: t('Actions')\n  };\n  const setHeaders = (column) => {\n    if (column === 'sql') {\n      return column.toUpperCase();\n    }\n    return column.charAt(0).toUpperCase().concat(column.slice(1));\n  };\n  const columnsOfTable = useMemo(() => columns.map((column) => ({\n    accessor: column,\n    Header: QUERY_HISTORY_TABLE_HEADERS_LOCALIZED[column] || setHeaders(column),\n    disableSortBy: true\n  })), [columns]);\n  const user = useSelector((state) => state.user);\n  const data = useMemo(() => {\n    const restoreSql = (query) => {\n      dispatch(queryEditorSetSql({ id: query.sqlEditorId }, query.sql, query.id));\n    };\n    const openQueryInNewTab = (query) => {\n      dispatch(cloneQueryToNewTab(query, true));\n    };\n    const openAsyncResults = (query, displayLimit) => {\n      dispatch(fetchQueryResults(query, displayLimit));\n    };\n    const statusAttributes = {\n      success: {\n        config: {\n          icon: _jsx(Icons.Check, { iconColor: theme.colors.success.base }),\n          label: t('Success')\n        }\n      },\n      failed: {\n        config: {\n          icon: _jsx(Icons.XSmall, { iconColor: theme.colors.error.base }),\n          label: t('Failed')\n        }\n      },\n      stopped: {\n        config: {\n          icon: _jsx(Icons.XSmall, { iconColor: theme.colors.error.base }),\n          label: t('Failed')\n        }\n      },\n      running: {\n        config: {\n          icon: _jsx(Icons.Running, { iconColor: theme.colors.primary.base }),\n          label: t('Running')\n        }\n      },\n      fetching: {\n        config: {\n          icon: _jsx(Icons.Queued, { iconColor: theme.colors.primary.base }),\n          label: t('Fetching')\n        }\n      },\n      timed_out: {\n        config: {\n          icon: _jsx(Icons.Offline, { iconColor: theme.colors.grayscale.light1 }),\n          label: t('Offline')\n        }\n      },\n      scheduled: {\n        config: {\n          icon: _jsx(Icons.Queued, { iconColor: theme.colors.grayscale.base }),\n          label: t('Scheduled')\n        }\n      },\n      pending: {\n        config: {\n          icon: _jsx(Icons.Queued, { iconColor: theme.colors.grayscale.base }),\n          label: t('Scheduled')\n        }\n      },\n      error: {\n        config: {\n          icon: _jsx(Icons.Error, { iconColor: theme.colors.error.base }),\n          label: t('Unknown Status')\n        }\n      }\n    };\n    return queries.\n    map((query) => {\n      const { state, sql, progress, ...rest } = query;\n      const q = rest;\n      const status = statusAttributes[state] || statusAttributes.error;\n      if (q.endDttm) {\n        q.duration = fDuration(q.startDttm, q.endDttm);\n      }\n      const time = moment(q.startDttm).format().split('T');\n      q.time = _jsx(\"div\", { children:\n        _jsxs(\"span\", { children: [\n          time[0], \" \", _jsx(\"br\", {}), \" \", time[1]] }\n        ) }\n      );\n      q.user = _jsx(Button, { buttonSize: \"small\", buttonStyle: \"link\", onClick: () => onUserClicked(q.userId), children:\n        q.user }\n      );\n      q.db = _jsx(Button, { buttonSize: \"small\", buttonStyle: \"link\", onClick: () => onDbClicked(q.dbId), children:\n        q.db }\n      );\n      q.started = moment(q.startDttm).format('L HH:mm:ss');\n      q.querylink = _jsxs(Button, { buttonSize: \"small\", buttonStyle: \"link\", onClick: () => openQuery(q.queryId), children: [\n        _jsx(\"i\", { className: \"fa fa-external-link m-r-3\" }),\n        t('Edit')] }\n      );\n      q.sql = _jsx(Card, { css: [StaticPosition, process.env.NODE_ENV === \"production\" ? \"\" : \";label:q-sql;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"], children:\n        _jsx(HighlightedSql, { sql: sql, rawSql: q.executedSql, shrink: true, maxWidth: 60 }) }\n      );\n      if (q.resultsKey) {\n        q.results = _jsx(ModalTrigger, { className: \"ResultsModal\", triggerNode: _jsx(Label, { type: \"info\", className: \"pointer\", children:\n            t('View') }\n          ), modalTitle: t('Data preview'), beforeOpen: () => openAsyncResults(query, displayLimit), onExit: () => dispatch(clearQueryResults(query)), modalBody: _jsx(ResultSet, { showSql: true, queryId: query.id, height: 400, displayLimit: displayLimit, defaultQueryLimit: 1000 }), responsive: true });\n      } else\n      {\n        q.results = _jsx(_Fragment, {});\n      }\n      q.progress =\n      state === 'success' ? _jsx(ProgressBar, { percent: parseInt(progress.toFixed(0), 10), striped: true, showInfo: false }) : _jsx(ProgressBar, { percent: parseInt(progress.toFixed(0), 10), striped: true });\n      q.state = _jsx(Tooltip, { title: status.config.label, placement: \"bottom\", children:\n        _jsx(\"span\", { children: status.config.icon }) }\n      );\n      q.actions = _jsxs(\"div\", { children: [\n        _jsx(StyledTooltip, { onClick: () => restoreSql(query), tooltip: t('Overwrite text in the editor with a query on this table'), placement: \"top\", children:\n          _jsx(Icons.Edit, { iconSize: \"xl\" }) }\n        ),\n        _jsx(StyledTooltip, { onClick: () => openQueryInNewTab(query), tooltip: t('Run query in a new tab'), placement: \"top\", children:\n          _jsx(Icons.PlusCircleOutlined, { iconSize: \"xl\", css: verticalAlign }) }\n        ),\n        q.id !== latestQueryId && _jsx(StyledTooltip, { tooltip: t('Remove query from log'), onClick: () => dispatch(removeQuery(query)), children:\n          _jsx(Icons.Trash, { iconSize: \"xl\" }) }\n        )] }\n      );\n      return q;\n    }).\n    reverse();\n  }, [queries, onUserClicked, onDbClicked, user, displayLimit]);\n  return _jsx(\"div\", { className: \"QueryTable\", children:\n    _jsx(TableView, { columns: columnsOfTable, data: data, className: \"table-condensed\", pageSize: 50 }) }\n  );\n};__signature__(QueryTable, \"useTheme{theme}\\nuseDispatch{dispatch}\\nuseMemo{columnsOfTable}\\nuseSelector{user}\\nuseMemo{data}\", () => [useTheme, useDispatch, useSelector]);const _default =\nQueryTable;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(openQuery, \"openQuery\", \"/app/superset-frontend/src/SqlLab/components/QueryTable/index.tsx\");reactHotLoader.register(QueryTable, \"QueryTable\", \"/app/superset-frontend/src/SqlLab/components/QueryTable/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/QueryTable/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","moment","Card","ProgressBar","Label","t","useTheme","useDispatch","useSelector","queryEditorSetSql","cloneQueryToNewTab","fetchQueryResults","clearQueryResults","removeQuery","TableView","Button","fDuration","Icons","Tooltip","ModalTrigger","ResultSet","HighlightedSql","StaticPosition","verticalAlign","StyledTooltip","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","openQuery","id","url","window","open","QueryTable","columns","queries","onUserClicked","undefined","onDbClicked","displayLimit","latestQueryId","theme","dispatch","QUERY_HISTORY_TABLE_HEADERS_LOCALIZED","state","started","duration","progress","rows","sql","results","actions","setHeaders","column","toUpperCase","charAt","concat","slice","columnsOfTable","map","accessor","Header","disableSortBy","user","data","restoreSql","query","sqlEditorId","openQueryInNewTab","openAsyncResults","statusAttributes","success","config","icon","Check","iconColor","colors","base","label","failed","XSmall","error","stopped","running","Running","primary","fetching","Queued","timed_out","Offline","grayscale","light1","scheduled","pending","Error","rest","q","status","endDttm","startDttm","time","format","split","children","buttonSize","buttonStyle","onClick","userId","db","dbId","querylink","queryId","className","css","process","env","NODE_ENV","rawSql","executedSql","shrink","maxWidth","resultsKey","triggerNode","type","modalTitle","beforeOpen","onExit","modalBody","showSql","height","defaultQueryLimit","responsive","percent","parseInt","toFixed","striped","showInfo","title","placement","tooltip","Edit","iconSize","PlusCircleOutlined","Trash","reverse","pageSize","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/src/SqlLab/components/QueryTable/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport moment from 'moment';\nimport Card from 'src/components/Card';\nimport ProgressBar from 'src/components/ProgressBar';\nimport Label from 'src/components/Label';\nimport { t, useTheme, QueryResponse } from '@superset-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  queryEditorSetSql,\n  cloneQueryToNewTab,\n  fetchQueryResults,\n  clearQueryResults,\n  removeQuery,\n} from 'src/SqlLab/actions/sqlLab';\nimport TableView from 'src/components/TableView';\nimport Button from 'src/components/Button';\nimport { fDuration } from 'src/utils/dates';\nimport Icons from 'src/components/Icons';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { SqlLabRootState } from 'src/SqlLab/types';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport { UserWithPermissionsAndRoles as User } from 'src/types/bootstrapTypes';\nimport ResultSet from '../ResultSet';\nimport HighlightedSql from '../HighlightedSql';\nimport { StaticPosition, verticalAlign, StyledTooltip } from './styles';\n\ninterface QueryTableQuery\n  extends Omit<QueryResponse, 'state' | 'sql' | 'progress' | 'results'> {\n  state?: Record<string, any>;\n  sql?: Record<string, any>;\n  progress?: Record<string, any>;\n  results?: Record<string, any>;\n}\n\ninterface QueryTableProps {\n  columns?: string[];\n  queries?: QueryResponse[];\n  onUserClicked?: Function;\n  onDbClicked?: Function;\n  displayLimit: number;\n  latestQueryId?: string | undefined;\n}\n\nconst openQuery = (id: number) => {\n  const url = `/sqllab?queryId=${id}`;\n  window.open(url);\n};\n\nconst QueryTable = ({\n  columns = ['started', 'duration', 'rows'],\n  queries = [],\n  onUserClicked = () => undefined,\n  onDbClicked = () => undefined,\n  displayLimit,\n  latestQueryId,\n}: QueryTableProps) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const QUERY_HISTORY_TABLE_HEADERS_LOCALIZED = {\n    state: t('State'),\n    started: t('Started'),\n    duration: t('Duration'),\n    progress: t('Progress'),\n    rows: t('Rows'),\n    sql: t('SQL'),\n    results: t('Results'),\n    actions: t('Actions'),\n  };\n\n  const setHeaders = (column: string) => {\n    if (column === 'sql') {\n      return column.toUpperCase();\n    }\n    return column.charAt(0).toUpperCase().concat(column.slice(1));\n  };\n\n  const columnsOfTable = useMemo(\n    () =>\n      columns.map(column => ({\n        accessor: column,\n        Header:\n          QUERY_HISTORY_TABLE_HEADERS_LOCALIZED[column] || setHeaders(column),\n        disableSortBy: true,\n      })),\n    [columns],\n  );\n\n  const user = useSelector<SqlLabRootState, User>(state => state.user);\n\n  const data = useMemo(() => {\n    const restoreSql = (query: QueryResponse) => {\n      dispatch(\n        queryEditorSetSql({ id: query.sqlEditorId }, query.sql, query.id),\n      );\n    };\n\n    const openQueryInNewTab = (query: QueryResponse) => {\n      dispatch(cloneQueryToNewTab(query, true));\n    };\n\n    const openAsyncResults = (query: QueryResponse, displayLimit: number) => {\n      dispatch(fetchQueryResults(query, displayLimit));\n    };\n\n    const statusAttributes = {\n      success: {\n        config: {\n          icon: <Icons.Check iconColor={theme.colors.success.base} />,\n          label: t('Success'),\n        },\n      },\n      failed: {\n        config: {\n          icon: <Icons.XSmall iconColor={theme.colors.error.base} />,\n          label: t('Failed'),\n        },\n      },\n      stopped: {\n        config: {\n          icon: <Icons.XSmall iconColor={theme.colors.error.base} />,\n          label: t('Failed'),\n        },\n      },\n      running: {\n        config: {\n          icon: <Icons.Running iconColor={theme.colors.primary.base} />,\n          label: t('Running'),\n        },\n      },\n      fetching: {\n        config: {\n          icon: <Icons.Queued iconColor={theme.colors.primary.base} />,\n          label: t('Fetching'),\n        },\n      },\n      timed_out: {\n        config: {\n          icon: <Icons.Offline iconColor={theme.colors.grayscale.light1} />,\n          label: t('Offline'),\n        },\n      },\n      scheduled: {\n        config: {\n          icon: <Icons.Queued iconColor={theme.colors.grayscale.base} />,\n          label: t('Scheduled'),\n        },\n      },\n      pending: {\n        config: {\n          icon: <Icons.Queued iconColor={theme.colors.grayscale.base} />,\n          label: t('Scheduled'),\n        },\n      },\n      error: {\n        config: {\n          icon: <Icons.Error iconColor={theme.colors.error.base} />,\n          label: t('Unknown Status'),\n        },\n      },\n    };\n\n    return queries\n      .map(query => {\n        const { state, sql, progress, ...rest } = query;\n        const q = rest as QueryTableQuery;\n\n        const status = statusAttributes[state] || statusAttributes.error;\n\n        if (q.endDttm) {\n          q.duration = fDuration(q.startDttm, q.endDttm);\n        }\n        const time = moment(q.startDttm).format().split('T');\n        q.time = (\n          <div>\n            <span>\n              {time[0]} <br /> {time[1]}\n            </span>\n          </div>\n        );\n        q.user = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => onUserClicked(q.userId)}\n          >\n            {q.user}\n          </Button>\n        );\n        q.db = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => onDbClicked(q.dbId)}\n          >\n            {q.db}\n          </Button>\n        );\n        q.started = moment(q.startDttm).format('L HH:mm:ss');\n        q.querylink = (\n          <Button\n            buttonSize=\"small\"\n            buttonStyle=\"link\"\n            onClick={() => openQuery(q.queryId)}\n          >\n            <i className=\"fa fa-external-link m-r-3\" />\n            {t('Edit')}\n          </Button>\n        );\n        q.sql = (\n          <Card css={[StaticPosition]}>\n            <HighlightedSql\n              sql={sql}\n              rawSql={q.executedSql}\n              shrink\n              maxWidth={60}\n            />\n          </Card>\n        );\n        if (q.resultsKey) {\n          q.results = (\n            <ModalTrigger\n              className=\"ResultsModal\"\n              triggerNode={\n                <Label type=\"info\" className=\"pointer\">\n                  {t('View')}\n                </Label>\n              }\n              modalTitle={t('Data preview')}\n              beforeOpen={() => openAsyncResults(query, displayLimit)}\n              onExit={() => dispatch(clearQueryResults(query))}\n              modalBody={\n                <ResultSet\n                  showSql\n                  queryId={query.id}\n                  height={400}\n                  displayLimit={displayLimit}\n                  defaultQueryLimit={1000}\n                />\n              }\n              responsive\n            />\n          );\n        } else {\n          q.results = <></>;\n        }\n\n        q.progress =\n          state === 'success' ? (\n            <ProgressBar\n              percent={parseInt(progress.toFixed(0), 10)}\n              striped\n              showInfo={false}\n            />\n          ) : (\n            <ProgressBar percent={parseInt(progress.toFixed(0), 10)} striped />\n          );\n        q.state = (\n          <Tooltip title={status.config.label} placement=\"bottom\">\n            <span>{status.config.icon}</span>\n          </Tooltip>\n        );\n        q.actions = (\n          <div>\n            <StyledTooltip\n              onClick={() => restoreSql(query)}\n              tooltip={t(\n                'Overwrite text in the editor with a query on this table',\n              )}\n              placement=\"top\"\n            >\n              <Icons.Edit iconSize=\"xl\" />\n            </StyledTooltip>\n            <StyledTooltip\n              onClick={() => openQueryInNewTab(query)}\n              tooltip={t('Run query in a new tab')}\n              placement=\"top\"\n            >\n              <Icons.PlusCircleOutlined iconSize=\"xl\" css={verticalAlign} />\n            </StyledTooltip>\n            {q.id !== latestQueryId && (\n              <StyledTooltip\n                tooltip={t('Remove query from log')}\n                onClick={() => dispatch(removeQuery(query))}\n              >\n                <Icons.Trash iconSize=\"xl\" />\n              </StyledTooltip>\n            )}\n          </div>\n        );\n        return q;\n      })\n      .reverse();\n  }, [queries, onUserClicked, onDbClicked, user, displayLimit]);\n\n  return (\n    <div className=\"QueryTable\">\n      <TableView\n        columns={columnsOfTable}\n        data={data}\n        className=\"table-condensed\"\n        pageSize={50}\n      />\n    </div>\n  );\n};\n\nexport default QueryTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}