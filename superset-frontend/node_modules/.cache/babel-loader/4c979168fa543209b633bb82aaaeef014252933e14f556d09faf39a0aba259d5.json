{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { HexagonLayer } from 'deck.gl/typed';\nimport { t, CategoricalColorNamespace } from '@superset-ui/core';\nimport { commonLayerProps, getAggFunc } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { hexToRGB } from '../../utils/colors';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nfunction setTooltipContent(o) {\n  return _jsxs(\"div\", { className: \"deckgl-tooltip\", children: [\n    _jsx(TooltipRow, { label: t('Centroid (Longitude and Latitude): '), value: `(${o.coordinate[0]}, ${o.coordinate[1]})` }),\n    _jsx(TooltipRow\n    // eslint-disable-next-line prefer-template\n    , { label: t('Height') + ': ', value: `${o.object.elevationValue}` })] }\n  );\n}\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const colorScale = CategoricalColorNamespace.getScale(fd.color_scheme);\n  const colorRange = colorScale.\n  range().\n  map((color) => hexToRGB(color));\n  let data = payload.data.features;\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n  const aggFunc = getAggFunc(fd.js_agg_function, (p) => p == null ? void 0 : p.weight);\n  return new HexagonLayer({\n    id: `hex-layer-${fd.slice_id}`,\n    data,\n    radius: fd.grid_size,\n    extruded: fd.extruded,\n    colorRange,\n    outline: false,\n    // @ts-ignore\n    getElevationValue: aggFunc,\n    // @ts-ignore\n    getColorValue: aggFunc,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent)\n  });\n}\nfunction getPoints(data) {\n  return data.map((d) => d.position);\n}const _default =\ncreateDeckGLComponent(getLayer, getPoints);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(setTooltipContent, \"setTooltipContent\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Hex/Hex.tsx\");reactHotLoader.register(getLayer, \"getLayer\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Hex/Hex.tsx\");reactHotLoader.register(getPoints, \"getPoints\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Hex/Hex.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Hex/Hex.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["HexagonLayer","t","CategoricalColorNamespace","commonLayerProps","getAggFunc","sandboxedEval","hexToRGB","createDeckGLComponent","TooltipRow","jsx","_jsx","jsxs","_jsxs","setTooltipContent","o","className","children","label","value","coordinate","object","elevationValue","getLayer","formData","payload","onAddFilter","setTooltip","fd","colorScale","getScale","color_scheme","colorRange","range","map","color","data","features","js_data_mutator","jsFnMutator","aggFunc","js_agg_function","p","weight","id","slice_id","radius","grid_size","extruded","outline","getElevationValue","getColorValue","getPoints","d","position","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/layers/Hex/Hex.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { HexagonLayer, Color } from 'deck.gl/typed';\nimport {\n  t,\n  CategoricalColorNamespace,\n  QueryFormData,\n  JsonObject,\n} from '@superset-ui/core';\n\nimport { commonLayerProps, getAggFunc } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { hexToRGB } from '../../utils/colors';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';\nimport { TooltipProps } from '../../components/Tooltip';\n\nfunction setTooltipContent(o: JsonObject) {\n  return (\n    <div className=\"deckgl-tooltip\">\n      <TooltipRow\n        label={t('Centroid (Longitude and Latitude): ')}\n        value={`(${o.coordinate[0]}, ${o.coordinate[1]})`}\n      />\n      <TooltipRow\n        // eslint-disable-next-line prefer-template\n        label={t('Height') + ': '}\n        value={`${o.object.elevationValue}`}\n      />\n    </div>\n  );\n}\n\nexport function getLayer(\n  formData: QueryFormData,\n  payload: JsonObject,\n  onAddFilter: () => void,\n  setTooltip: (tooltip: TooltipProps['tooltip']) => void,\n) {\n  const fd = formData;\n  const colorScale = CategoricalColorNamespace.getScale(fd.color_scheme);\n  const colorRange = colorScale\n    .range()\n    .map(color => hexToRGB(color)) as Color[];\n  let data = payload.data.features;\n\n  if (fd.js_data_mutator) {\n    // Applying user defined data mutator if defined\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n  const aggFunc = getAggFunc(fd.js_agg_function, p => p?.weight);\n\n  return new HexagonLayer({\n    id: `hex-layer-${fd.slice_id}` as const,\n    data,\n    radius: fd.grid_size,\n    extruded: fd.extruded,\n    colorRange,\n    outline: false,\n    // @ts-ignore\n    getElevationValue: aggFunc,\n    // @ts-ignore\n    getColorValue: aggFunc,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent),\n  });\n}\n\nfunction getPoints(data: JsonObject[]) {\n  return data.map(d => d.position);\n}\n\nexport default createDeckGLComponent(getLayer, getPoints);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}