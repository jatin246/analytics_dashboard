{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/no-array-index-key, react/jsx-no-bind */\nimport dist from 'distributions';\nimport { Component } from 'react';\nimport { Table, Tr, Td, Thead, Th } from 'reactable';\nimport PropTypes from 'prop-types';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nexport const dataPropType = PropTypes.arrayOf(\n  PropTypes.shape({\n    group: PropTypes.arrayOf(PropTypes.string),\n    values: PropTypes.arrayOf(\n      PropTypes.shape({\n        x: PropTypes.number,\n        y: PropTypes.number\n      })\n    )\n  })\n);\n\nconst propTypes = {\n  alpha: PropTypes.number,\n  data: dataPropType.isRequired,\n  groups: PropTypes.arrayOf(PropTypes.string).isRequired,\n  liftValPrec: PropTypes.number,\n  metric: PropTypes.string.isRequired,\n  pValPrec: PropTypes.number\n};\n\nconst defaultProps = {\n  alpha: 0.05,\n  liftValPrec: 4,\n  pValPrec: 6\n};\n\nclass TTestTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      control: 0,\n      liftValues: [],\n      pValues: []\n    };\n  }\n\n  componentDidMount() {\n    const { control } = this.state;\n    this.computeTTest(control); // initially populate table\n  }\n\n  getLiftStatus(row) {\n    const { control, liftValues } = this.state;\n    // Get a css class name for coloring\n    if (row === control) {\n      return 'control';\n    }\n    const liftVal = liftValues[row];\n    if (Number.isNaN(liftVal) || !Number.isFinite(liftVal)) {\n      return 'invalid'; // infinite or NaN values\n    }\n\n    return liftVal >= 0 ? 'true' : 'false'; // green on true, red on false\n  }\n\n  getPValueStatus(row) {\n    const { control, pValues } = this.state;\n    if (row === control) {\n      return 'control';\n    }\n    const pVal = pValues[row];\n    if (Number.isNaN(pVal) || !Number.isFinite(pVal)) {\n      return 'invalid';\n    }\n\n    return ''; // p-values won't normally be colored\n  }\n\n  getSignificance(row) {\n    const { control, pValues } = this.state;\n    const { alpha } = this.props;\n    // Color significant as green, else red\n    if (row === control) {\n      return 'control';\n    }\n\n    // p-values significant below set threshold\n    return pValues[row] <= alpha;\n  }\n\n  computeLift(values, control) {\n    const { liftValPrec } = this.props;\n    // Compute the lift value between two time series\n    let sumValues = 0;\n    let sumControl = 0;\n    values.forEach((value, i) => {\n      sumValues += value.y;\n      sumControl += control[i].y;\n    });\n\n    return ((sumValues - sumControl) / sumControl * 100).toFixed(liftValPrec);\n  }\n\n  computePValue(values, control) {\n    const { pValPrec } = this.props;\n    // Compute the p-value from Student's t-test\n    // between two time series\n    let diffSum = 0;\n    let diffSqSum = 0;\n    let finiteCount = 0;\n    values.forEach((value, i) => {\n      const diff = control[i].y - value.y;\n      /* eslint-disable-next-line */\n      if (isFinite(diff)) {\n        finiteCount += 1;\n        diffSum += diff;\n        diffSqSum += diff * diff;\n      }\n    });\n    const tvalue = -Math.abs(\n      diffSum *\n      Math.sqrt(\n        (finiteCount - 1) / (finiteCount * diffSqSum - diffSum * diffSum)\n      )\n    );\n    try {\n      return (2 * new dist.Studentt(finiteCount - 1).cdf(tvalue)).toFixed(\n        pValPrec\n      ); // two-sided test\n    } catch (error) {\n      return NaN;\n    }\n  }\n\n  computeTTest(control) {\n    // Compute lift and p-values for each row\n    // against the selected control\n    const { data } = this.props;\n    const pValues = [];\n    const liftValues = [];\n    if (!data) {\n      return;\n    }\n    for (let i = 0; i < data.length; i += 1) {\n      if (i === control) {\n        pValues.push('control');\n        liftValues.push('control');\n      } else {\n        pValues.push(this.computePValue(data[i].values, data[control].values));\n        liftValues.push(this.computeLift(data[i].values, data[control].values));\n      }\n    }\n    this.setState({ control, liftValues, pValues });\n  }\n\n  render() {\n    const { data, metric, groups } = this.props;\n    const { control, liftValues, pValues } = this.state;\n\n    if (!Array.isArray(groups) || groups.length === 0) {\n      throw Error('Group by param is required');\n    }\n\n    // Render column header for each group\n    const columns = groups.map((group, i) =>\n    _jsx(Th, { column: group, children:\n      group }, i\n    )\n    );\n    const numGroups = groups.length;\n    // Columns for p-value, lift-value, and significance (true/false)\n    columns.push(\n      _jsx(Th, { column: \"pValue\", children: \"p-value\" }, numGroups + 1\n\n      )\n    );\n    columns.push(\n      _jsx(Th, { column: \"liftValue\", children: \"Lift %\" }, numGroups + 2\n\n      )\n    );\n    columns.push(\n      _jsx(Th, { column: \"significant\", children: \"Significant\" }, numGroups + 3\n\n      )\n    );\n    const rows = data.map((entry, i) => {\n      const values = groups.map(\n        (\n        group,\n        j // group names\n        ) => _jsx(Td, { column: group, data: entry.group[j] }, j)\n      );\n      values.push(\n        _jsx(Td, {\n\n          className: this.getPValueStatus(i),\n          column: \"pValue\",\n          data: pValues[i] }, numGroups + 1\n        )\n      );\n      values.push(\n        _jsx(Td, {\n\n          className: this.getLiftStatus(i),\n          column: \"liftValue\",\n          data: liftValues[i] }, numGroups + 2\n        )\n      );\n      values.push(\n        _jsx(Td, {\n\n          className: this.getSignificance(i).toString(),\n          column: \"significant\",\n          data: this.getSignificance(i) }, numGroups + 3\n        )\n      );\n\n      return (\n        _jsx(Tr, {\n\n          className: i === control ? 'control' : '',\n          onClick: this.computeTTest.bind(this, i), children:\n\n          values }, i\n        ));\n\n    });\n    // When sorted ascending, 'control' will always be at top\n    const sortConfig = groups.concat([\n    {\n      column: 'pValue',\n      sortFunction: (a, b) => {\n        if (a === 'control') {\n          return -1;\n        }\n        if (b === 'control') {\n          return 1;\n        }\n\n        return a > b ? 1 : -1; // p-values ascending\n      }\n    },\n    {\n      column: 'liftValue',\n      sortFunction: (a, b) => {\n        if (a === 'control') {\n          return -1;\n        }\n        if (b === 'control') {\n          return 1;\n        }\n\n        return parseFloat(a) > parseFloat(b) ? -1 : 1; // lift values descending\n      }\n    },\n    {\n      column: 'significant',\n      sortFunction: (a, b) => {\n        if (a === 'control') {\n          return -1;\n        }\n        if (b === 'control') {\n          return 1;\n        }\n\n        return a > b ? -1 : 1; // significant values first\n      }\n    }]\n    );\n\n    return (\n      _jsxs(\"div\", { children: [\n        _jsx(\"h3\", { children: metric }),\n        _jsxs(Table, { className: \"table\", id: `table_${metric}`, sortable: sortConfig, children: [\n          _jsx(Thead, { children: columns }),\n          rows] }\n        )] }\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nTTestTable.propTypes = propTypes;\nTTestTable.defaultProps = defaultProps;const _default =\n\nTTestTable;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(dataPropType, \"dataPropType\", \"/app/superset-frontend/plugins/legacy-plugin-chart-paired-t-test/src/TTestTable.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/plugins/legacy-plugin-chart-paired-t-test/src/TTestTable.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/plugins/legacy-plugin-chart-paired-t-test/src/TTestTable.jsx\");reactHotLoader.register(TTestTable, \"TTestTable\", \"/app/superset-frontend/plugins/legacy-plugin-chart-paired-t-test/src/TTestTable.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/plugins/legacy-plugin-chart-paired-t-test/src/TTestTable.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["dist","Component","Table","Tr","Td","Thead","Th","PropTypes","jsx","_jsx","jsxs","_jsxs","dataPropType","arrayOf","shape","group","string","values","x","number","y","propTypes","alpha","data","isRequired","groups","liftValPrec","metric","pValPrec","defaultProps","TTestTable","constructor","props","state","control","liftValues","pValues","componentDidMount","computeTTest","getLiftStatus","row","liftVal","Number","isNaN","isFinite","getPValueStatus","pVal","getSignificance","computeLift","sumValues","sumControl","forEach","value","i","toFixed","computePValue","diffSum","diffSqSum","finiteCount","diff","tvalue","Math","abs","sqrt","Studentt","cdf","error","NaN","length","push","setState","render","Array","isArray","Error","columns","map","column","children","numGroups","rows","entry","j","className","toString","onClick","bind","sortConfig","concat","sortFunction","a","b","parseFloat","id","sortable","__reactstandin__regenerateByEval","key","code","eval","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/legacy-plugin-chart-paired-t-test/src/TTestTable.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/no-array-index-key, react/jsx-no-bind */\nimport dist from 'distributions';\nimport { Component } from 'react';\nimport { Table, Tr, Td, Thead, Th } from 'reactable';\nimport PropTypes from 'prop-types';\n\nexport const dataPropType = PropTypes.arrayOf(\n  PropTypes.shape({\n    group: PropTypes.arrayOf(PropTypes.string),\n    values: PropTypes.arrayOf(\n      PropTypes.shape({\n        x: PropTypes.number,\n        y: PropTypes.number,\n      }),\n    ),\n  }),\n);\n\nconst propTypes = {\n  alpha: PropTypes.number,\n  data: dataPropType.isRequired,\n  groups: PropTypes.arrayOf(PropTypes.string).isRequired,\n  liftValPrec: PropTypes.number,\n  metric: PropTypes.string.isRequired,\n  pValPrec: PropTypes.number,\n};\n\nconst defaultProps = {\n  alpha: 0.05,\n  liftValPrec: 4,\n  pValPrec: 6,\n};\n\nclass TTestTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      control: 0,\n      liftValues: [],\n      pValues: [],\n    };\n  }\n\n  componentDidMount() {\n    const { control } = this.state;\n    this.computeTTest(control); // initially populate table\n  }\n\n  getLiftStatus(row) {\n    const { control, liftValues } = this.state;\n    // Get a css class name for coloring\n    if (row === control) {\n      return 'control';\n    }\n    const liftVal = liftValues[row];\n    if (Number.isNaN(liftVal) || !Number.isFinite(liftVal)) {\n      return 'invalid'; // infinite or NaN values\n    }\n\n    return liftVal >= 0 ? 'true' : 'false'; // green on true, red on false\n  }\n\n  getPValueStatus(row) {\n    const { control, pValues } = this.state;\n    if (row === control) {\n      return 'control';\n    }\n    const pVal = pValues[row];\n    if (Number.isNaN(pVal) || !Number.isFinite(pVal)) {\n      return 'invalid';\n    }\n\n    return ''; // p-values won't normally be colored\n  }\n\n  getSignificance(row) {\n    const { control, pValues } = this.state;\n    const { alpha } = this.props;\n    // Color significant as green, else red\n    if (row === control) {\n      return 'control';\n    }\n\n    // p-values significant below set threshold\n    return pValues[row] <= alpha;\n  }\n\n  computeLift(values, control) {\n    const { liftValPrec } = this.props;\n    // Compute the lift value between two time series\n    let sumValues = 0;\n    let sumControl = 0;\n    values.forEach((value, i) => {\n      sumValues += value.y;\n      sumControl += control[i].y;\n    });\n\n    return (((sumValues - sumControl) / sumControl) * 100).toFixed(liftValPrec);\n  }\n\n  computePValue(values, control) {\n    const { pValPrec } = this.props;\n    // Compute the p-value from Student's t-test\n    // between two time series\n    let diffSum = 0;\n    let diffSqSum = 0;\n    let finiteCount = 0;\n    values.forEach((value, i) => {\n      const diff = control[i].y - value.y;\n      /* eslint-disable-next-line */\n      if (isFinite(diff)) {\n        finiteCount += 1;\n        diffSum += diff;\n        diffSqSum += diff * diff;\n      }\n    });\n    const tvalue = -Math.abs(\n      diffSum *\n        Math.sqrt(\n          (finiteCount - 1) / (finiteCount * diffSqSum - diffSum * diffSum),\n        ),\n    );\n    try {\n      return (2 * new dist.Studentt(finiteCount - 1).cdf(tvalue)).toFixed(\n        pValPrec,\n      ); // two-sided test\n    } catch (error) {\n      return NaN;\n    }\n  }\n\n  computeTTest(control) {\n    // Compute lift and p-values for each row\n    // against the selected control\n    const { data } = this.props;\n    const pValues = [];\n    const liftValues = [];\n    if (!data) {\n      return;\n    }\n    for (let i = 0; i < data.length; i += 1) {\n      if (i === control) {\n        pValues.push('control');\n        liftValues.push('control');\n      } else {\n        pValues.push(this.computePValue(data[i].values, data[control].values));\n        liftValues.push(this.computeLift(data[i].values, data[control].values));\n      }\n    }\n    this.setState({ control, liftValues, pValues });\n  }\n\n  render() {\n    const { data, metric, groups } = this.props;\n    const { control, liftValues, pValues } = this.state;\n\n    if (!Array.isArray(groups) || groups.length === 0) {\n      throw Error('Group by param is required');\n    }\n\n    // Render column header for each group\n    const columns = groups.map((group, i) => (\n      <Th key={i} column={group}>\n        {group}\n      </Th>\n    ));\n    const numGroups = groups.length;\n    // Columns for p-value, lift-value, and significance (true/false)\n    columns.push(\n      <Th key={numGroups + 1} column=\"pValue\">\n        p-value\n      </Th>,\n    );\n    columns.push(\n      <Th key={numGroups + 2} column=\"liftValue\">\n        Lift %\n      </Th>,\n    );\n    columns.push(\n      <Th key={numGroups + 3} column=\"significant\">\n        Significant\n      </Th>,\n    );\n    const rows = data.map((entry, i) => {\n      const values = groups.map(\n        (\n          group,\n          j, // group names\n        ) => <Td key={j} column={group} data={entry.group[j]} />,\n      );\n      values.push(\n        <Td\n          key={numGroups + 1}\n          className={this.getPValueStatus(i)}\n          column=\"pValue\"\n          data={pValues[i]}\n        />,\n      );\n      values.push(\n        <Td\n          key={numGroups + 2}\n          className={this.getLiftStatus(i)}\n          column=\"liftValue\"\n          data={liftValues[i]}\n        />,\n      );\n      values.push(\n        <Td\n          key={numGroups + 3}\n          className={this.getSignificance(i).toString()}\n          column=\"significant\"\n          data={this.getSignificance(i)}\n        />,\n      );\n\n      return (\n        <Tr\n          key={i}\n          className={i === control ? 'control' : ''}\n          onClick={this.computeTTest.bind(this, i)}\n        >\n          {values}\n        </Tr>\n      );\n    });\n    // When sorted ascending, 'control' will always be at top\n    const sortConfig = groups.concat([\n      {\n        column: 'pValue',\n        sortFunction: (a, b) => {\n          if (a === 'control') {\n            return -1;\n          }\n          if (b === 'control') {\n            return 1;\n          }\n\n          return a > b ? 1 : -1; // p-values ascending\n        },\n      },\n      {\n        column: 'liftValue',\n        sortFunction: (a, b) => {\n          if (a === 'control') {\n            return -1;\n          }\n          if (b === 'control') {\n            return 1;\n          }\n\n          return parseFloat(a) > parseFloat(b) ? -1 : 1; // lift values descending\n        },\n      },\n      {\n        column: 'significant',\n        sortFunction: (a, b) => {\n          if (a === 'control') {\n            return -1;\n          }\n          if (b === 'control') {\n            return 1;\n          }\n\n          return a > b ? -1 : 1; // significant values first\n        },\n      },\n    ]);\n\n    return (\n      <div>\n        <h3>{metric}</h3>\n        <Table className=\"table\" id={`table_${metric}`} sortable={sortConfig}>\n          <Thead>{columns}</Thead>\n          {rows}\n        </Table>\n      </div>\n    );\n  }\n}\n\nTTestTable.propTypes = propTypes;\nTTestTable.defaultProps = defaultProps;\n\nexport default TTestTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}