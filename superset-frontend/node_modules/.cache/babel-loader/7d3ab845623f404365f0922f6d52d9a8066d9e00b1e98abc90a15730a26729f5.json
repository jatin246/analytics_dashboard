{"ast":null,"code":"import _isString from \"lodash/isString\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DatasourceType,\n  SupersetClient,\n  styled,\n  t,\n  withTheme } from\n'@superset-ui/core';\nimport { getTemporalColumns } from '@superset-ui/chart-controls';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport {\n  ChangeDatasourceModal,\n  DatasourceModal } from\n'src/components/Datasource';\nimport Button from 'src/components/Button';\nimport ErrorAlert from 'src/components/ErrorMessage/ErrorAlert';\nimport WarningIconWithTooltip from 'src/components/WarningIconWithTooltip';\nimport { URL_PARAMS } from 'src/constants';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport {\n  userHasPermission,\n  isUserAdmin } from\n'src/dashboard/util/permissionUtils';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport ViewQueryModalFooter from 'src/explore/components/controls/ViewQueryModalFooter';\nimport ViewQuery from 'src/explore/components/controls/ViewQuery';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { safeStringify } from 'src/utils/safeStringify';\n\nimport { Link } from 'react-router-dom';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  datasource: PropTypes.object.isRequired,\n  form_data: PropTypes.object.isRequired,\n  isEditable: PropTypes.bool,\n  onDatasourceSave: PropTypes.func\n};\n\nconst defaultProps = {\n  onChange: () => {},\n  onDatasourceSave: null,\n  value: null,\n  isEditable: true\n};\n\nconst Styles = styled.div`\n  .data-container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    padding: ${({ theme }) => 4 * theme.gridUnit}px;\n    padding-right: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n  .error-alert {\n    margin: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n  .ant-dropdown-trigger {\n    margin-left: ${({ theme }) => 2 * theme.gridUnit}px;\n    box-shadow: none;\n    &:active {\n      box-shadow: none;\n    }\n  }\n  .btn-group .open .dropdown-toggle {\n    box-shadow: none;\n    &.button-default {\n      background: none;\n    }\n  }\n  i.angle {\n    color: ${({ theme }) => theme.colors.primary.base};\n  }\n  svg.datasource-modal-trigger {\n    color: ${({ theme }) => theme.colors.primary.base};\n    cursor: pointer;\n  }\n  .title-select {\n    flex: 1 1 100%;\n    display: inline-block;\n    background-color: ${({ theme }) => theme.colors.grayscale.light3};\n    padding: ${({ theme }) => theme.gridUnit * 2}px;\n    border-radius: ${({ theme }) => theme.borderRadius}px;\n    text-align: center;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n  .datasource-svg {\n    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;\n    flex: none;\n  }\n  span[aria-label='dataset-physical'] {\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n  span[aria-label='more-vert'] {\n    color: ${({ theme }) => theme.colors.primary.base};\n  }\n`;\n\nconst CHANGE_DATASET = 'change_dataset';\nconst VIEW_IN_SQL_LAB = 'view_in_sql_lab';\nconst EDIT_DATASET = 'edit_dataset';\nconst QUERY_PREVIEW = 'query_preview';\nconst SAVE_AS_DATASET = 'save_as_dataset';\n\n// If the string is longer than this value's number characters we add\n// a tooltip for user can see the full name by hovering over the visually truncated string in UI\nconst VISIBLE_TITLE_LENGTH = 25;\n\n// Assign icon for each DatasourceType.  If no icon assingment is found in the lookup, no icon will render\nexport const datasourceIconLookup = {\n  [DatasourceType.Query]:\n  _jsx(Icons.ConsoleSqlOutlined, { className: \"datasource-svg\" }),\n\n  [DatasourceType.Table]: _jsx(Icons.DatasetPhysical, { className: \"datasource-svg\" })\n};\n\n// Render title for datasource with tooltip only if text is longer than VISIBLE_TITLE_LENGTH\nexport const renderDatasourceTitle = (displayString, tooltip) =>\n(displayString == null ? void 0 : displayString.length) > VISIBLE_TITLE_LENGTH ?\n// Add a tooltip only for long names that will be visually truncated\n_jsx(Tooltip, { title: tooltip, children:\n  _jsx(\"span\", { className: \"title-select\", children: displayString }) }\n) :\n\n_jsx(\"span\", { title: tooltip, className: \"title-select\", children:\n  displayString }\n);\n\n\n// Different data source types use different attributes for the display title\nexport const getDatasourceTitle = (datasource) => {\n  if ((datasource == null ? void 0 : datasource.type) === 'query') return datasource == null ? void 0 : datasource.sql;\n  return (datasource == null ? void 0 : datasource.name) || '';\n};\n\nconst preventRouterLinkWhileMetaClicked = (evt) => {\n  if (evt.metaKey) {\n    evt.preventDefault();\n  } else {\n    evt.stopPropagation();\n  }\n};\n\nclass DatasourceControl extends PureComponent {\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n    onDatasourceSave = (datasource) => {var _this$props$form_data, _columns$find, _columns$find2;\n      this.props.actions.changeDatasource(datasource);\n      const { temporalColumns, defaultTemporalColumn } =\n      getTemporalColumns(datasource);\n      const { columns } = datasource;\n      // the current granularity_sqla might not be a temporal column anymore\n      const timeCol = (_this$props$form_data = this.props.form_data) == null ? void 0 : _this$props$form_data.granularity_sqla;\n      const isGranularitySqalTemporal = (_columns$find = columns.find(\n        ({ column_name }) => column_name === timeCol\n      )) == null ? void 0 : _columns$find.is_dttm;\n      // the current main_dttm_col might not be a temporal column anymore\n      const isDefaultTemporal = (_columns$find2 = columns.find(\n        ({ column_name }) => column_name === defaultTemporalColumn\n      )) == null ? void 0 : _columns$find2.is_dttm;\n\n      // if the current granularity_sqla is empty or it is not a temporal column anymore\n      // let's update the control value\n      if (datasource.type === 'table' && !isGranularitySqalTemporal) {\n        const temporalColumn = isDefaultTemporal ?\n        defaultTemporalColumn :\n        temporalColumns == null ? void 0 : temporalColumns[0];\n        this.props.actions.setControlValue(\n          'granularity_sqla',\n          temporalColumn || null\n        );\n      }\n\n      if (this.props.onDatasourceSave) {\n        this.props.onDatasourceSave(datasource);\n      }\n    };this.\n\n    toggleShowDatasource = () => {\n      this.setState(({ showDatasource }) => ({\n        showDatasource: !showDatasource\n      }));\n    };this.\n\n    toggleChangeDatasourceModal = () => {\n      this.setState(({ showChangeDatasourceModal }) => ({\n        showChangeDatasourceModal: !showChangeDatasourceModal\n      }));\n    };this.\n\n    toggleEditDatasourceModal = () => {\n      this.setState(({ showEditDatasourceModal }) => ({\n        showEditDatasourceModal: !showEditDatasourceModal\n      }));\n    };this.\n\n    toggleSaveDatasetModal = () => {\n      this.setState(({ showSaveDatasetModal }) => ({\n        showSaveDatasetModal: !showSaveDatasetModal\n      }));\n    };this.\n\n    handleMenuItemClick = ({ key }) => {\n      switch (key) {\n        case CHANGE_DATASET:\n          this.toggleChangeDatasourceModal();\n          break;\n\n        case EDIT_DATASET:\n          this.toggleEditDatasourceModal();\n          break;\n\n        case VIEW_IN_SQL_LAB:\n          {\n            const { datasource } = this.props;\n            const payload = {\n              datasourceKey: `${datasource.id}__${datasource.type}`,\n              sql: datasource.sql\n            };\n            SupersetClient.postForm('/sqllab/', {\n              form_data: safeStringify(payload)\n            });\n          }\n          break;\n\n        case SAVE_AS_DATASET:\n          this.toggleSaveDatasetModal();\n          break;\n\n        default:\n          break;\n      }\n    };this.state = { showEditDatasourceModal: false, showChangeDatasourceModal: false, showSaveDatasetModal: false };}\n\n  render() {var _datasource$owners, _extra;\n    const {\n      showChangeDatasourceModal,\n      showEditDatasourceModal,\n      showSaveDatasetModal\n    } = this.state;\n    const { datasource, onChange, theme } = this.props;\n    const isMissingDatasource = !(datasource != null && datasource.id);\n    let isMissingParams = false;\n    if (isMissingDatasource) {\n      const datasourceId = getUrlParam(URL_PARAMS.datasourceId);\n      const sliceId = getUrlParam(URL_PARAMS.sliceId);\n\n      if (!datasourceId && !sliceId) {\n        isMissingParams = true;\n      }\n    }\n\n    const { user } = this.props;\n    const allowEdit =\n    ((_datasource$owners = datasource.owners) == null ? void 0 : _datasource$owners.map((o) => o.id || o.value).includes(user.userId)) ||\n    isUserAdmin(user);\n\n    const canAccessSqlLab = userHasPermission(user, 'SQL Lab', 'menu_access');\n\n    const editText = t('Edit dataset');\n    const requestedQuery = {\n      datasourceKey: `${datasource.id}__${datasource.type}`,\n      sql: datasource.sql\n    };\n\n    const defaultDatasourceMenu =\n    _jsxs(Menu, { onClick: this.handleMenuItemClick, children: [\n      this.props.isEditable && !isMissingDatasource &&\n      _jsx(Menu.Item, {\n\n        \"data-test\": \"edit-dataset\",\n        disabled: !allowEdit, children:\n\n        !allowEdit ?\n        _jsx(Tooltip, {\n          title: t(\n            'You must be a dataset owner in order to edit. Please reach out to a dataset owner to request modifications or edit access.'\n          ), children:\n\n          editText }\n        ) :\n\n        editText }, EDIT_DATASET\n\n      ),\n\n      _jsx(Menu.Item, { children: t('Swap dataset') }, CHANGE_DATASET),\n      !isMissingDatasource && canAccessSqlLab &&\n      _jsx(Menu.Item, { children:\n        _jsx(Link, {\n          to: {\n            pathname: '/sqllab',\n            state: { requestedQuery }\n          },\n          onClick: preventRouterLinkWhileMetaClicked, children:\n\n          t('View in SQL Lab') }\n        ) }, VIEW_IN_SQL_LAB\n      )] }\n\n    );\n\n\n    const queryDatasourceMenu =\n    _jsxs(Menu, { onClick: this.handleMenuItemClick, children: [\n      _jsx(Menu.Item, { children:\n        _jsx(ModalTrigger, {\n          triggerNode:\n          _jsx(\"span\", { \"data-test\": \"view-query-menu-item\", children: t('Query preview') }),\n\n          modalTitle: t('Query preview'),\n          modalBody:\n          _jsx(ViewQuery, {\n            sql: (datasource == null ? void 0 : datasource.sql) || (datasource == null ? void 0 : datasource.select_star) || '' }\n          ),\n\n          modalFooter:\n          _jsx(ViewQueryModalFooter, {\n            changeDatasource: this.toggleSaveDatasetModal,\n            datasource: datasource }\n          ),\n\n          draggable: false,\n          resizable: false,\n          responsive: true }\n        ) }, QUERY_PREVIEW\n      ),\n      canAccessSqlLab &&\n      _jsx(Menu.Item, { children:\n        _jsx(Link, {\n          to: {\n            pathname: '/sqllab',\n            state: { requestedQuery }\n          },\n          onClick: preventRouterLinkWhileMetaClicked, children:\n\n          t('View in SQL Lab') }\n        ) }, VIEW_IN_SQL_LAB\n      ),\n\n      _jsx(Menu.Item, { children: t('Save as dataset') }, SAVE_AS_DATASET)] }\n    );\n\n\n    const { health_check_message: healthCheckMessage } = datasource;\n\n    let extra;\n    if (datasource != null && datasource.extra) {\n      if (_isString(datasource.extra)) {\n        try {\n          extra = JSON.parse(datasource.extra);\n        } catch {} // eslint-disable-line no-empty\n      } else {\n        extra = datasource.extra; // eslint-disable-line prefer-destructuring\n      }\n    }\n\n    const titleText = isMissingDatasource ?\n    t('Missing dataset') :\n    getDatasourceTitle(datasource);\n\n    const tooltip = titleText;\n\n    return (\n      _jsxs(Styles, { \"data-test\": \"datasource-control\", className: \"DatasourceControl\", children: [\n        _jsxs(\"div\", { className: \"data-container\", children: [\n          datasourceIconLookup[datasource == null ? void 0 : datasource.type],\n          renderDatasourceTitle(titleText, tooltip),\n          healthCheckMessage &&\n          _jsx(Tooltip, { title: healthCheckMessage, children:\n            _jsx(Icons.AlertSolid, { iconColor: theme.colors.warning.base }) }\n          ),\n\n          ((_extra = extra) == null ? void 0 : _extra.warning_markdown) &&\n          _jsx(WarningIconWithTooltip, { warningMarkdown: extra.warning_markdown }),\n\n          _jsx(AntdDropdown, {\n            overlay:\n            datasource.type === DatasourceType.Query ?\n            queryDatasourceMenu :\n            defaultDatasourceMenu,\n\n            trigger: ['click'],\n            \"data-test\": \"datasource-menu\", children:\n\n            _jsx(Icons.MoreVert, {\n              className: \"datasource-modal-trigger\",\n              \"data-test\": \"datasource-menu-trigger\" }\n            ) }\n          )] }\n        ),\n\n        isMissingDatasource && isMissingParams &&\n        _jsx(\"div\", { className: \"error-alert\", children:\n          _jsx(ErrorAlert, {\n            level: \"warning\",\n            title: t('Missing URL parameters'),\n            source: \"explore\",\n            subtitle:\n            _jsx(_Fragment, { children:\n              _jsx(\"p\", { children:\n                t(\n                  'The URL is missing the dataset_id or slice_id parameters.'\n                ) }\n              ) }\n            ) }\n\n          ) }\n        ),\n\n        isMissingDatasource && !isMissingParams &&\n        _jsx(\"div\", { className: \"error-alert\", children:\n          _jsx(ErrorAlert, {\n            level: \"warning\",\n            title: t('Missing dataset'),\n            source: \"explore\",\n            subtitle:\n            _jsxs(_Fragment, { children: [\n              _jsx(\"p\", { children:\n                t(\n                  'The dataset linked to this chart may have been deleted.'\n                ) }\n              ),\n              _jsx(\"p\", { children:\n                _jsx(Button, {\n                  buttonStyle: \"primary\",\n                  onClick: () =>\n                  this.handleMenuItemClick({ key: CHANGE_DATASET }), children:\n\n\n                  t('Swap dataset') }\n                ) }\n              )] }\n            ) }\n\n          ) }\n        ),\n\n        showEditDatasourceModal &&\n        _jsx(DatasourceModal, {\n          datasource: datasource,\n          show: showEditDatasourceModal,\n          onDatasourceSave: this.onDatasourceSave,\n          onHide: this.toggleEditDatasourceModal }\n        ),\n\n        showChangeDatasourceModal &&\n        _jsx(ChangeDatasourceModal, {\n          onDatasourceSave: this.onDatasourceSave,\n          onHide: this.toggleChangeDatasourceModal,\n          show: showChangeDatasourceModal,\n          onChange: onChange }\n        ),\n\n        showSaveDatasetModal &&\n        _jsx(SaveDatasetModal, {\n          visible: showSaveDatasetModal,\n          onHide: this.toggleSaveDatasetModal,\n          buttonTextOnSave: t('Save'),\n          buttonTextOnOverwrite: t('Overwrite'),\n          modalDescription: t(\n            'Save this query as a virtual dataset to continue exploring'\n          ),\n          datasource: getDatasourceAsSaveableDataset(datasource),\n          openWindow: false,\n          formData: this.props.form_data }\n        )] }\n\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDatasourceControl.propTypes = propTypes;\nDatasourceControl.defaultProps = defaultProps;const _default =\n\nwithTheme(DatasourceControl);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(Styles, \"Styles\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(CHANGE_DATASET, \"CHANGE_DATASET\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(VIEW_IN_SQL_LAB, \"VIEW_IN_SQL_LAB\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(EDIT_DATASET, \"EDIT_DATASET\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(QUERY_PREVIEW, \"QUERY_PREVIEW\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(SAVE_AS_DATASET, \"SAVE_AS_DATASET\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(VISIBLE_TITLE_LENGTH, \"VISIBLE_TITLE_LENGTH\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(datasourceIconLookup, \"datasourceIconLookup\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(renderDatasourceTitle, \"renderDatasourceTitle\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(getDatasourceTitle, \"getDatasourceTitle\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(preventRouterLinkWhileMetaClicked, \"preventRouterLinkWhileMetaClicked\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(DatasourceControl, \"DatasourceControl\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["PureComponent","PropTypes","DatasourceType","SupersetClient","styled","t","withTheme","getTemporalColumns","getUrlParam","AntdDropdown","Menu","Tooltip","Icons","ChangeDatasourceModal","DatasourceModal","Button","ErrorAlert","WarningIconWithTooltip","URL_PARAMS","getDatasourceAsSaveableDataset","userHasPermission","isUserAdmin","ModalTrigger","ViewQueryModalFooter","ViewQuery","SaveDatasetModal","safeStringify","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","propTypes","actions","object","isRequired","onChange","func","value","string","datasource","form_data","isEditable","bool","onDatasourceSave","defaultProps","Styles","div","theme","colors","grayscale","light2","gridUnit","primary","base","light3","borderRadius","CHANGE_DATASET","VIEW_IN_SQL_LAB","EDIT_DATASET","QUERY_PREVIEW","SAVE_AS_DATASET","VISIBLE_TITLE_LENGTH","datasourceIconLookup","Query","ConsoleSqlOutlined","className","Table","DatasetPhysical","renderDatasourceTitle","displayString","tooltip","length","title","children","getDatasourceTitle","type","sql","name","preventRouterLinkWhileMetaClicked","evt","metaKey","preventDefault","stopPropagation","DatasourceControl","constructor","props","_this$props$form_data","_columns$find","_columns$find2","changeDatasource","temporalColumns","defaultTemporalColumn","columns","timeCol","granularity_sqla","isGranularitySqalTemporal","find","column_name","is_dttm","isDefaultTemporal","temporalColumn","setControlValue","toggleShowDatasource","setState","showDatasource","toggleChangeDatasourceModal","showChangeDatasourceModal","toggleEditDatasourceModal","showEditDatasourceModal","toggleSaveDatasetModal","showSaveDatasetModal","handleMenuItemClick","key","payload","datasourceKey","id","postForm","state","render","_datasource$owners","_extra","isMissingDatasource","isMissingParams","datasourceId","sliceId","user","allowEdit","owners","map","o","includes","userId","canAccessSqlLab","editText","requestedQuery","defaultDatasourceMenu","onClick","Item","disabled","to","pathname","queryDatasourceMenu","triggerNode","modalTitle","modalBody","select_star","modalFooter","draggable","resizable","responsive","health_check_message","healthCheckMessage","extra","_isString","JSON","parse","titleText","AlertSolid","iconColor","warning","warning_markdown","warningMarkdown","overlay","trigger","MoreVert","level","source","subtitle","buttonStyle","show","onHide","visible","buttonTextOnSave","buttonTextOnOverwrite","modalDescription","openWindow","formData","__reactstandin__regenerateByEval","code","eval","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/controls/DatasourceControl/index.jsx"],"sourcesContent":["/* eslint-disable camelcase */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DatasourceType,\n  SupersetClient,\n  styled,\n  t,\n  withTheme,\n} from '@superset-ui/core';\nimport { getTemporalColumns } from '@superset-ui/chart-controls';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { AntdDropdown } from 'src/components';\nimport { Menu } from 'src/components/Menu';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport {\n  ChangeDatasourceModal,\n  DatasourceModal,\n} from 'src/components/Datasource';\nimport Button from 'src/components/Button';\nimport ErrorAlert from 'src/components/ErrorMessage/ErrorAlert';\nimport WarningIconWithTooltip from 'src/components/WarningIconWithTooltip';\nimport { URL_PARAMS } from 'src/constants';\nimport { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\nimport {\n  userHasPermission,\n  isUserAdmin,\n} from 'src/dashboard/util/permissionUtils';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport ViewQueryModalFooter from 'src/explore/components/controls/ViewQueryModalFooter';\nimport ViewQuery from 'src/explore/components/controls/ViewQuery';\nimport { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\nimport { safeStringify } from 'src/utils/safeStringify';\nimport { isString } from 'lodash';\nimport { Link } from 'react-router-dom';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  datasource: PropTypes.object.isRequired,\n  form_data: PropTypes.object.isRequired,\n  isEditable: PropTypes.bool,\n  onDatasourceSave: PropTypes.func,\n};\n\nconst defaultProps = {\n  onChange: () => {},\n  onDatasourceSave: null,\n  value: null,\n  isEditable: true,\n};\n\nconst Styles = styled.div`\n  .data-container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n    padding: ${({ theme }) => 4 * theme.gridUnit}px;\n    padding-right: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n  .error-alert {\n    margin: ${({ theme }) => 2 * theme.gridUnit}px;\n  }\n  .ant-dropdown-trigger {\n    margin-left: ${({ theme }) => 2 * theme.gridUnit}px;\n    box-shadow: none;\n    &:active {\n      box-shadow: none;\n    }\n  }\n  .btn-group .open .dropdown-toggle {\n    box-shadow: none;\n    &.button-default {\n      background: none;\n    }\n  }\n  i.angle {\n    color: ${({ theme }) => theme.colors.primary.base};\n  }\n  svg.datasource-modal-trigger {\n    color: ${({ theme }) => theme.colors.primary.base};\n    cursor: pointer;\n  }\n  .title-select {\n    flex: 1 1 100%;\n    display: inline-block;\n    background-color: ${({ theme }) => theme.colors.grayscale.light3};\n    padding: ${({ theme }) => theme.gridUnit * 2}px;\n    border-radius: ${({ theme }) => theme.borderRadius}px;\n    text-align: center;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n  .datasource-svg {\n    margin-right: ${({ theme }) => 2 * theme.gridUnit}px;\n    flex: none;\n  }\n  span[aria-label='dataset-physical'] {\n    color: ${({ theme }) => theme.colors.grayscale.base};\n  }\n  span[aria-label='more-vert'] {\n    color: ${({ theme }) => theme.colors.primary.base};\n  }\n`;\n\nconst CHANGE_DATASET = 'change_dataset';\nconst VIEW_IN_SQL_LAB = 'view_in_sql_lab';\nconst EDIT_DATASET = 'edit_dataset';\nconst QUERY_PREVIEW = 'query_preview';\nconst SAVE_AS_DATASET = 'save_as_dataset';\n\n// If the string is longer than this value's number characters we add\n// a tooltip for user can see the full name by hovering over the visually truncated string in UI\nconst VISIBLE_TITLE_LENGTH = 25;\n\n// Assign icon for each DatasourceType.  If no icon assingment is found in the lookup, no icon will render\nexport const datasourceIconLookup = {\n  [DatasourceType.Query]: (\n    <Icons.ConsoleSqlOutlined className=\"datasource-svg\" />\n  ),\n  [DatasourceType.Table]: <Icons.DatasetPhysical className=\"datasource-svg\" />,\n};\n\n// Render title for datasource with tooltip only if text is longer than VISIBLE_TITLE_LENGTH\nexport const renderDatasourceTitle = (displayString, tooltip) =>\n  displayString?.length > VISIBLE_TITLE_LENGTH ? (\n    // Add a tooltip only for long names that will be visually truncated\n    <Tooltip title={tooltip}>\n      <span className=\"title-select\">{displayString}</span>\n    </Tooltip>\n  ) : (\n    <span title={tooltip} className=\"title-select\">\n      {displayString}\n    </span>\n  );\n\n// Different data source types use different attributes for the display title\nexport const getDatasourceTitle = datasource => {\n  if (datasource?.type === 'query') return datasource?.sql;\n  return datasource?.name || '';\n};\n\nconst preventRouterLinkWhileMetaClicked = evt => {\n  if (evt.metaKey) {\n    evt.preventDefault();\n  } else {\n    evt.stopPropagation();\n  }\n};\n\nclass DatasourceControl extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showEditDatasourceModal: false,\n      showChangeDatasourceModal: false,\n      showSaveDatasetModal: false,\n    };\n  }\n\n  onDatasourceSave = datasource => {\n    this.props.actions.changeDatasource(datasource);\n    const { temporalColumns, defaultTemporalColumn } =\n      getTemporalColumns(datasource);\n    const { columns } = datasource;\n    // the current granularity_sqla might not be a temporal column anymore\n    const timeCol = this.props.form_data?.granularity_sqla;\n    const isGranularitySqalTemporal = columns.find(\n      ({ column_name }) => column_name === timeCol,\n    )?.is_dttm;\n    // the current main_dttm_col might not be a temporal column anymore\n    const isDefaultTemporal = columns.find(\n      ({ column_name }) => column_name === defaultTemporalColumn,\n    )?.is_dttm;\n\n    // if the current granularity_sqla is empty or it is not a temporal column anymore\n    // let's update the control value\n    if (datasource.type === 'table' && !isGranularitySqalTemporal) {\n      const temporalColumn = isDefaultTemporal\n        ? defaultTemporalColumn\n        : temporalColumns?.[0];\n      this.props.actions.setControlValue(\n        'granularity_sqla',\n        temporalColumn || null,\n      );\n    }\n\n    if (this.props.onDatasourceSave) {\n      this.props.onDatasourceSave(datasource);\n    }\n  };\n\n  toggleShowDatasource = () => {\n    this.setState(({ showDatasource }) => ({\n      showDatasource: !showDatasource,\n    }));\n  };\n\n  toggleChangeDatasourceModal = () => {\n    this.setState(({ showChangeDatasourceModal }) => ({\n      showChangeDatasourceModal: !showChangeDatasourceModal,\n    }));\n  };\n\n  toggleEditDatasourceModal = () => {\n    this.setState(({ showEditDatasourceModal }) => ({\n      showEditDatasourceModal: !showEditDatasourceModal,\n    }));\n  };\n\n  toggleSaveDatasetModal = () => {\n    this.setState(({ showSaveDatasetModal }) => ({\n      showSaveDatasetModal: !showSaveDatasetModal,\n    }));\n  };\n\n  handleMenuItemClick = ({ key }) => {\n    switch (key) {\n      case CHANGE_DATASET:\n        this.toggleChangeDatasourceModal();\n        break;\n\n      case EDIT_DATASET:\n        this.toggleEditDatasourceModal();\n        break;\n\n      case VIEW_IN_SQL_LAB:\n        {\n          const { datasource } = this.props;\n          const payload = {\n            datasourceKey: `${datasource.id}__${datasource.type}`,\n            sql: datasource.sql,\n          };\n          SupersetClient.postForm('/sqllab/', {\n            form_data: safeStringify(payload),\n          });\n        }\n        break;\n\n      case SAVE_AS_DATASET:\n        this.toggleSaveDatasetModal();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      showChangeDatasourceModal,\n      showEditDatasourceModal,\n      showSaveDatasetModal,\n    } = this.state;\n    const { datasource, onChange, theme } = this.props;\n    const isMissingDatasource = !datasource?.id;\n    let isMissingParams = false;\n    if (isMissingDatasource) {\n      const datasourceId = getUrlParam(URL_PARAMS.datasourceId);\n      const sliceId = getUrlParam(URL_PARAMS.sliceId);\n\n      if (!datasourceId && !sliceId) {\n        isMissingParams = true;\n      }\n    }\n\n    const { user } = this.props;\n    const allowEdit =\n      datasource.owners?.map(o => o.id || o.value).includes(user.userId) ||\n      isUserAdmin(user);\n\n    const canAccessSqlLab = userHasPermission(user, 'SQL Lab', 'menu_access');\n\n    const editText = t('Edit dataset');\n    const requestedQuery = {\n      datasourceKey: `${datasource.id}__${datasource.type}`,\n      sql: datasource.sql,\n    };\n\n    const defaultDatasourceMenu = (\n      <Menu onClick={this.handleMenuItemClick}>\n        {this.props.isEditable && !isMissingDatasource && (\n          <Menu.Item\n            key={EDIT_DATASET}\n            data-test=\"edit-dataset\"\n            disabled={!allowEdit}\n          >\n            {!allowEdit ? (\n              <Tooltip\n                title={t(\n                  'You must be a dataset owner in order to edit. Please reach out to a dataset owner to request modifications or edit access.',\n                )}\n              >\n                {editText}\n              </Tooltip>\n            ) : (\n              editText\n            )}\n          </Menu.Item>\n        )}\n        <Menu.Item key={CHANGE_DATASET}>{t('Swap dataset')}</Menu.Item>\n        {!isMissingDatasource && canAccessSqlLab && (\n          <Menu.Item key={VIEW_IN_SQL_LAB}>\n            <Link\n              to={{\n                pathname: '/sqllab',\n                state: { requestedQuery },\n              }}\n              onClick={preventRouterLinkWhileMetaClicked}\n            >\n              {t('View in SQL Lab')}\n            </Link>\n          </Menu.Item>\n        )}\n      </Menu>\n    );\n\n    const queryDatasourceMenu = (\n      <Menu onClick={this.handleMenuItemClick}>\n        <Menu.Item key={QUERY_PREVIEW}>\n          <ModalTrigger\n            triggerNode={\n              <span data-test=\"view-query-menu-item\">{t('Query preview')}</span>\n            }\n            modalTitle={t('Query preview')}\n            modalBody={\n              <ViewQuery\n                sql={datasource?.sql || datasource?.select_star || ''}\n              />\n            }\n            modalFooter={\n              <ViewQueryModalFooter\n                changeDatasource={this.toggleSaveDatasetModal}\n                datasource={datasource}\n              />\n            }\n            draggable={false}\n            resizable={false}\n            responsive\n          />\n        </Menu.Item>\n        {canAccessSqlLab && (\n          <Menu.Item key={VIEW_IN_SQL_LAB}>\n            <Link\n              to={{\n                pathname: '/sqllab',\n                state: { requestedQuery },\n              }}\n              onClick={preventRouterLinkWhileMetaClicked}\n            >\n              {t('View in SQL Lab')}\n            </Link>\n          </Menu.Item>\n        )}\n        <Menu.Item key={SAVE_AS_DATASET}>{t('Save as dataset')}</Menu.Item>\n      </Menu>\n    );\n\n    const { health_check_message: healthCheckMessage } = datasource;\n\n    let extra;\n    if (datasource?.extra) {\n      if (isString(datasource.extra)) {\n        try {\n          extra = JSON.parse(datasource.extra);\n        } catch {} // eslint-disable-line no-empty\n      } else {\n        extra = datasource.extra; // eslint-disable-line prefer-destructuring\n      }\n    }\n\n    const titleText = isMissingDatasource\n      ? t('Missing dataset')\n      : getDatasourceTitle(datasource);\n\n    const tooltip = titleText;\n\n    return (\n      <Styles data-test=\"datasource-control\" className=\"DatasourceControl\">\n        <div className=\"data-container\">\n          {datasourceIconLookup[datasource?.type]}\n          {renderDatasourceTitle(titleText, tooltip)}\n          {healthCheckMessage && (\n            <Tooltip title={healthCheckMessage}>\n              <Icons.AlertSolid iconColor={theme.colors.warning.base} />\n            </Tooltip>\n          )}\n          {extra?.warning_markdown && (\n            <WarningIconWithTooltip warningMarkdown={extra.warning_markdown} />\n          )}\n          <AntdDropdown\n            overlay={\n              datasource.type === DatasourceType.Query\n                ? queryDatasourceMenu\n                : defaultDatasourceMenu\n            }\n            trigger={['click']}\n            data-test=\"datasource-menu\"\n          >\n            <Icons.MoreVert\n              className=\"datasource-modal-trigger\"\n              data-test=\"datasource-menu-trigger\"\n            />\n          </AntdDropdown>\n        </div>\n        {/* missing dataset */}\n        {isMissingDatasource && isMissingParams && (\n          <div className=\"error-alert\">\n            <ErrorAlert\n              level=\"warning\"\n              title={t('Missing URL parameters')}\n              source=\"explore\"\n              subtitle={\n                <>\n                  <p>\n                    {t(\n                      'The URL is missing the dataset_id or slice_id parameters.',\n                    )}\n                  </p>\n                </>\n              }\n            />\n          </div>\n        )}\n        {isMissingDatasource && !isMissingParams && (\n          <div className=\"error-alert\">\n            <ErrorAlert\n              level=\"warning\"\n              title={t('Missing dataset')}\n              source=\"explore\"\n              subtitle={\n                <>\n                  <p>\n                    {t(\n                      'The dataset linked to this chart may have been deleted.',\n                    )}\n                  </p>\n                  <p>\n                    <Button\n                      buttonStyle=\"primary\"\n                      onClick={() =>\n                        this.handleMenuItemClick({ key: CHANGE_DATASET })\n                      }\n                    >\n                      {t('Swap dataset')}\n                    </Button>\n                  </p>\n                </>\n              }\n            />\n          </div>\n        )}\n        {showEditDatasourceModal && (\n          <DatasourceModal\n            datasource={datasource}\n            show={showEditDatasourceModal}\n            onDatasourceSave={this.onDatasourceSave}\n            onHide={this.toggleEditDatasourceModal}\n          />\n        )}\n        {showChangeDatasourceModal && (\n          <ChangeDatasourceModal\n            onDatasourceSave={this.onDatasourceSave}\n            onHide={this.toggleChangeDatasourceModal}\n            show={showChangeDatasourceModal}\n            onChange={onChange}\n          />\n        )}\n        {showSaveDatasetModal && (\n          <SaveDatasetModal\n            visible={showSaveDatasetModal}\n            onHide={this.toggleSaveDatasetModal}\n            buttonTextOnSave={t('Save')}\n            buttonTextOnOverwrite={t('Overwrite')}\n            modalDescription={t(\n              'Save this query as a virtual dataset to continue exploring',\n            )}\n            datasource={getDatasourceAsSaveableDataset(datasource)}\n            openWindow={false}\n            formData={this.props.form_data}\n          />\n        )}\n      </Styles>\n    );\n  }\n}\n\nDatasourceControl.propTypes = propTypes;\nDatasourceControl.defaultProps = defaultProps;\n\nexport default withTheme(DatasourceControl);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}