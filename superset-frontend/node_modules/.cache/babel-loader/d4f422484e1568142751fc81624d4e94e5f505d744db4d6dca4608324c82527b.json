{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport { css, t, styled } from '@superset-ui/core';\n\nimport buildFilterScopeTreeEntry from 'src/dashboard/util/buildFilterScopeTreeEntry';\nimport getFilterScopeNodesTree from 'src/dashboard/util/getFilterScopeNodesTree';\nimport getFilterFieldNodesTree from 'src/dashboard/util/getFilterFieldNodesTree';\nimport getFilterScopeParentNodes from 'src/dashboard/util/getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from 'src/dashboard/util/getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from 'src/dashboard/util/getSelectedChartIdForFilterScopeTree';\nimport getFilterScopeFromNodesTree from 'src/dashboard/util/getFilterScopeFromNodesTree';\nimport getRevertedFilterScope from 'src/dashboard/util/getRevertedFilterScope';\nimport { getChartIdsInFilterScope } from 'src/dashboard/util/activeDashboardFilters';\nimport {\n  getChartIdAndColumnFromFilterKey,\n  getDashboardFilterKey } from\n'src/dashboard/util/getDashboardFilterKey';\nimport { ALL_FILTERS_ROOT } from 'src/dashboard/util/constants';\nimport { dashboardFilterPropShape } from 'src/dashboard/util/propShapes';\nimport FilterScopeTree from './FilterScopeTree';\nimport FilterFieldTree from './FilterFieldTree';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  dashboardFilters: PropTypes.objectOf(dashboardFilterPropShape).isRequired,\n  layout: PropTypes.object.isRequired,\n\n  updateDashboardFiltersScope: PropTypes.func.isRequired,\n  setUnsavedChanges: PropTypes.func.isRequired,\n  onCloseModal: PropTypes.func.isRequired\n};\n\nconst ScopeContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: column;\n    height: 80%;\n    margin-right: ${theme.gridUnit * -6}px;\n    font-size: ${theme.typography.sizes.m}px;\n\n    & .nav.nav-tabs {\n      border: none;\n    }\n\n    & .filter-scope-body {\n      flex: 1;\n      max-height: calc(100% - ${theme.gridUnit * 32}px);\n\n      .filter-field-pane,\n      .filter-scope-pane {\n        overflow-y: auto;\n      }\n    }\n\n    & .warning-message {\n      padding: ${theme.gridUnit * 6}px;\n    }\n  `}\n`;\n\nconst ScopeBody = styled.div`\n  ${({ theme }) => css`\n    &.filter-scope-body {\n      flex: 1;\n      max-height: calc(100% - ${theme.gridUnit * 32}px);\n\n      .filter-field-pane,\n      .filter-scope-pane {\n        overflow-y: auto;\n      }\n    }\n  `}\n`;\n\nconst ScopeHeader = styled.div`\n  ${({ theme }) => css`\n    height: ${theme.gridUnit * 16}px;\n    border-bottom: 1px solid ${theme.colors.grayscale.light2};\n    padding-left: ${theme.gridUnit * 6}px;\n    margin-left: ${theme.gridUnit * -6}px;\n\n    h4 {\n      margin-top: 0;\n    }\n\n    .selected-fields {\n      margin: ${theme.gridUnit * 3}px 0 ${theme.gridUnit * 4}px;\n      visibility: hidden;\n\n      &.multi-edit-mode {\n        visibility: visible;\n      }\n\n      .selected-scopes {\n        padding-left: ${theme.gridUnit}px;\n      }\n    }\n  `}\n`;\n\nconst ScopeSelector = styled.div`\n  ${({ theme }) => css`\n    &.filters-scope-selector {\n      display: flex;\n      flex-direction: row;\n      position: relative;\n      height: 100%;\n\n      a,\n      a:active,\n      a:hover {\n        color: inherit;\n        text-decoration: none;\n      }\n\n      .react-checkbox-tree .rct-icon.rct-icon-expand-all,\n      .react-checkbox-tree .rct-icon.rct-icon-collapse-all {\n        font-family: ${theme.typography.families.sansSerif};\n        font-size: ${theme.typography.sizes.m}px;\n        color: ${theme.colors.primary.base};\n\n        &::before {\n          content: '';\n        }\n\n        &:hover {\n          text-decoration: underline;\n        }\n\n        &:focus {\n          outline: none;\n        }\n      }\n\n      .filter-field-pane {\n        position: relative;\n        width: 40%;\n        padding: ${theme.gridUnit * 4}px;\n        padding-left: 0;\n        border-right: 1px solid ${theme.colors.grayscale.light2};\n\n        .filter-container label {\n          font-weight: ${theme.typography.weights.normal};\n          margin: 0 0 0 ${theme.gridUnit * 4}px;\n          word-break: break-all;\n        }\n\n        .filter-field-item {\n          height: ${theme.gridUnit * 9}px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          padding: 0 ${theme.gridUnit * 6}px;\n          margin-left: ${theme.gridUnit * -6}px;\n\n          &.is-selected {\n            border: 1px solid ${theme.colors.text.label};\n            border-radius: ${theme.borderRadius}px;\n            background-color: ${theme.colors.grayscale.light4};\n            margin-left: ${theme.gridUnit * -6}px;\n          }\n        }\n\n        .react-checkbox-tree {\n          .rct-title .root {\n            font-weight: ${theme.typography.weights.bold};\n          }\n\n          .rct-text {\n            height: ${theme.gridUnit * 10}px;\n          }\n        }\n      }\n\n      .filter-scope-pane {\n        position: relative;\n        flex: 1;\n        padding: ${theme.gridUnit * 4}px;\n        padding-right: ${theme.gridUnit * 6}px;\n      }\n\n      .react-checkbox-tree {\n        flex-direction: column;\n        color: ${theme.colors.grayscale.dark1};\n        font-size: ${theme.typography.sizes.m}px;\n\n        .filter-scope-type {\n          padding: ${theme.gridUnit * 2}px 0;\n          display: flex;\n          align-items: center;\n\n          &.chart {\n            font-weight: ${theme.typography.weights.normal};\n          }\n\n          &.selected-filter {\n            padding-left: ${theme.gridUnit * 7}px;\n            position: relative;\n            color: ${theme.colors.text.label};\n\n            &::before {\n              content: ' ';\n              position: absolute;\n              left: 0;\n              top: 50%;\n              width: ${theme.gridUnit * 4}px;\n              height: ${theme.gridUnit * 4}px;\n              border-radius: ${theme.borderRadius}px;\n              margin-top: ${theme.gridUnit * -2}px;\n              box-shadow: inset 0 0 0 2px ${theme.colors.grayscale.light2};\n              background: ${theme.colors.grayscale.light3};\n            }\n          }\n\n          &.root {\n            font-weight: ${theme.typography.weights.bold};\n          }\n        }\n\n        .rct-checkbox {\n          svg {\n            position: relative;\n            top: 3px;\n            width: ${theme.gridUnit * 4.5}px;\n          }\n        }\n\n        .rct-node-leaf {\n          .rct-bare-label {\n            &::before {\n              padding-left: ${theme.gridUnit}px;\n            }\n          }\n        }\n\n        .rct-options {\n          text-align: left;\n          margin-left: 0;\n          margin-bottom: ${theme.gridUnit * 2}px;\n        }\n\n        .rct-text {\n          margin: 0;\n          display: flex;\n        }\n\n        .rct-title {\n          display: block;\n        }\n\n        // disable style from react-checkbox-trees.css\n        .rct-node-clickable:hover,\n        .rct-node-clickable:focus,\n        label:hover,\n        label:active {\n          background: none !important;\n        }\n      }\n\n      .multi-edit-mode {\n        .filter-field-item {\n          padding: 0 ${theme.gridUnit * 4}px 0 ${theme.gridUnit * 12}px;\n          margin-left: ${theme.gridUnit * -12}px;\n\n          &.is-selected {\n            margin-left: ${theme.gridUnit * -13}px;\n          }\n        }\n      }\n\n      .scope-search {\n        position: absolute;\n        right: ${theme.gridUnit * 4}px;\n        top: ${theme.gridUnit * 4}px;\n        border-radius: ${theme.borderRadius}px;\n        border: 1px solid ${theme.colors.grayscale.light2};\n        padding: ${theme.gridUnit}px ${theme.gridUnit * 2}px;\n        font-size: ${theme.typography.sizes.m}px;\n        outline: none;\n\n        &:focus {\n          border: 1px solid ${theme.colors.primary.base};\n        }\n      }\n    }\n  `}\n`;\n\nconst ActionsContainer = styled.div`\n  ${({ theme }) => `\n    height: ${theme.gridUnit * 16}px;\n\n    border-top: ${theme.gridUnit / 4}px solid ${theme.colors.primary.light3};\n    padding: ${theme.gridUnit * 6}px;\n    margin: 0 0 0 ${-theme.gridUnit * 6}px;\n    text-align: right;\n\n    .btn {\n      margin-right: ${theme.gridUnit * 4}px;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  `}\n`;\n\nexport default class FilterScopeSelector extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { dashboardFilters, layout } = props;\n\n    if (Object.keys(dashboardFilters).length > 0) {\n      // display filter fields in tree structure\n      const filterFieldNodes = getFilterFieldNodesTree({\n        dashboardFilters\n      });\n      // filterFieldNodes root node is dashboard_root component,\n      // so that we can offer a select/deselect all link\n      const filtersNodes = filterFieldNodes[0].children;\n      this.allfilterFields = [];\n      filtersNodes.forEach(({ children }) => {\n        children.forEach((child) => {\n          this.allfilterFields.push(child.value);\n        });\n      });\n      this.defaultFilterKey = filtersNodes[0].children[0].value;\n\n      // build FilterScopeTree object for each filterKey\n      const filterScopeMap = Object.values(dashboardFilters).reduce(\n        (map, { chartId: filterId, columns }) => {\n          const filterScopeByChartId = Object.keys(columns).reduce(\n            (mapByChartId, columnName) => {\n              const filterKey = getDashboardFilterKey({\n                chartId: filterId,\n                column: columnName\n              });\n              const nodes = getFilterScopeNodesTree({\n                components: layout,\n                filterFields: [filterKey],\n                selectedChartId: filterId\n              });\n              const expanded = getFilterScopeParentNodes(nodes, 1);\n              const chartIdsInFilterScope = (\n              getChartIdsInFilterScope({\n                filterScope: dashboardFilters[filterId].scopes[columnName]\n              }) || []).\n              filter((id) => id !== filterId);\n\n              return {\n                ...mapByChartId,\n                [filterKey]: {\n                  // unfiltered nodes\n                  nodes,\n                  // filtered nodes in display if searchText is not empty\n                  nodesFiltered: [...nodes],\n                  checked: chartIdsInFilterScope,\n                  expanded\n                }\n              };\n            },\n            {}\n          );\n\n          return {\n            ...map,\n            ...filterScopeByChartId\n          };\n        },\n        {}\n      );\n\n      // initial state: active defaultFilerKey\n      const { chartId } = getChartIdAndColumnFromFilterKey(\n        this.defaultFilterKey\n      );\n      const checkedFilterFields = [];\n      const activeFilterField = this.defaultFilterKey;\n      // expand defaultFilterKey in filter field tree\n      const expandedFilterIds = [ALL_FILTERS_ROOT].concat(chartId);\n\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField,\n        filterScopeMap,\n        layout\n      });\n      this.state = {\n        showSelector: true,\n        activeFilterField,\n        searchText: '',\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry\n        },\n        filterFieldNodes,\n        checkedFilterFields,\n        expandedFilterIds\n      };\n    } else {\n      this.state = {\n        showSelector: false\n      };\n    }\n\n    this.filterNodes = this.filterNodes.bind(this);\n    this.onChangeFilterField = this.onChangeFilterField.bind(this);\n    this.onCheckFilterScope = this.onCheckFilterScope.bind(this);\n    this.onExpandFilterScope = this.onExpandFilterScope.bind(this);\n    this.onSearchInputChange = this.onSearchInputChange.bind(this);\n    this.onCheckFilterField = this.onCheckFilterField.bind(this);\n    this.onExpandFilterField = this.onExpandFilterField.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onSave = this.onSave.bind(this);\n  }\n\n  onCheckFilterScope(checked = []) {\n    const { activeFilterField, filterScopeMap, checkedFilterFields } =\n    this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields\n    });\n    const editingList = activeFilterField ?\n    [activeFilterField] :\n    checkedFilterFields;\n    const updatedEntry = {\n      ...filterScopeMap[key],\n      checked\n    };\n\n    const updatedFilterScopeMap = getRevertedFilterScope({\n      checked,\n      filterFields: editingList,\n      filterScopeMap\n    });\n\n    this.setState(() => ({\n      filterScopeMap: {\n        ...filterScopeMap,\n        ...updatedFilterScopeMap,\n        [key]: updatedEntry\n      }\n    }));\n  }\n\n  onExpandFilterScope(expanded = []) {\n    const { activeFilterField, checkedFilterFields, filterScopeMap } =\n    this.state;\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields\n    });\n    const updatedEntry = {\n      ...filterScopeMap[key],\n      expanded\n    };\n    this.setState(() => ({\n      filterScopeMap: {\n        ...filterScopeMap,\n        [key]: updatedEntry\n      }\n    }));\n  }\n\n  onCheckFilterField(checkedFilterFields = []) {\n    const { layout } = this.props;\n    const { filterScopeMap } = this.state;\n    const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n      checkedFilterFields,\n      activeFilterField: null,\n      filterScopeMap,\n      layout\n    });\n\n    this.setState(() => ({\n      activeFilterField: null,\n      checkedFilterFields,\n      filterScopeMap: {\n        ...filterScopeMap,\n        ...filterScopeTreeEntry\n      }\n    }));\n  }\n\n  onExpandFilterField(expandedFilterIds = []) {\n    this.setState(() => ({\n      expandedFilterIds\n    }));\n  }\n\n  onChangeFilterField(filterField = {}) {\n    const { layout } = this.props;\n    const nextActiveFilterField = filterField.value;\n    const {\n      activeFilterField: currentActiveFilterField,\n      checkedFilterFields,\n      filterScopeMap\n    } = this.state;\n\n    // we allow single edit and multiple edit in the same view.\n    // if user click on the single filter field,\n    // will show filter scope for the single field.\n    // if user click on the same filter filed again,\n    // will toggle off the single filter field,\n    // and allow multi-edit all checked filter fields.\n    if (nextActiveFilterField === currentActiveFilterField) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: null,\n        filterScopeMap,\n        layout\n      });\n\n      this.setState({\n        activeFilterField: null,\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry\n        }\n      });\n    } else if (this.allfilterFields.includes(nextActiveFilterField)) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap,\n        layout\n      });\n\n      this.setState({\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry\n        }\n      });\n    }\n  }\n\n  onSearchInputChange(e) {\n    this.setState({ searchText: e.target.value }, this.filterTree);\n  }\n\n  onClose() {\n    this.props.onCloseModal();\n  }\n\n  onSave() {\n    const { filterScopeMap } = this.state;\n\n    const allFilterFieldScopes = this.allfilterFields.reduce(\n      (map, filterKey) => {\n        const { nodes } = filterScopeMap[filterKey];\n        const checkedChartIds = filterScopeMap[filterKey].checked;\n\n        return {\n          ...map,\n          [filterKey]: getFilterScopeFromNodesTree({\n            filterKey,\n            nodes,\n            checkedChartIds\n          })\n        };\n      },\n      {}\n    );\n\n    this.props.updateDashboardFiltersScope(allFilterFieldScopes);\n    this.props.setUnsavedChanges(true);\n\n    // click Save button will do save and close modal\n    this.props.onCloseModal();\n  }\n\n  filterTree() {\n    // Reset nodes back to unfiltered state\n    if (!this.state.searchText) {\n      this.setState((prevState) => {\n        const { activeFilterField, checkedFilterFields, filterScopeMap } =\n        prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields\n        });\n\n        const updatedEntry = {\n          ...filterScopeMap[key],\n          nodesFiltered: filterScopeMap[key].nodes\n        };\n        return {\n          filterScopeMap: {\n            ...filterScopeMap,\n            [key]: updatedEntry\n          }\n        };\n      });\n    } else {\n      const updater = (prevState) => {\n        const { activeFilterField, checkedFilterFields, filterScopeMap } =\n        prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields\n        });\n\n        const nodesFiltered = filterScopeMap[key].nodes.reduce(\n          this.filterNodes,\n          []\n        );\n        const expanded = getFilterScopeParentNodes([...nodesFiltered]);\n        const updatedEntry = {\n          ...filterScopeMap[key],\n          nodesFiltered,\n          expanded\n        };\n\n        return {\n          filterScopeMap: {\n            ...filterScopeMap,\n            [key]: updatedEntry\n          }\n        };\n      };\n\n      this.setState(updater);\n    }\n  }\n\n  filterNodes(filtered = [], node = {}) {\n    const { searchText } = this.state;\n    const children = (node.children || []).reduce(this.filterNodes, []);\n\n    if (\n    // Node's label matches the search string\n    node.label.toLocaleLowerCase().indexOf(searchText.toLocaleLowerCase()) >\n    -1 ||\n    // Or a children has a matching node\n    children.length)\n    {\n      filtered.push({ ...node, children });\n    }\n\n    return filtered;\n  }\n\n  renderFilterFieldList() {\n    const {\n      activeFilterField,\n      filterFieldNodes,\n      checkedFilterFields,\n      expandedFilterIds\n    } = this.state;\n    return (\n      _jsx(FilterFieldTree, {\n        activeKey: activeFilterField,\n        nodes: filterFieldNodes,\n        checked: checkedFilterFields,\n        expanded: expandedFilterIds,\n        onClick: this.onChangeFilterField,\n        onCheck: this.onCheckFilterField,\n        onExpand: this.onExpandFilterField }\n      ));\n\n  }\n\n  renderFilterScopeTree() {\n    const {\n      filterScopeMap,\n      activeFilterField,\n      checkedFilterFields,\n      searchText\n    } = this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields\n    });\n\n    const selectedChartId = getSelectedChartIdForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields\n    });\n    return (\n      _jsxs(_Fragment, { children: [\n        _jsx(\"input\", {\n          className: \"filter-text scope-search multi-edit-mode\",\n          placeholder: t('Search...'),\n          type: \"text\",\n          value: searchText,\n          onChange: this.onSearchInputChange }\n        ),\n        _jsx(FilterScopeTree, {\n          nodes: filterScopeMap[key].nodesFiltered,\n          checked: filterScopeMap[key].checked,\n          expanded: filterScopeMap[key].expanded,\n          onCheck: this.onCheckFilterScope,\n          onExpand: this.onExpandFilterScope\n          // pass selectedFilterId prop to FilterScopeTree component,\n          // to hide checkbox for selected filter field itself\n          , selectedChartId: selectedChartId }\n        )] }\n      ));\n\n  }\n\n  renderEditingFiltersName() {\n    const { dashboardFilters } = this.props;\n    const { activeFilterField, checkedFilterFields } = this.state;\n    const currentFilterLabels = [].\n    concat(activeFilterField || checkedFilterFields).\n    map((key) => {\n      const { chartId, column } = getChartIdAndColumnFromFilterKey(key);\n      return dashboardFilters[chartId].labels[column] || column;\n    });\n\n    return (\n      _jsxs(\"div\", { className: \"selected-fields multi-edit-mode\", children: [\n        currentFilterLabels.length === 0 && t('No filter is selected.'),\n        currentFilterLabels.length === 1 && t('Editing 1 filter:'),\n        currentFilterLabels.length > 1 &&\n        t('Batch editing %d filters:', currentFilterLabels.length),\n        _jsx(\"span\", { className: \"selected-scopes\", children:\n          currentFilterLabels.join(', ') }\n        )] }\n      ));\n\n  }\n\n  render() {\n    const { showSelector } = this.state;\n\n    return (\n      _jsxs(ScopeContainer, { children: [\n        _jsxs(ScopeHeader, { children: [\n          _jsx(\"h4\", { children: t('Configure filter scopes') }),\n          showSelector && this.renderEditingFiltersName()] }\n        ),\n\n        _jsx(ScopeBody, { className: \"filter-scope-body\", children:\n          !showSelector ?\n          _jsx(\"div\", { className: \"warning-message\", children:\n            t('There are no filters in this dashboard.') }\n          ) :\n\n          _jsxs(ScopeSelector, { className: \"filters-scope-selector\", children: [\n            _jsx(\"div\", { className: cx('filter-field-pane multi-edit-mode'), children:\n              this.renderFilterFieldList() }\n            ),\n            _jsx(\"div\", { className: \"filter-scope-pane multi-edit-mode\", children:\n              this.renderFilterScopeTree() }\n            )] }\n          ) }\n\n        ),\n\n        _jsxs(ActionsContainer, { children: [\n          _jsx(Button, { buttonSize: \"small\", onClick: this.onClose, children:\n            t('Close') }\n          ),\n          showSelector &&\n          _jsx(Button, {\n            buttonSize: \"small\",\n            buttonStyle: \"primary\",\n            onClick: this.onSave, children:\n\n            t('Save') }\n          )] }\n\n        )] }\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nFilterScopeSelector.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(ScopeContainer, \"ScopeContainer\", \"/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(ScopeBody, \"ScopeBody\", \"/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(ScopeHeader, \"ScopeHeader\", \"/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(ScopeSelector, \"ScopeSelector\", \"/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(ActionsContainer, \"ActionsContainer\", \"/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");reactHotLoader.register(FilterScopeSelector, \"FilterScopeSelector\", \"/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["PureComponent","PropTypes","cx","Button","css","t","styled","buildFilterScopeTreeEntry","getFilterScopeNodesTree","getFilterFieldNodesTree","getFilterScopeParentNodes","getKeyForFilterScopeTree","getSelectedChartIdForFilterScopeTree","getFilterScopeFromNodesTree","getRevertedFilterScope","getChartIdsInFilterScope","getChartIdAndColumnFromFilterKey","getDashboardFilterKey","ALL_FILTERS_ROOT","dashboardFilterPropShape","FilterScopeTree","FilterFieldTree","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","propTypes","dashboardFilters","objectOf","isRequired","layout","object","updateDashboardFiltersScope","func","setUnsavedChanges","onCloseModal","ScopeContainer","div","theme","gridUnit","typography","sizes","m","ScopeBody","ScopeHeader","colors","grayscale","light2","ScopeSelector","families","sansSerif","primary","base","weights","normal","text","label","borderRadius","light4","bold","dark1","light3","ActionsContainer","FilterScopeSelector","constructor","props","Object","keys","length","filterFieldNodes","filtersNodes","children","allfilterFields","forEach","child","push","value","defaultFilterKey","filterScopeMap","values","reduce","map","chartId","filterId","columns","filterScopeByChartId","mapByChartId","columnName","filterKey","column","nodes","components","filterFields","selectedChartId","expanded","chartIdsInFilterScope","filterScope","scopes","filter","id","nodesFiltered","checked","checkedFilterFields","activeFilterField","expandedFilterIds","concat","filterScopeTreeEntry","state","showSelector","searchText","filterNodes","bind","onChangeFilterField","onCheckFilterScope","onExpandFilterScope","onSearchInputChange","onCheckFilterField","onExpandFilterField","onClose","onSave","key","editingList","updatedEntry","updatedFilterScopeMap","setState","filterField","nextActiveFilterField","currentActiveFilterField","includes","e","target","filterTree","allFilterFieldScopes","checkedChartIds","prevState","updater","filtered","node","toLocaleLowerCase","indexOf","renderFilterFieldList","activeKey","onClick","onCheck","onExpand","renderFilterScopeTree","className","placeholder","type","onChange","renderEditingFiltersName","currentFilterLabels","labels","join","render","buttonSize","buttonStyle","__reactstandin__regenerateByEval","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/dashboard/components/filterscope/FilterScopeSelector.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport Button from 'src/components/Button';\nimport { css, t, styled } from '@superset-ui/core';\n\nimport buildFilterScopeTreeEntry from 'src/dashboard/util/buildFilterScopeTreeEntry';\nimport getFilterScopeNodesTree from 'src/dashboard/util/getFilterScopeNodesTree';\nimport getFilterFieldNodesTree from 'src/dashboard/util/getFilterFieldNodesTree';\nimport getFilterScopeParentNodes from 'src/dashboard/util/getFilterScopeParentNodes';\nimport getKeyForFilterScopeTree from 'src/dashboard/util/getKeyForFilterScopeTree';\nimport getSelectedChartIdForFilterScopeTree from 'src/dashboard/util/getSelectedChartIdForFilterScopeTree';\nimport getFilterScopeFromNodesTree from 'src/dashboard/util/getFilterScopeFromNodesTree';\nimport getRevertedFilterScope from 'src/dashboard/util/getRevertedFilterScope';\nimport { getChartIdsInFilterScope } from 'src/dashboard/util/activeDashboardFilters';\nimport {\n  getChartIdAndColumnFromFilterKey,\n  getDashboardFilterKey,\n} from 'src/dashboard/util/getDashboardFilterKey';\nimport { ALL_FILTERS_ROOT } from 'src/dashboard/util/constants';\nimport { dashboardFilterPropShape } from 'src/dashboard/util/propShapes';\nimport FilterScopeTree from './FilterScopeTree';\nimport FilterFieldTree from './FilterFieldTree';\n\nconst propTypes = {\n  dashboardFilters: PropTypes.objectOf(dashboardFilterPropShape).isRequired,\n  layout: PropTypes.object.isRequired,\n\n  updateDashboardFiltersScope: PropTypes.func.isRequired,\n  setUnsavedChanges: PropTypes.func.isRequired,\n  onCloseModal: PropTypes.func.isRequired,\n};\n\nconst ScopeContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: column;\n    height: 80%;\n    margin-right: ${theme.gridUnit * -6}px;\n    font-size: ${theme.typography.sizes.m}px;\n\n    & .nav.nav-tabs {\n      border: none;\n    }\n\n    & .filter-scope-body {\n      flex: 1;\n      max-height: calc(100% - ${theme.gridUnit * 32}px);\n\n      .filter-field-pane,\n      .filter-scope-pane {\n        overflow-y: auto;\n      }\n    }\n\n    & .warning-message {\n      padding: ${theme.gridUnit * 6}px;\n    }\n  `}\n`;\n\nconst ScopeBody = styled.div`\n  ${({ theme }) => css`\n    &.filter-scope-body {\n      flex: 1;\n      max-height: calc(100% - ${theme.gridUnit * 32}px);\n\n      .filter-field-pane,\n      .filter-scope-pane {\n        overflow-y: auto;\n      }\n    }\n  `}\n`;\n\nconst ScopeHeader = styled.div`\n  ${({ theme }) => css`\n    height: ${theme.gridUnit * 16}px;\n    border-bottom: 1px solid ${theme.colors.grayscale.light2};\n    padding-left: ${theme.gridUnit * 6}px;\n    margin-left: ${theme.gridUnit * -6}px;\n\n    h4 {\n      margin-top: 0;\n    }\n\n    .selected-fields {\n      margin: ${theme.gridUnit * 3}px 0 ${theme.gridUnit * 4}px;\n      visibility: hidden;\n\n      &.multi-edit-mode {\n        visibility: visible;\n      }\n\n      .selected-scopes {\n        padding-left: ${theme.gridUnit}px;\n      }\n    }\n  `}\n`;\n\nconst ScopeSelector = styled.div`\n  ${({ theme }) => css`\n    &.filters-scope-selector {\n      display: flex;\n      flex-direction: row;\n      position: relative;\n      height: 100%;\n\n      a,\n      a:active,\n      a:hover {\n        color: inherit;\n        text-decoration: none;\n      }\n\n      .react-checkbox-tree .rct-icon.rct-icon-expand-all,\n      .react-checkbox-tree .rct-icon.rct-icon-collapse-all {\n        font-family: ${theme.typography.families.sansSerif};\n        font-size: ${theme.typography.sizes.m}px;\n        color: ${theme.colors.primary.base};\n\n        &::before {\n          content: '';\n        }\n\n        &:hover {\n          text-decoration: underline;\n        }\n\n        &:focus {\n          outline: none;\n        }\n      }\n\n      .filter-field-pane {\n        position: relative;\n        width: 40%;\n        padding: ${theme.gridUnit * 4}px;\n        padding-left: 0;\n        border-right: 1px solid ${theme.colors.grayscale.light2};\n\n        .filter-container label {\n          font-weight: ${theme.typography.weights.normal};\n          margin: 0 0 0 ${theme.gridUnit * 4}px;\n          word-break: break-all;\n        }\n\n        .filter-field-item {\n          height: ${theme.gridUnit * 9}px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          padding: 0 ${theme.gridUnit * 6}px;\n          margin-left: ${theme.gridUnit * -6}px;\n\n          &.is-selected {\n            border: 1px solid ${theme.colors.text.label};\n            border-radius: ${theme.borderRadius}px;\n            background-color: ${theme.colors.grayscale.light4};\n            margin-left: ${theme.gridUnit * -6}px;\n          }\n        }\n\n        .react-checkbox-tree {\n          .rct-title .root {\n            font-weight: ${theme.typography.weights.bold};\n          }\n\n          .rct-text {\n            height: ${theme.gridUnit * 10}px;\n          }\n        }\n      }\n\n      .filter-scope-pane {\n        position: relative;\n        flex: 1;\n        padding: ${theme.gridUnit * 4}px;\n        padding-right: ${theme.gridUnit * 6}px;\n      }\n\n      .react-checkbox-tree {\n        flex-direction: column;\n        color: ${theme.colors.grayscale.dark1};\n        font-size: ${theme.typography.sizes.m}px;\n\n        .filter-scope-type {\n          padding: ${theme.gridUnit * 2}px 0;\n          display: flex;\n          align-items: center;\n\n          &.chart {\n            font-weight: ${theme.typography.weights.normal};\n          }\n\n          &.selected-filter {\n            padding-left: ${theme.gridUnit * 7}px;\n            position: relative;\n            color: ${theme.colors.text.label};\n\n            &::before {\n              content: ' ';\n              position: absolute;\n              left: 0;\n              top: 50%;\n              width: ${theme.gridUnit * 4}px;\n              height: ${theme.gridUnit * 4}px;\n              border-radius: ${theme.borderRadius}px;\n              margin-top: ${theme.gridUnit * -2}px;\n              box-shadow: inset 0 0 0 2px ${theme.colors.grayscale.light2};\n              background: ${theme.colors.grayscale.light3};\n            }\n          }\n\n          &.root {\n            font-weight: ${theme.typography.weights.bold};\n          }\n        }\n\n        .rct-checkbox {\n          svg {\n            position: relative;\n            top: 3px;\n            width: ${theme.gridUnit * 4.5}px;\n          }\n        }\n\n        .rct-node-leaf {\n          .rct-bare-label {\n            &::before {\n              padding-left: ${theme.gridUnit}px;\n            }\n          }\n        }\n\n        .rct-options {\n          text-align: left;\n          margin-left: 0;\n          margin-bottom: ${theme.gridUnit * 2}px;\n        }\n\n        .rct-text {\n          margin: 0;\n          display: flex;\n        }\n\n        .rct-title {\n          display: block;\n        }\n\n        // disable style from react-checkbox-trees.css\n        .rct-node-clickable:hover,\n        .rct-node-clickable:focus,\n        label:hover,\n        label:active {\n          background: none !important;\n        }\n      }\n\n      .multi-edit-mode {\n        .filter-field-item {\n          padding: 0 ${theme.gridUnit * 4}px 0 ${theme.gridUnit * 12}px;\n          margin-left: ${theme.gridUnit * -12}px;\n\n          &.is-selected {\n            margin-left: ${theme.gridUnit * -13}px;\n          }\n        }\n      }\n\n      .scope-search {\n        position: absolute;\n        right: ${theme.gridUnit * 4}px;\n        top: ${theme.gridUnit * 4}px;\n        border-radius: ${theme.borderRadius}px;\n        border: 1px solid ${theme.colors.grayscale.light2};\n        padding: ${theme.gridUnit}px ${theme.gridUnit * 2}px;\n        font-size: ${theme.typography.sizes.m}px;\n        outline: none;\n\n        &:focus {\n          border: 1px solid ${theme.colors.primary.base};\n        }\n      }\n    }\n  `}\n`;\n\nconst ActionsContainer = styled.div`\n  ${({ theme }) => `\n    height: ${theme.gridUnit * 16}px;\n\n    border-top: ${theme.gridUnit / 4}px solid ${theme.colors.primary.light3};\n    padding: ${theme.gridUnit * 6}px;\n    margin: 0 0 0 ${-theme.gridUnit * 6}px;\n    text-align: right;\n\n    .btn {\n      margin-right: ${theme.gridUnit * 4}px;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  `}\n`;\n\nexport default class FilterScopeSelector extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { dashboardFilters, layout } = props;\n\n    if (Object.keys(dashboardFilters).length > 0) {\n      // display filter fields in tree structure\n      const filterFieldNodes = getFilterFieldNodesTree({\n        dashboardFilters,\n      });\n      // filterFieldNodes root node is dashboard_root component,\n      // so that we can offer a select/deselect all link\n      const filtersNodes = filterFieldNodes[0].children;\n      this.allfilterFields = [];\n      filtersNodes.forEach(({ children }) => {\n        children.forEach(child => {\n          this.allfilterFields.push(child.value);\n        });\n      });\n      this.defaultFilterKey = filtersNodes[0].children[0].value;\n\n      // build FilterScopeTree object for each filterKey\n      const filterScopeMap = Object.values(dashboardFilters).reduce(\n        (map, { chartId: filterId, columns }) => {\n          const filterScopeByChartId = Object.keys(columns).reduce(\n            (mapByChartId, columnName) => {\n              const filterKey = getDashboardFilterKey({\n                chartId: filterId,\n                column: columnName,\n              });\n              const nodes = getFilterScopeNodesTree({\n                components: layout,\n                filterFields: [filterKey],\n                selectedChartId: filterId,\n              });\n              const expanded = getFilterScopeParentNodes(nodes, 1);\n              const chartIdsInFilterScope = (\n                getChartIdsInFilterScope({\n                  filterScope: dashboardFilters[filterId].scopes[columnName],\n                }) || []\n              ).filter(id => id !== filterId);\n\n              return {\n                ...mapByChartId,\n                [filterKey]: {\n                  // unfiltered nodes\n                  nodes,\n                  // filtered nodes in display if searchText is not empty\n                  nodesFiltered: [...nodes],\n                  checked: chartIdsInFilterScope,\n                  expanded,\n                },\n              };\n            },\n            {},\n          );\n\n          return {\n            ...map,\n            ...filterScopeByChartId,\n          };\n        },\n        {},\n      );\n\n      // initial state: active defaultFilerKey\n      const { chartId } = getChartIdAndColumnFromFilterKey(\n        this.defaultFilterKey,\n      );\n      const checkedFilterFields = [];\n      const activeFilterField = this.defaultFilterKey;\n      // expand defaultFilterKey in filter field tree\n      const expandedFilterIds = [ALL_FILTERS_ROOT].concat(chartId);\n\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField,\n        filterScopeMap,\n        layout,\n      });\n      this.state = {\n        showSelector: true,\n        activeFilterField,\n        searchText: '',\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry,\n        },\n        filterFieldNodes,\n        checkedFilterFields,\n        expandedFilterIds,\n      };\n    } else {\n      this.state = {\n        showSelector: false,\n      };\n    }\n\n    this.filterNodes = this.filterNodes.bind(this);\n    this.onChangeFilterField = this.onChangeFilterField.bind(this);\n    this.onCheckFilterScope = this.onCheckFilterScope.bind(this);\n    this.onExpandFilterScope = this.onExpandFilterScope.bind(this);\n    this.onSearchInputChange = this.onSearchInputChange.bind(this);\n    this.onCheckFilterField = this.onCheckFilterField.bind(this);\n    this.onExpandFilterField = this.onExpandFilterField.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onSave = this.onSave.bind(this);\n  }\n\n  onCheckFilterScope(checked = []) {\n    const { activeFilterField, filterScopeMap, checkedFilterFields } =\n      this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n    const editingList = activeFilterField\n      ? [activeFilterField]\n      : checkedFilterFields;\n    const updatedEntry = {\n      ...filterScopeMap[key],\n      checked,\n    };\n\n    const updatedFilterScopeMap = getRevertedFilterScope({\n      checked,\n      filterFields: editingList,\n      filterScopeMap,\n    });\n\n    this.setState(() => ({\n      filterScopeMap: {\n        ...filterScopeMap,\n        ...updatedFilterScopeMap,\n        [key]: updatedEntry,\n      },\n    }));\n  }\n\n  onExpandFilterScope(expanded = []) {\n    const { activeFilterField, checkedFilterFields, filterScopeMap } =\n      this.state;\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n    const updatedEntry = {\n      ...filterScopeMap[key],\n      expanded,\n    };\n    this.setState(() => ({\n      filterScopeMap: {\n        ...filterScopeMap,\n        [key]: updatedEntry,\n      },\n    }));\n  }\n\n  onCheckFilterField(checkedFilterFields = []) {\n    const { layout } = this.props;\n    const { filterScopeMap } = this.state;\n    const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n      checkedFilterFields,\n      activeFilterField: null,\n      filterScopeMap,\n      layout,\n    });\n\n    this.setState(() => ({\n      activeFilterField: null,\n      checkedFilterFields,\n      filterScopeMap: {\n        ...filterScopeMap,\n        ...filterScopeTreeEntry,\n      },\n    }));\n  }\n\n  onExpandFilterField(expandedFilterIds = []) {\n    this.setState(() => ({\n      expandedFilterIds,\n    }));\n  }\n\n  onChangeFilterField(filterField = {}) {\n    const { layout } = this.props;\n    const nextActiveFilterField = filterField.value;\n    const {\n      activeFilterField: currentActiveFilterField,\n      checkedFilterFields,\n      filterScopeMap,\n    } = this.state;\n\n    // we allow single edit and multiple edit in the same view.\n    // if user click on the single filter field,\n    // will show filter scope for the single field.\n    // if user click on the same filter filed again,\n    // will toggle off the single filter field,\n    // and allow multi-edit all checked filter fields.\n    if (nextActiveFilterField === currentActiveFilterField) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: null,\n        filterScopeMap,\n        layout,\n      });\n\n      this.setState({\n        activeFilterField: null,\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry,\n        },\n      });\n    } else if (this.allfilterFields.includes(nextActiveFilterField)) {\n      const filterScopeTreeEntry = buildFilterScopeTreeEntry({\n        checkedFilterFields,\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap,\n        layout,\n      });\n\n      this.setState({\n        activeFilterField: nextActiveFilterField,\n        filterScopeMap: {\n          ...filterScopeMap,\n          ...filterScopeTreeEntry,\n        },\n      });\n    }\n  }\n\n  onSearchInputChange(e) {\n    this.setState({ searchText: e.target.value }, this.filterTree);\n  }\n\n  onClose() {\n    this.props.onCloseModal();\n  }\n\n  onSave() {\n    const { filterScopeMap } = this.state;\n\n    const allFilterFieldScopes = this.allfilterFields.reduce(\n      (map, filterKey) => {\n        const { nodes } = filterScopeMap[filterKey];\n        const checkedChartIds = filterScopeMap[filterKey].checked;\n\n        return {\n          ...map,\n          [filterKey]: getFilterScopeFromNodesTree({\n            filterKey,\n            nodes,\n            checkedChartIds,\n          }),\n        };\n      },\n      {},\n    );\n\n    this.props.updateDashboardFiltersScope(allFilterFieldScopes);\n    this.props.setUnsavedChanges(true);\n\n    // click Save button will do save and close modal\n    this.props.onCloseModal();\n  }\n\n  filterTree() {\n    // Reset nodes back to unfiltered state\n    if (!this.state.searchText) {\n      this.setState(prevState => {\n        const { activeFilterField, checkedFilterFields, filterScopeMap } =\n          prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields,\n        });\n\n        const updatedEntry = {\n          ...filterScopeMap[key],\n          nodesFiltered: filterScopeMap[key].nodes,\n        };\n        return {\n          filterScopeMap: {\n            ...filterScopeMap,\n            [key]: updatedEntry,\n          },\n        };\n      });\n    } else {\n      const updater = prevState => {\n        const { activeFilterField, checkedFilterFields, filterScopeMap } =\n          prevState;\n        const key = getKeyForFilterScopeTree({\n          activeFilterField,\n          checkedFilterFields,\n        });\n\n        const nodesFiltered = filterScopeMap[key].nodes.reduce(\n          this.filterNodes,\n          [],\n        );\n        const expanded = getFilterScopeParentNodes([...nodesFiltered]);\n        const updatedEntry = {\n          ...filterScopeMap[key],\n          nodesFiltered,\n          expanded,\n        };\n\n        return {\n          filterScopeMap: {\n            ...filterScopeMap,\n            [key]: updatedEntry,\n          },\n        };\n      };\n\n      this.setState(updater);\n    }\n  }\n\n  filterNodes(filtered = [], node = {}) {\n    const { searchText } = this.state;\n    const children = (node.children || []).reduce(this.filterNodes, []);\n\n    if (\n      // Node's label matches the search string\n      node.label.toLocaleLowerCase().indexOf(searchText.toLocaleLowerCase()) >\n        -1 ||\n      // Or a children has a matching node\n      children.length\n    ) {\n      filtered.push({ ...node, children });\n    }\n\n    return filtered;\n  }\n\n  renderFilterFieldList() {\n    const {\n      activeFilterField,\n      filterFieldNodes,\n      checkedFilterFields,\n      expandedFilterIds,\n    } = this.state;\n    return (\n      <FilterFieldTree\n        activeKey={activeFilterField}\n        nodes={filterFieldNodes}\n        checked={checkedFilterFields}\n        expanded={expandedFilterIds}\n        onClick={this.onChangeFilterField}\n        onCheck={this.onCheckFilterField}\n        onExpand={this.onExpandFilterField}\n      />\n    );\n  }\n\n  renderFilterScopeTree() {\n    const {\n      filterScopeMap,\n      activeFilterField,\n      checkedFilterFields,\n      searchText,\n    } = this.state;\n\n    const key = getKeyForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n\n    const selectedChartId = getSelectedChartIdForFilterScopeTree({\n      activeFilterField,\n      checkedFilterFields,\n    });\n    return (\n      <>\n        <input\n          className=\"filter-text scope-search multi-edit-mode\"\n          placeholder={t('Search...')}\n          type=\"text\"\n          value={searchText}\n          onChange={this.onSearchInputChange}\n        />\n        <FilterScopeTree\n          nodes={filterScopeMap[key].nodesFiltered}\n          checked={filterScopeMap[key].checked}\n          expanded={filterScopeMap[key].expanded}\n          onCheck={this.onCheckFilterScope}\n          onExpand={this.onExpandFilterScope}\n          // pass selectedFilterId prop to FilterScopeTree component,\n          // to hide checkbox for selected filter field itself\n          selectedChartId={selectedChartId}\n        />\n      </>\n    );\n  }\n\n  renderEditingFiltersName() {\n    const { dashboardFilters } = this.props;\n    const { activeFilterField, checkedFilterFields } = this.state;\n    const currentFilterLabels = []\n      .concat(activeFilterField || checkedFilterFields)\n      .map(key => {\n        const { chartId, column } = getChartIdAndColumnFromFilterKey(key);\n        return dashboardFilters[chartId].labels[column] || column;\n      });\n\n    return (\n      <div className=\"selected-fields multi-edit-mode\">\n        {currentFilterLabels.length === 0 && t('No filter is selected.')}\n        {currentFilterLabels.length === 1 && t('Editing 1 filter:')}\n        {currentFilterLabels.length > 1 &&\n          t('Batch editing %d filters:', currentFilterLabels.length)}\n        <span className=\"selected-scopes\">\n          {currentFilterLabels.join(', ')}\n        </span>\n      </div>\n    );\n  }\n\n  render() {\n    const { showSelector } = this.state;\n\n    return (\n      <ScopeContainer>\n        <ScopeHeader>\n          <h4>{t('Configure filter scopes')}</h4>\n          {showSelector && this.renderEditingFiltersName()}\n        </ScopeHeader>\n\n        <ScopeBody className=\"filter-scope-body\">\n          {!showSelector ? (\n            <div className=\"warning-message\">\n              {t('There are no filters in this dashboard.')}\n            </div>\n          ) : (\n            <ScopeSelector className=\"filters-scope-selector\">\n              <div className={cx('filter-field-pane multi-edit-mode')}>\n                {this.renderFilterFieldList()}\n              </div>\n              <div className=\"filter-scope-pane multi-edit-mode\">\n                {this.renderFilterScopeTree()}\n              </div>\n            </ScopeSelector>\n          )}\n        </ScopeBody>\n\n        <ActionsContainer>\n          <Button buttonSize=\"small\" onClick={this.onClose}>\n            {t('Close')}\n          </Button>\n          {showSelector && (\n            <Button\n              buttonSize=\"small\"\n              buttonStyle=\"primary\"\n              onClick={this.onSave}\n            >\n              {t('Save')}\n            </Button>\n          )}\n        </ActionsContainer>\n      </ScopeContainer>\n    );\n  }\n}\n\nFilterScopeSelector.propTypes = propTypes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}