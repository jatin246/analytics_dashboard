{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport { styled } from '@superset-ui/core';\nimport { sharedControlComponents } from '@superset-ui/chart-controls';\nimport { AreaChartStackControlOptions } from '../constants';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst { RadioButtonControl } = sharedControlComponents;\nconst ExtraControlsWrapper = styled.div`\n  text-align: center;\n`;\nexport function useExtraControl({ formData, setControlValue }) {\n  const { stack, area } = formData;\n  const [extraValue, setExtraValue] = useState(stack != null ? stack : undefined);\n  useEffect(() => {\n    setExtraValue(stack);\n  }, [stack]);\n  const extraControlsOptions = useMemo(() => {\n    if (area) {\n      return AreaChartStackControlOptions;\n    }\n    return [];\n  }, [area]);\n  const extraControlsHandler = useCallback((value) => {\n    if (area) {\n      if (setControlValue) {\n        setControlValue('stack', value);\n        setExtraValue(value);\n      }\n    }\n  }, [area, setControlValue]);\n  return {\n    extraControlsOptions,\n    extraControlsHandler,\n    extraValue\n  };\n}__signature__(useExtraControl, \"useState{[extraValue, setExtraValue](stack ?? undefined)}\\nuseEffect{}\\nuseMemo{extraControlsOptions}\\nuseCallback{extraControlsHandler}\");\nexport function ExtraControls({ formData, setControlValue }) {\n  const { extraControlsOptions, extraControlsHandler, extraValue } = useExtraControl({\n    formData,\n    setControlValue\n  });\n  if (!formData.showExtraControls) {\n    return null;\n  }\n  return _jsx(ExtraControlsWrapper, { children:\n    _jsx(RadioButtonControl, { options: extraControlsOptions, onChange: extraControlsHandler, value: extraValue }) }\n  );\n}__signature__(ExtraControls, \"useExtraControl{{ extraControlsOptions, extraControlsHandler, extraValue }}\", () => [useExtraControl]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(RadioButtonControl, \"RadioButtonControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/components/ExtraControls.tsx\");reactHotLoader.register(ExtraControlsWrapper, \"ExtraControlsWrapper\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/components/ExtraControls.tsx\");reactHotLoader.register(useExtraControl, \"useExtraControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/components/ExtraControls.tsx\");reactHotLoader.register(ExtraControls, \"ExtraControls\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/components/ExtraControls.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useEffect","useMemo","useCallback","styled","sharedControlComponents","AreaChartStackControlOptions","jsx","_jsx","RadioButtonControl","ExtraControlsWrapper","div","useExtraControl","formData","setControlValue","stack","area","extraValue","setExtraValue","undefined","extraControlsOptions","extraControlsHandler","value","__signature__","ExtraControls","showExtraControls","children","options","onChange","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/plugin-chart-echarts/src/components/ExtraControls.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport { HandlerFunction, JsonValue, styled } from '@superset-ui/core';\nimport {\n  RadioButtonOption,\n  sharedControlComponents,\n} from '@superset-ui/chart-controls';\nimport { AreaChartStackControlOptions } from '../constants';\n\nconst { RadioButtonControl } = sharedControlComponents;\n\nconst ExtraControlsWrapper = styled.div`\n  text-align: center;\n`;\n\nexport function useExtraControl<\n  F extends {\n    stack: any;\n    area: boolean;\n  },\n>({\n  formData,\n  setControlValue,\n}: {\n  formData: F;\n  setControlValue?: HandlerFunction;\n}) {\n  const { stack, area } = formData;\n  const [extraValue, setExtraValue] = useState<JsonValue | undefined>(\n    stack ?? undefined,\n  );\n\n  useEffect(() => {\n    setExtraValue(stack);\n  }, [stack]);\n\n  const extraControlsOptions = useMemo(() => {\n    if (area) {\n      return AreaChartStackControlOptions;\n    }\n    return [];\n  }, [area]);\n\n  const extraControlsHandler = useCallback(\n    (value: RadioButtonOption[0]) => {\n      if (area) {\n        if (setControlValue) {\n          setControlValue('stack', value);\n          setExtraValue(value);\n        }\n      }\n    },\n    [area, setControlValue],\n  );\n\n  return {\n    extraControlsOptions,\n    extraControlsHandler,\n    extraValue,\n  };\n}\n\nexport function ExtraControls<\n  F extends {\n    stack: any;\n    area: boolean;\n    showExtraControls: boolean;\n  },\n>({\n  formData,\n  setControlValue,\n}: {\n  formData: F;\n  setControlValue?: HandlerFunction;\n}) {\n  const { extraControlsOptions, extraControlsHandler, extraValue } =\n    useExtraControl<F>({\n      formData,\n      setControlValue,\n    });\n\n  if (!formData.showExtraControls) {\n    return null;\n  }\n\n  return (\n    <ExtraControlsWrapper>\n      <RadioButtonControl\n        options={extraControlsOptions}\n        onChange={extraControlsHandler}\n        value={extraValue}\n      />\n    </ExtraControlsWrapper>\n  );\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AACjE,SAAqCC,MAAM,QAAQ,mBAAmB;AACtE,SAEEC,uBAAuB,QAClB,6BAA6B;AACpC,SAASC,4BAA4B,QAAQ,cAAc,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAE5D,MAAM,EAAEC,kBAAkB,EAAE,GAAGJ,uBAAuB;AAEtD,MAAMK,oBAAoB,GAAGN,MAAM,CAACO,GAAG;;CAEtC;AAED,OAAM,SAAUC,eAAeA,CAK7B,EACAC,QAAQ,EACRC,eAAe,EAIhB;EACC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAE,GAAGH,QAAQ;EAChC,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAC1Ce,KAAK,WAALA,KAAK,GAAII,SAAS,CACnB;EAEDlB,SAAS,CAAC,MAAK;IACbiB,aAAa,CAACH,KAAK,CAAC;EACtB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMK,oBAAoB,GAAGlB,OAAO,CAAC,MAAK;IACxC,IAAIc,IAAI,EAAE;MACR,OAAOV,4BAA4B;;IAErC,OAAO,EAAE;EACX,CAAC,EAAE,CAACU,IAAI,CAAC,CAAC;EAEV,MAAMK,oBAAoB,GAAGlB,WAAW,CACtC,CAACmB,KAA2B,KAAI;IAC9B,IAAIN,IAAI,EAAE;MACR,IAAIF,eAAe,EAAE;QACnBA,eAAe,CAAC,OAAO,EAAEQ,KAAK,CAAC;QAC/BJ,aAAa,CAACI,KAAK,CAAC;;;EAG1B,CAAC,EACD,CAACN,IAAI,EAAEF,eAAe,CAAC,CACxB;EAED,OAAO;IACLM,oBAAoB;IACpBC,oBAAoB;IACpBJ;GACD;AACH,CAACM,aAAA,CA7CeX,eAAe;AA+C/B,OAAM,SAAUY,aAAaA,CAM3B,EACAX,QAAQ,EACRC,eAAe,EAIhB;EACC,MAAM,EAAEM,oBAAoB,EAAEC,oBAAoB,EAAEJ,UAAU,EAAE,GAC9DL,eAAe,CAAI;IACjBC,QAAQ;IACRC;GACD,CAAC;EAEJ,IAAI,CAACD,QAAQ,CAACY,iBAAiB,EAAE;IAC/B,OAAO,IAAI;;EAGb,OACEjB,IAAA,CAACE,oBAAoB,IAAAgB,QAAA;IACnBlB,IAAA,CAACC,kBAAkB,IACjBkB,OAAO,EAAEP,oBAAqB,EAC9BQ,QAAQ,EAAEP,oBAAqB,EAC/BC,KAAK,EAAEL,UAAW,GAEtB;EAAsB,CAAC;AAE3B,CAACM,aAAA,CAhCeC,aAAa,wFAczBZ,eAAe,sBAAAiB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAZ,SAAA,MAAAU,cAAA,WAAAA,cAAA,CAAAG,QAAA,CAnEXvB,kBAAkB,gHAAAoB,cAAA,CAAAG,QAAA,CAEpBtB,oBAAoB,kHAAAmB,cAAA,CAAAG,QAAA,CAIVpB,eAAe,6GAAAiB,cAAA,CAAAG,QAAA,CA+CfR,aAAa,mIAAAS,WAAA,UAAAH,oBAAA,mBAAAA,oBAAA,CAAAG,WAAA,GAAAd,SAAA,CAAAc,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}