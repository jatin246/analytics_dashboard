{"ast":null,"code":"import _pickBy from \"lodash/pickBy\";import _debounce from \"lodash/debounce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList as List } from 'react-window';\nimport { createFilter } from 'react-search-input';\nimport { t, styled, css } from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Select } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport {\n  LocalStorageKeys,\n  getItem,\n  setItem } from\n'src/utils/localStorageHelpers';\nimport {\n  CHART_TYPE,\n  NEW_COMPONENT_SOURCE_TYPE } from\n'src/dashboard/util/componentTypes';\nimport {\n  NEW_CHART_ID,\n  NEW_COMPONENTS_SOURCE_ID } from\n'src/dashboard/util/constants';\nimport { slicePropShape } from 'src/dashboard/util/propShapes';\n\nimport Checkbox from 'src/components/Checkbox';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport AddSliceCard from './AddSliceCard';\nimport AddSliceDragPreview from './dnd/AddSliceDragPreview';\nimport DragDroppable from './dnd/DragDroppable';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  fetchSlices: PropTypes.func.isRequired,\n  updateSlices: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  lastUpdated: PropTypes.number.isRequired,\n  errorMessage: PropTypes.string,\n  userId: PropTypes.number.isRequired,\n  selectedSliceIds: PropTypes.arrayOf(PropTypes.number),\n  editMode: PropTypes.bool,\n  dashboardId: PropTypes.number\n};\n\nconst defaultProps = {\n  selectedSliceIds: [],\n  editMode: false,\n  errorMessage: ''\n};\n\nconst KEYS_TO_FILTERS = ['slice_name', 'viz_type', 'datasource_name'];\nconst KEYS_TO_SORT = {\n  slice_name: t('name'),\n  viz_type: t('viz type'),\n  datasource_name: t('dataset'),\n  changed_on: t('recent')\n};\n\nexport const DEFAULT_SORT_KEY = 'changed_on';\n\nconst DEFAULT_CELL_HEIGHT = 128;\n\nconst Controls = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    flex-direction: row;\n    padding:\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 3}px\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 3}px;\n  `}\n`;\n\nconst StyledSelect = styled(Select)`\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  min-width: 150px;\n`;\n\nconst NewChartButtonContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    justify-content: flex-end;\n    padding-right: ${theme.gridUnit * 2}px;\n  `}\n`;\n\nconst NewChartButton = styled(Button)`\n  ${({ theme }) => css`\n    height: auto;\n    & > .anticon + span {\n      margin-left: 0;\n    }\n    & > [role='img']:first-of-type {\n      margin-right: ${theme.gridUnit}px;\n      padding-bottom: 1px;\n      line-height: 0;\n    }\n  `}\n`;\n\nexport const ChartList = styled.div`\n  flex-grow: 1;\n  min-height: 0;\n`;\n\nclass SliceAdder extends Component {\n  static sortByComparator(attr) {\n    const desc = attr === 'changed_on' ? -1 : 1;\n\n    return (a, b) => {\n      if (a[attr] < b[attr]) {\n        return -1 * desc;\n      }\n      if (a[attr] > b[attr]) {\n        return 1 * desc;\n      }\n      return 0;\n    };\n  }\n\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    handleChange = _debounce((value) => {\n      this.searchUpdated(value);\n      this.slicesRequest = this.props.fetchSlices(\n        this.userIdForFetch(),\n        value,\n        this.state.sortBy\n      );\n    }, 300);this.state = { filteredSlices: [], searchTerm: '', sortBy: DEFAULT_SORT_KEY, selectedSliceIdsSet: new Set(props.selectedSliceIds), showOnlyMyCharts: getItem(LocalStorageKeys.DashboardEditorShowOnlyMyCharts, true) };this.rowRenderer = this.rowRenderer.bind(this);this.searchUpdated = this.searchUpdated.bind(this);this.handleSelect = this.handleSelect.bind(this);this.userIdForFetch = this.userIdForFetch.bind(this);this.onShowOnlyMyCharts = this.onShowOnlyMyCharts.bind(this);}userIdForFetch() {return this.state.showOnlyMyCharts ? this.props.userId : undefined;}componentDidMount() {this.slicesRequest = this.props.fetchSlices(this.userIdForFetch());}UNSAFE_componentWillReceiveProps(nextProps) {const nextState = {};if (nextProps.lastUpdated !== this.props.lastUpdated) {nextState.filteredSlices = this.getFilteredSortedSlices(nextProps.slices, this.state.searchTerm, this.state.sortBy, this.state.showOnlyMyCharts);}if (nextProps.selectedSliceIds !== this.props.selectedSliceIds) {nextState.selectedSliceIdsSet = new Set(nextProps.selectedSliceIds);}if (Object.keys(nextState).length) {this.setState(nextState);}}componentWillUnmount() {// Clears the redux store keeping only selected items\n    const selectedSlices = _pickBy(this.props.slices, (value) => this.state.selectedSliceIdsSet.has(value.slice_id));this.props.updateSlices(selectedSlices);if (this.slicesRequest && this.slicesRequest.abort) {this.slicesRequest.abort();}}getFilteredSortedSlices(slices, searchTerm, sortBy, showOnlyMyCharts) {return Object.values(slices).filter((slice) => showOnlyMyCharts ? slice.owners && slice.owners.find((owner) => owner.id === this.props.userId) || slice.created_by && slice.created_by.id === this.props.userId : true).filter(createFilter(searchTerm, KEYS_TO_FILTERS)).sort(SliceAdder.sortByComparator(sortBy));}\n  searchUpdated(searchTerm) {\n    this.setState((prevState) => ({\n      searchTerm,\n      filteredSlices: this.getFilteredSortedSlices(\n        this.props.slices,\n        searchTerm,\n        prevState.sortBy,\n        prevState.showOnlyMyCharts\n      )\n    }));\n  }\n\n  handleSelect(sortBy) {\n    this.setState((prevState) => ({\n      sortBy,\n      filteredSlices: this.getFilteredSortedSlices(\n        this.props.slices,\n        prevState.searchTerm,\n        sortBy,\n        prevState.showOnlyMyCharts\n      )\n    }));\n    this.slicesRequest = this.props.fetchSlices(\n      this.userIdForFetch(),\n      this.state.searchTerm,\n      sortBy\n    );\n  }\n\n  rowRenderer({ key, index, style }) {\n    const { filteredSlices, selectedSliceIdsSet } = this.state;\n    const cellData = filteredSlices[index];\n    const isSelected = selectedSliceIdsSet.has(cellData.slice_id);\n    const type = CHART_TYPE;\n    const id = NEW_CHART_ID;\n\n    const meta = {\n      chartId: cellData.slice_id,\n      sliceName: cellData.slice_name\n    };\n    return (\n      _jsx(DragDroppable, {\n\n        component: { type, id, meta },\n        parentComponent: {\n          id: NEW_COMPONENTS_SOURCE_ID,\n          type: NEW_COMPONENT_SOURCE_TYPE\n        },\n        index: index,\n        depth: 0,\n        disableDragDrop: isSelected,\n        editMode: this.props.editMode\n        // we must use a custom drag preview within the List because\n        // it does not seem to work within a fixed-position container\n        , useEmptyDragPreview: true\n        // List library expect style props here\n        // actual style should be applied to nested AddSliceCard component\n        , style: {}, children:\n\n        ({ dragSourceRef }) =>\n        _jsx(AddSliceCard, {\n          innerRef: dragSourceRef,\n          style: style,\n          sliceName: cellData.slice_name,\n          lastModified: cellData.changed_on_humanized,\n          visType: cellData.viz_type,\n          datasourceUrl: cellData.datasource_url,\n          datasourceName: cellData.datasource_name,\n          thumbnailUrl: cellData.thumbnail_url,\n          isSelected: isSelected }\n        ) }, key\n\n      ));\n\n  }\n\n  onShowOnlyMyCharts(showOnlyMyCharts) {\n    if (!showOnlyMyCharts) {\n      this.slicesRequest = this.props.fetchSlices(\n        undefined,\n        this.state.searchTerm,\n        this.state.sortBy\n      );\n    }\n    this.setState((prevState) => ({\n      showOnlyMyCharts,\n      filteredSlices: this.getFilteredSortedSlices(\n        this.props.slices,\n        prevState.searchTerm,\n        prevState.sortBy,\n        showOnlyMyCharts\n      )\n    }));\n    setItem(LocalStorageKeys.DashboardEditorShowOnlyMyCharts, showOnlyMyCharts);\n  }\n\n  render() {\n    return (\n      _jsxs(\"div\", {\n        css: css`\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n        `, children: [\n\n        _jsx(NewChartButtonContainer, { children:\n          _jsxs(NewChartButton, {\n            buttonStyle: \"link\",\n            buttonSize: \"xsmall\",\n            onClick: () =>\n            window.open(\n              `/chart/add?dashboard_id=${this.props.dashboardId}`,\n              '_blank',\n              'noopener noreferrer'\n            ), children: [\n\n\n            _jsx(Icons.PlusSmall, {}),\n            t('Create new chart')] }\n          ) }\n        ),\n        _jsxs(Controls, { children: [\n          _jsx(Input, {\n            placeholder:\n            this.state.showOnlyMyCharts ?\n            t('Filter your charts') :\n            t('Filter charts'),\n\n            className: \"search-input\",\n            onChange: (ev) => this.handleChange(ev.target.value),\n            \"data-test\": \"dashboard-charts-filter-search-input\" }\n          ),\n          _jsx(StyledSelect, {\n            id: \"slice-adder-sortby\",\n            value: this.state.sortBy,\n            onChange: this.handleSelect,\n            options: Object.entries(KEYS_TO_SORT).map(([key, label]) => ({\n              label: t('Sort by %s', label),\n              value: key\n            })),\n            placeholder: t('Sort by') }\n          )] }\n        ),\n        _jsxs(\"div\", {\n          css: (theme) => css`\n            display: flex;\n            flex-direction: row;\n            justify-content: flex-start;\n            align-items: center;\n            gap: ${theme.gridUnit}px;\n            padding: 0 ${theme.gridUnit * 3}px ${theme.gridUnit * 4}px\n              ${theme.gridUnit * 3}px;\n          `, children: [\n\n          _jsx(Checkbox, {\n            onChange: this.onShowOnlyMyCharts,\n            checked: this.state.showOnlyMyCharts }\n          ),\n          t('Show only my charts'),\n          _jsx(InfoTooltipWithTrigger, {\n            placement: \"top\",\n            tooltip: t(\n              `You can choose to display all charts that you have access to or only the ones you own.\n              Your filter selection will be saved and remain active until you choose to change it.`\n            ) }\n          )] }\n        ),\n        this.props.isLoading && _jsx(Loading, {}),\n        !this.props.isLoading && this.state.filteredSlices.length > 0 &&\n        _jsx(ChartList, { children:\n          _jsx(AutoSizer, { children:\n            ({ height, width }) =>\n            _jsx(List, {\n              width: width,\n              height: height,\n              itemCount: this.state.filteredSlices.length,\n              itemSize: DEFAULT_CELL_HEIGHT,\n              searchTerm: this.state.searchTerm,\n              sortBy: this.state.sortBy,\n              selectedSliceIds: this.props.selectedSliceIds, children:\n\n              this.rowRenderer }\n            ) }\n\n          ) }\n        ),\n\n        this.props.errorMessage &&\n        _jsx(\"div\", {\n          css: css`\n              padding: 16px;\n            `, children:\n\n          this.props.errorMessage }\n        ),\n\n\n        _jsx(AddSliceDragPreview, { slices: this.state.filteredSlices })] }\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nSliceAdder.propTypes = propTypes;\nSliceAdder.defaultProps = defaultProps;const _default =\n\nSliceAdder;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(KEYS_TO_FILTERS, \"KEYS_TO_FILTERS\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(KEYS_TO_SORT, \"KEYS_TO_SORT\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(DEFAULT_SORT_KEY, \"DEFAULT_SORT_KEY\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(DEFAULT_CELL_HEIGHT, \"DEFAULT_CELL_HEIGHT\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(Controls, \"Controls\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(StyledSelect, \"StyledSelect\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(NewChartButtonContainer, \"NewChartButtonContainer\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(NewChartButton, \"NewChartButton\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(ChartList, \"ChartList\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(SliceAdder, \"SliceAdder\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/SliceAdder.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Component","PropTypes","AutoSizer","FixedSizeList","List","createFilter","t","styled","css","Input","Select","Loading","Button","Icons","LocalStorageKeys","getItem","setItem","CHART_TYPE","NEW_COMPONENT_SOURCE_TYPE","NEW_CHART_ID","NEW_COMPONENTS_SOURCE_ID","slicePropShape","Checkbox","InfoTooltipWithTrigger","AddSliceCard","AddSliceDragPreview","DragDroppable","jsx","_jsx","jsxs","_jsxs","propTypes","fetchSlices","func","isRequired","updateSlices","isLoading","bool","slices","objectOf","lastUpdated","number","errorMessage","string","userId","selectedSliceIds","arrayOf","editMode","dashboardId","defaultProps","KEYS_TO_FILTERS","KEYS_TO_SORT","slice_name","viz_type","datasource_name","changed_on","DEFAULT_SORT_KEY","DEFAULT_CELL_HEIGHT","Controls","div","theme","gridUnit","StyledSelect","NewChartButtonContainer","NewChartButton","ChartList","SliceAdder","sortByComparator","attr","desc","a","b","constructor","props","handleChange","_debounce","value","searchUpdated","slicesRequest","userIdForFetch","state","sortBy","filteredSlices","searchTerm","selectedSliceIdsSet","Set","showOnlyMyCharts","DashboardEditorShowOnlyMyCharts","rowRenderer","bind","handleSelect","onShowOnlyMyCharts","undefined","componentDidMount","UNSAFE_componentWillReceiveProps","nextProps","nextState","getFilteredSortedSlices","Object","keys","length","setState","componentWillUnmount","selectedSlices","_pickBy","has","slice_id","abort","values","filter","slice","owners","find","owner","id","created_by","sort","prevState","key","index","style","cellData","isSelected","type","meta","chartId","sliceName","component","parentComponent","depth","disableDragDrop","useEmptyDragPreview","children","dragSourceRef","innerRef","lastModified","changed_on_humanized","visType","datasourceUrl","datasource_url","datasourceName","thumbnailUrl","thumbnail_url","render","buttonStyle","buttonSize","onClick","window","open","PlusSmall","placeholder","className","onChange","ev","target","options","entries","map","label","checked","placement","tooltip","height","width","itemCount","itemSize","__reactstandin__regenerateByEval","code","eval","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/src/dashboard/components/SliceAdder.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList as List } from 'react-window';\nimport { createFilter } from 'react-search-input';\nimport { t, styled, css } from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Select } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport {\n  LocalStorageKeys,\n  getItem,\n  setItem,\n} from 'src/utils/localStorageHelpers';\nimport {\n  CHART_TYPE,\n  NEW_COMPONENT_SOURCE_TYPE,\n} from 'src/dashboard/util/componentTypes';\nimport {\n  NEW_CHART_ID,\n  NEW_COMPONENTS_SOURCE_ID,\n} from 'src/dashboard/util/constants';\nimport { slicePropShape } from 'src/dashboard/util/propShapes';\nimport { debounce, pickBy } from 'lodash';\nimport Checkbox from 'src/components/Checkbox';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport AddSliceCard from './AddSliceCard';\nimport AddSliceDragPreview from './dnd/AddSliceDragPreview';\nimport DragDroppable from './dnd/DragDroppable';\n\nconst propTypes = {\n  fetchSlices: PropTypes.func.isRequired,\n  updateSlices: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  slices: PropTypes.objectOf(slicePropShape).isRequired,\n  lastUpdated: PropTypes.number.isRequired,\n  errorMessage: PropTypes.string,\n  userId: PropTypes.number.isRequired,\n  selectedSliceIds: PropTypes.arrayOf(PropTypes.number),\n  editMode: PropTypes.bool,\n  dashboardId: PropTypes.number,\n};\n\nconst defaultProps = {\n  selectedSliceIds: [],\n  editMode: false,\n  errorMessage: '',\n};\n\nconst KEYS_TO_FILTERS = ['slice_name', 'viz_type', 'datasource_name'];\nconst KEYS_TO_SORT = {\n  slice_name: t('name'),\n  viz_type: t('viz type'),\n  datasource_name: t('dataset'),\n  changed_on: t('recent'),\n};\n\nexport const DEFAULT_SORT_KEY = 'changed_on';\n\nconst DEFAULT_CELL_HEIGHT = 128;\n\nconst Controls = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    flex-direction: row;\n    padding:\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 3}px\n      ${theme.gridUnit * 4}px\n      ${theme.gridUnit * 3}px;\n  `}\n`;\n\nconst StyledSelect = styled(Select)`\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n  min-width: 150px;\n`;\n\nconst NewChartButtonContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    justify-content: flex-end;\n    padding-right: ${theme.gridUnit * 2}px;\n  `}\n`;\n\nconst NewChartButton = styled(Button)`\n  ${({ theme }) => css`\n    height: auto;\n    & > .anticon + span {\n      margin-left: 0;\n    }\n    & > [role='img']:first-of-type {\n      margin-right: ${theme.gridUnit}px;\n      padding-bottom: 1px;\n      line-height: 0;\n    }\n  `}\n`;\n\nexport const ChartList = styled.div`\n  flex-grow: 1;\n  min-height: 0;\n`;\n\nclass SliceAdder extends Component {\n  static sortByComparator(attr) {\n    const desc = attr === 'changed_on' ? -1 : 1;\n\n    return (a, b) => {\n      if (a[attr] < b[attr]) {\n        return -1 * desc;\n      }\n      if (a[attr] > b[attr]) {\n        return 1 * desc;\n      }\n      return 0;\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredSlices: [],\n      searchTerm: '',\n      sortBy: DEFAULT_SORT_KEY,\n      selectedSliceIdsSet: new Set(props.selectedSliceIds),\n      showOnlyMyCharts: getItem(\n        LocalStorageKeys.DashboardEditorShowOnlyMyCharts,\n        true,\n      ),\n    };\n    this.rowRenderer = this.rowRenderer.bind(this);\n    this.searchUpdated = this.searchUpdated.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.userIdForFetch = this.userIdForFetch.bind(this);\n    this.onShowOnlyMyCharts = this.onShowOnlyMyCharts.bind(this);\n  }\n\n  userIdForFetch() {\n    return this.state.showOnlyMyCharts ? this.props.userId : undefined;\n  }\n\n  componentDidMount() {\n    this.slicesRequest = this.props.fetchSlices(this.userIdForFetch());\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextState = {};\n    if (nextProps.lastUpdated !== this.props.lastUpdated) {\n      nextState.filteredSlices = this.getFilteredSortedSlices(\n        nextProps.slices,\n        this.state.searchTerm,\n        this.state.sortBy,\n        this.state.showOnlyMyCharts,\n      );\n    }\n\n    if (nextProps.selectedSliceIds !== this.props.selectedSliceIds) {\n      nextState.selectedSliceIdsSet = new Set(nextProps.selectedSliceIds);\n    }\n\n    if (Object.keys(nextState).length) {\n      this.setState(nextState);\n    }\n  }\n\n  componentWillUnmount() {\n    // Clears the redux store keeping only selected items\n    const selectedSlices = pickBy(this.props.slices, value =>\n      this.state.selectedSliceIdsSet.has(value.slice_id),\n    );\n    this.props.updateSlices(selectedSlices);\n    if (this.slicesRequest && this.slicesRequest.abort) {\n      this.slicesRequest.abort();\n    }\n  }\n\n  getFilteredSortedSlices(slices, searchTerm, sortBy, showOnlyMyCharts) {\n    return Object.values(slices)\n      .filter(slice =>\n        showOnlyMyCharts\n          ? (slice.owners &&\n              slice.owners.find(owner => owner.id === this.props.userId)) ||\n            (slice.created_by && slice.created_by.id === this.props.userId)\n          : true,\n      )\n      .filter(createFilter(searchTerm, KEYS_TO_FILTERS))\n      .sort(SliceAdder.sortByComparator(sortBy));\n  }\n\n  handleChange = debounce(value => {\n    this.searchUpdated(value);\n    this.slicesRequest = this.props.fetchSlices(\n      this.userIdForFetch(),\n      value,\n      this.state.sortBy,\n    );\n  }, 300);\n\n  searchUpdated(searchTerm) {\n    this.setState(prevState => ({\n      searchTerm,\n      filteredSlices: this.getFilteredSortedSlices(\n        this.props.slices,\n        searchTerm,\n        prevState.sortBy,\n        prevState.showOnlyMyCharts,\n      ),\n    }));\n  }\n\n  handleSelect(sortBy) {\n    this.setState(prevState => ({\n      sortBy,\n      filteredSlices: this.getFilteredSortedSlices(\n        this.props.slices,\n        prevState.searchTerm,\n        sortBy,\n        prevState.showOnlyMyCharts,\n      ),\n    }));\n    this.slicesRequest = this.props.fetchSlices(\n      this.userIdForFetch(),\n      this.state.searchTerm,\n      sortBy,\n    );\n  }\n\n  rowRenderer({ key, index, style }) {\n    const { filteredSlices, selectedSliceIdsSet } = this.state;\n    const cellData = filteredSlices[index];\n    const isSelected = selectedSliceIdsSet.has(cellData.slice_id);\n    const type = CHART_TYPE;\n    const id = NEW_CHART_ID;\n\n    const meta = {\n      chartId: cellData.slice_id,\n      sliceName: cellData.slice_name,\n    };\n    return (\n      <DragDroppable\n        key={key}\n        component={{ type, id, meta }}\n        parentComponent={{\n          id: NEW_COMPONENTS_SOURCE_ID,\n          type: NEW_COMPONENT_SOURCE_TYPE,\n        }}\n        index={index}\n        depth={0}\n        disableDragDrop={isSelected}\n        editMode={this.props.editMode}\n        // we must use a custom drag preview within the List because\n        // it does not seem to work within a fixed-position container\n        useEmptyDragPreview\n        // List library expect style props here\n        // actual style should be applied to nested AddSliceCard component\n        style={{}}\n      >\n        {({ dragSourceRef }) => (\n          <AddSliceCard\n            innerRef={dragSourceRef}\n            style={style}\n            sliceName={cellData.slice_name}\n            lastModified={cellData.changed_on_humanized}\n            visType={cellData.viz_type}\n            datasourceUrl={cellData.datasource_url}\n            datasourceName={cellData.datasource_name}\n            thumbnailUrl={cellData.thumbnail_url}\n            isSelected={isSelected}\n          />\n        )}\n      </DragDroppable>\n    );\n  }\n\n  onShowOnlyMyCharts(showOnlyMyCharts) {\n    if (!showOnlyMyCharts) {\n      this.slicesRequest = this.props.fetchSlices(\n        undefined,\n        this.state.searchTerm,\n        this.state.sortBy,\n      );\n    }\n    this.setState(prevState => ({\n      showOnlyMyCharts,\n      filteredSlices: this.getFilteredSortedSlices(\n        this.props.slices,\n        prevState.searchTerm,\n        prevState.sortBy,\n        showOnlyMyCharts,\n      ),\n    }));\n    setItem(LocalStorageKeys.DashboardEditorShowOnlyMyCharts, showOnlyMyCharts);\n  }\n\n  render() {\n    return (\n      <div\n        css={css`\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n        `}\n      >\n        <NewChartButtonContainer>\n          <NewChartButton\n            buttonStyle=\"link\"\n            buttonSize=\"xsmall\"\n            onClick={() =>\n              window.open(\n                `/chart/add?dashboard_id=${this.props.dashboardId}`,\n                '_blank',\n                'noopener noreferrer',\n              )\n            }\n          >\n            <Icons.PlusSmall />\n            {t('Create new chart')}\n          </NewChartButton>\n        </NewChartButtonContainer>\n        <Controls>\n          <Input\n            placeholder={\n              this.state.showOnlyMyCharts\n                ? t('Filter your charts')\n                : t('Filter charts')\n            }\n            className=\"search-input\"\n            onChange={ev => this.handleChange(ev.target.value)}\n            data-test=\"dashboard-charts-filter-search-input\"\n          />\n          <StyledSelect\n            id=\"slice-adder-sortby\"\n            value={this.state.sortBy}\n            onChange={this.handleSelect}\n            options={Object.entries(KEYS_TO_SORT).map(([key, label]) => ({\n              label: t('Sort by %s', label),\n              value: key,\n            }))}\n            placeholder={t('Sort by')}\n          />\n        </Controls>\n        <div\n          css={theme => css`\n            display: flex;\n            flex-direction: row;\n            justify-content: flex-start;\n            align-items: center;\n            gap: ${theme.gridUnit}px;\n            padding: 0 ${theme.gridUnit * 3}px ${theme.gridUnit * 4}px\n              ${theme.gridUnit * 3}px;\n          `}\n        >\n          <Checkbox\n            onChange={this.onShowOnlyMyCharts}\n            checked={this.state.showOnlyMyCharts}\n          />\n          {t('Show only my charts')}\n          <InfoTooltipWithTrigger\n            placement=\"top\"\n            tooltip={t(\n              `You can choose to display all charts that you have access to or only the ones you own.\n              Your filter selection will be saved and remain active until you choose to change it.`,\n            )}\n          />\n        </div>\n        {this.props.isLoading && <Loading />}\n        {!this.props.isLoading && this.state.filteredSlices.length > 0 && (\n          <ChartList>\n            <AutoSizer>\n              {({ height, width }) => (\n                <List\n                  width={width}\n                  height={height}\n                  itemCount={this.state.filteredSlices.length}\n                  itemSize={DEFAULT_CELL_HEIGHT}\n                  searchTerm={this.state.searchTerm}\n                  sortBy={this.state.sortBy}\n                  selectedSliceIds={this.props.selectedSliceIds}\n                >\n                  {this.rowRenderer}\n                </List>\n              )}\n            </AutoSizer>\n          </ChartList>\n        )}\n        {this.props.errorMessage && (\n          <div\n            css={css`\n              padding: 16px;\n            `}\n          >\n            {this.props.errorMessage}\n          </div>\n        )}\n        {/* Drag preview is just a single fixed-position element */}\n        <AddSliceDragPreview slices={this.state.filteredSlices} />\n      </div>\n    );\n  }\n}\n\nSliceAdder.propTypes = propTypes;\nSliceAdder.defaultProps = defaultProps;\n\nexport default SliceAdder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}