{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, css } from '@superset-ui/core';\nimport ControlHeader from '../ControlHeader';\nimport Checkbox from '../../../components/Checkbox';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  value: PropTypes.bool,\n  label: PropTypes.string,\n  onChange: PropTypes.func\n};\n\nconst defaultProps = {\n  value: false,\n  onChange: () => {}\n};\n\nconst CheckBoxControlWrapper = styled.div`\n  ${({ theme }) => css`\n    .ControlHeader label {\n      color: ${theme.colors.grayscale.dark1};\n    }\n    span[role='checkbox'] {\n      padding-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\n\nexport default class CheckboxControl extends Component {\n  onChange() {\n    this.props.onChange(!this.props.value);\n  }\n\n  renderCheckbox() {\n    return (\n      _jsx(Checkbox, {\n        onChange: this.onChange.bind(this),\n        checked: !!this.props.value }\n      ));\n\n  }\n\n  render() {\n    if (this.props.label) {\n      return (\n        _jsx(CheckBoxControlWrapper, { children:\n          _jsx(ControlHeader, { ...\n            this.props,\n            leftNode: this.renderCheckbox(),\n            onClick: this.onChange.bind(this) }\n          ) }\n        ));\n\n    }\n    return this.renderCheckbox();\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}CheckboxControl.propTypes = propTypes;\nCheckboxControl.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/controls/CheckboxControl.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/explore/components/controls/CheckboxControl.jsx\");reactHotLoader.register(CheckBoxControlWrapper, \"CheckBoxControlWrapper\", \"/app/superset-frontend/src/explore/components/controls/CheckboxControl.jsx\");reactHotLoader.register(CheckboxControl, \"CheckboxControl\", \"/app/superset-frontend/src/explore/components/controls/CheckboxControl.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["Component","PropTypes","styled","css","ControlHeader","Checkbox","jsx","_jsx","propTypes","value","bool","label","string","onChange","func","defaultProps","CheckBoxControlWrapper","div","theme","colors","grayscale","dark1","gridUnit","CheckboxControl","props","renderCheckbox","bind","checked","render","children","leftNode","onClick","__reactstandin__regenerateByEval","key","code","eval","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/controls/CheckboxControl.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, css } from '@superset-ui/core';\nimport ControlHeader from '../ControlHeader';\nimport Checkbox from '../../../components/Checkbox';\n\nconst propTypes = {\n  value: PropTypes.bool,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst defaultProps = {\n  value: false,\n  onChange: () => {},\n};\n\nconst CheckBoxControlWrapper = styled.div`\n  ${({ theme }) => css`\n    .ControlHeader label {\n      color: ${theme.colors.grayscale.dark1};\n    }\n    span[role='checkbox'] {\n      padding-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\n\nexport default class CheckboxControl extends Component {\n  onChange() {\n    this.props.onChange(!this.props.value);\n  }\n\n  renderCheckbox() {\n    return (\n      <Checkbox\n        onChange={this.onChange.bind(this)}\n        checked={!!this.props.value}\n      />\n    );\n  }\n\n  render() {\n    if (this.props.label) {\n      return (\n        <CheckBoxControlWrapper>\n          <ControlHeader\n            {...this.props}\n            leftNode={this.renderCheckbox()}\n            onClick={this.onChange.bind(this)}\n          />\n        </CheckBoxControlWrapper>\n      );\n    }\n    return this.renderCheckbox();\n  }\n}\nCheckboxControl.propTypes = propTypes;\nCheckboxControl.defaultProps = defaultProps;\n"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,EAAEC,GAAG,QAAQ,mBAAmB;AAC/C,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,8BAA8B,CAAC,SAAAC,GAAA,IAAAC,IAAA;;AAEpD,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAER,SAAS,CAACS,IAAI;EACrBC,KAAK,EAAEV,SAAS,CAACW,MAAM;EACvBC,QAAQ,EAAEZ,SAAS,CAACa;AACtB,CAAC;;AAED,MAAMC,YAAY,GAAG;EACnBN,KAAK,EAAE,KAAK;EACZI,QAAQ,EAAEA,CAAA,KAAM,CAAC;AACnB,CAAC;;AAED,MAAMG,sBAAsB,GAAGd,MAAM,CAACe,GAAG;AACzC,IAAI,CAAC,EAAEC,KAAK,CAAC,CAAC,KAAKf,GAAG;AACtB;AACA,eAAee,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,KAAK;AAC3C;AACA;AACA,uBAAuBH,KAAK,CAACI,QAAQ,GAAG,CAAC;AACzC;AACA,GAAG;AACH,CAAC;;AAED,eAAe,MAAMC,eAAe,SAASvB,SAAS,CAAC;EACrDa,QAAQA,CAAA,EAAG;IACT,IAAI,CAACW,KAAK,CAACX,QAAQ,CAAC,CAAC,IAAI,CAACW,KAAK,CAACf,KAAK,CAAC;EACxC;;EAEAgB,cAAcA,CAAA,EAAG;IACf;MACElB,IAAA,CAACF,QAAQ;QACPQ,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAACa,IAAI,CAAC,IAAI,CAAE;QACnCC,OAAO,EAAE,CAAC,CAAC,IAAI,CAACH,KAAK,CAACf,KAAM;MAC7B,CAAC;;EAEN;;EAEAmB,MAAMA,CAAA,EAAG;IACP,IAAI,IAAI,CAACJ,KAAK,CAACb,KAAK,EAAE;MACpB;QACEJ,IAAA,CAACS,sBAAsB,IAAAa,QAAA;UACrBtB,IAAA,CAACH,aAAa;YACR,IAAI,CAACoB,KAAK;YACdM,QAAQ,EAAE,IAAI,CAACL,cAAc,CAAC,CAAE;YAChCM,OAAO,EAAE,IAAI,CAAClB,QAAQ,CAACa,IAAI,CAAC,IAAI,CAAE;UACnC,CAAC;QACoB,CAAC;;IAE7B;IACA,OAAO,IAAI,CAACD,cAAc,CAAC,CAAC;EAC9B,CAAC;EAAAO,iCAAAC,GAAA,EAAAC,IAAA;IAAA,KAAAD,GAAA,IAAAE,IAAA,CAAAD,IAAA,GACH,CACAX,eAAe,CAACf,SAAS,GAAGA,SAAS;AACrCe,eAAe,CAACR,YAAY,GAAGA,YAAY,CAAC,mBAAAqB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CApDtChC,SAAS,6FAAA4B,cAAA,CAAAI,QAAA,CAMTzB,YAAY,gGAAAqB,cAAA,CAAAI,QAAA,CAKZxB,sBAAsB,0GAAAoB,cAAA,CAAAI,QAAA,CAWPjB,eAAe,2HAAAkB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}