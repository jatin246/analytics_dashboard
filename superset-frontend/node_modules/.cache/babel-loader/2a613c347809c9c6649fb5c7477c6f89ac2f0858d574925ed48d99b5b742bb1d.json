{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { forwardRef, useEffect } from 'react';\nimport { config } from 'ace-builds';\nimport { acequire } from 'ace-builds/src-noconflict/ace';\nimport AsyncEsmComponent from 'src/components/AsyncEsmComponent';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport cssWorkerUrl from 'ace-builds/src-noconflict/worker-css';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconfig.setModuleUrl('ace/mode/css_worker', cssWorkerUrl);\n/**\n * Async loaders to import brace modules. Must manually create call `import(...)`\n * promises because webpack can only analyze async imports statically.\n */\nconst aceModuleLoaders = {\n  'mode/sql': () => import('brace/mode/sql'),\n  'mode/markdown': () => import('brace/mode/markdown'),\n  'mode/css': () => import('brace/mode/css'),\n  'mode/json': () => import('brace/mode/json'),\n  'mode/yaml': () => import('brace/mode/yaml'),\n  'mode/html': () => import('brace/mode/html'),\n  'mode/javascript': () => import('brace/mode/javascript'),\n  'theme/textmate': () => import('brace/theme/textmate'),\n  'theme/github': () => import('brace/theme/github'),\n  'ext/language_tools': () => import('brace/ext/language_tools'),\n  'ext/searchbox': () => import('brace/ext/searchbox')\n};\n/**\n * Get an async AceEditor with automatical loading of specified ace modules.\n */\nexport default function AsyncAceEditor(aceModules, { defaultMode, defaultTheme, defaultTabSize = 2, fontFamily = 'Menlo, Consolas, Courier New, Ubuntu Mono, source-code-pro, Lucida Console, monospace', placeholder } = {}) {\n  return AsyncEsmComponent(async () => {var _aceModules$find, _aceModules$find2;\n    const { default: ReactAceEditor } = await import('react-ace');\n    await Promise.all(aceModules.map((x) => aceModuleLoaders[x]()));\n    const inferredMode = defaultMode || ((_aceModules$find =\n    aceModules.find((x) => x.startsWith('mode/'))) == null ? void 0 : _aceModules$find.replace('mode/', ''));\n    const inferredTheme = defaultTheme || ((_aceModules$find2 =\n    aceModules.find((x) => x.startsWith('theme/'))) == null ? void 0 : _aceModules$find2.replace('theme/', ''));\n    return /*#__PURE__*/forwardRef(__signature__(function ExtendedAceEditor({ keywords, mode = inferredMode, theme = inferredTheme, tabSize = defaultTabSize, defaultValue = '', ...props }, ref) {\n      const langTools = acequire('ace/ext/language_tools');\n      const setCompleters = useEffectEvent((keywords) => {\n        const completer = {\n          getCompletions: (editor, session, pos, prefix, callback) => {\n            // If the prefix starts with a number, don't try to autocomplete\n            if (!Number.isNaN(parseInt(prefix, 10))) {\n              return;\n            }\n            if (session.getMode().$id === `ace/mode/${mode}`) {\n              callback(null, keywords);\n            }\n          }\n        };\n        langTools.setCompleters([completer]);\n      });\n      useEffect(() => {\n        if (keywords) {\n          setCompleters(keywords);\n        }\n      }, [keywords, setCompleters]);\n      return _jsx(ReactAceEditor, { ref: ref, mode: mode, theme: theme, tabSize: tabSize, defaultValue: defaultValue, setOptions: { fontFamily }, ...props });\n    }, \"useEffectEvent{setCompleters}\\nuseEffect{}\", () => [useEffectEvent]));\n  }, placeholder);\n}\nexport const SQLEditor = AsyncAceEditor([\n'mode/sql',\n'theme/github',\n'ext/language_tools',\n'ext/searchbox']\n);\nexport const FullSQLEditor = AsyncAceEditor(['mode/sql', 'theme/github', 'ext/language_tools', 'ext/searchbox'], {\n  // a custom placeholder in SQL lab for less jumpy re-renders\n  placeholder: () => {\n    const gutterBackground = '#e8e8e8'; // from ace-github theme\n    return _jsxs(\"div\", { style: {\n        height: '100%'\n      }, children: [\n      _jsx(\"div\", { style: { width: 41, height: '100%', background: gutterBackground } }),\n\n      _jsx(\"div\", { className: \"ace_content\" })] }\n    );\n  }\n});\nexport const MarkdownEditor = AsyncAceEditor([\n'mode/markdown',\n'theme/textmate']\n);\nexport const TextAreaEditor = AsyncAceEditor([\n'mode/markdown',\n'mode/sql',\n'mode/json',\n'mode/html',\n'mode/javascript',\n'theme/textmate']\n);\nexport const CssEditor = AsyncAceEditor(['mode/css', 'theme/github']);\nexport const JsonEditor = AsyncAceEditor(['mode/json', 'theme/github']);\n/**\n * JSON or Yaml config editor.\n */\nexport const ConfigEditor = AsyncAceEditor([\n'mode/json',\n'mode/yaml',\n'theme/github']\n);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(aceModuleLoaders, \"aceModuleLoaders\", \"/app/superset-frontend/src/components/AsyncAceEditor/index.tsx\");reactHotLoader.register(AsyncAceEditor, \"AsyncAceEditor\", \"/app/superset-frontend/src/components/AsyncAceEditor/index.tsx\");reactHotLoader.register(SQLEditor, \"SQLEditor\", \"/app/superset-frontend/src/components/AsyncAceEditor/index.tsx\");reactHotLoader.register(FullSQLEditor, \"FullSQLEditor\", \"/app/superset-frontend/src/components/AsyncAceEditor/index.tsx\");reactHotLoader.register(MarkdownEditor, \"MarkdownEditor\", \"/app/superset-frontend/src/components/AsyncAceEditor/index.tsx\");reactHotLoader.register(TextAreaEditor, \"TextAreaEditor\", \"/app/superset-frontend/src/components/AsyncAceEditor/index.tsx\");reactHotLoader.register(CssEditor, \"CssEditor\", \"/app/superset-frontend/src/components/AsyncAceEditor/index.tsx\");reactHotLoader.register(JsonEditor, \"JsonEditor\", \"/app/superset-frontend/src/components/AsyncAceEditor/index.tsx\");reactHotLoader.register(ConfigEditor, \"ConfigEditor\", \"/app/superset-frontend/src/components/AsyncAceEditor/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["forwardRef","useEffect","config","acequire","AsyncEsmComponent","useEffectEvent","cssWorkerUrl","jsx","_jsx","jsxs","_jsxs","setModuleUrl","aceModuleLoaders","mode/sql","mode/markdown","mode/css","mode/json","mode/yaml","mode/html","mode/javascript","theme/textmate","theme/github","ext/language_tools","ext/searchbox","AsyncAceEditor","aceModules","defaultMode","defaultTheme","defaultTabSize","fontFamily","placeholder","_aceModules$find","_aceModules$find2","default","ReactAceEditor","Promise","all","map","x","inferredMode","find","startsWith","replace","inferredTheme","__signature__","ExtendedAceEditor","keywords","mode","theme","tabSize","defaultValue","props","ref","langTools","setCompleters","completer","getCompletions","editor","session","pos","prefix","callback","Number","isNaN","parseInt","getMode","$id","setOptions","SQLEditor","FullSQLEditor","gutterBackground","style","height","children","width","background","className","MarkdownEditor","TextAreaEditor","CssEditor","JsonEditor","ConfigEditor","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/components/AsyncAceEditor/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { forwardRef, useEffect, ComponentType } from 'react';\n\nimport {\n  Editor as OrigEditor,\n  IEditSession,\n  Position,\n  TextMode as OrigTextMode,\n} from 'brace';\nimport AceEditor, { IAceEditorProps } from 'react-ace';\nimport { config } from 'ace-builds';\nimport { acequire } from 'ace-builds/src-noconflict/ace';\nimport AsyncEsmComponent, {\n  PlaceholderProps,\n} from 'src/components/AsyncEsmComponent';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport cssWorkerUrl from 'ace-builds/src-noconflict/worker-css';\n\nconfig.setModuleUrl('ace/mode/css_worker', cssWorkerUrl);\n\nexport interface AceCompleterKeywordData {\n  name: string;\n  value: string;\n  score: number;\n  meta: string;\n  docText?: string;\n  docHTML?: string;\n}\n\nexport type TextMode = OrigTextMode & { $id: string };\n\nexport interface AceCompleter {\n  insertMatch: (\n    data?: Editor | { value: string } | string,\n    options?: AceCompleterKeywordData,\n  ) => void;\n}\n\nexport type Editor = OrigEditor & {\n  completer: AceCompleter;\n  completers: AceCompleter[];\n};\n\nexport interface AceCompleterKeyword extends AceCompleterKeywordData {\n  completer?: AceCompleter;\n}\n\n/**\n * Async loaders to import brace modules. Must manually create call `import(...)`\n * promises because webpack can only analyze async imports statically.\n */\nconst aceModuleLoaders = {\n  'mode/sql': () => import('brace/mode/sql'),\n  'mode/markdown': () => import('brace/mode/markdown'),\n  'mode/css': () => import('brace/mode/css'),\n  'mode/json': () => import('brace/mode/json'),\n  'mode/yaml': () => import('brace/mode/yaml'),\n  'mode/html': () => import('brace/mode/html'),\n  'mode/javascript': () => import('brace/mode/javascript'),\n  'theme/textmate': () => import('brace/theme/textmate'),\n  'theme/github': () => import('brace/theme/github'),\n  'ext/language_tools': () => import('brace/ext/language_tools'),\n  'ext/searchbox': () => import('brace/ext/searchbox'),\n};\n\nexport type AceModule = keyof typeof aceModuleLoaders;\n\nexport type AsyncAceEditorProps = IAceEditorProps & {\n  keywords?: AceCompleterKeyword[];\n};\n\nexport type AceEditorMode = 'sql';\nexport type AceEditorTheme = 'textmate' | 'github';\nexport type AsyncAceEditorOptions = {\n  defaultMode?: AceEditorMode;\n  defaultTheme?: AceEditorTheme;\n  defaultTabSize?: number;\n  fontFamily?: string;\n  placeholder?: ComponentType<\n    PlaceholderProps & Partial<IAceEditorProps>\n  > | null;\n};\n\n/**\n * Get an async AceEditor with automatical loading of specified ace modules.\n */\nexport default function AsyncAceEditor(\n  aceModules: AceModule[],\n  {\n    defaultMode,\n    defaultTheme,\n    defaultTabSize = 2,\n    fontFamily = 'Menlo, Consolas, Courier New, Ubuntu Mono, source-code-pro, Lucida Console, monospace',\n    placeholder,\n  }: AsyncAceEditorOptions = {},\n) {\n  return AsyncEsmComponent(async () => {\n    const { default: ReactAceEditor } = await import('react-ace');\n\n    await Promise.all(aceModules.map(x => aceModuleLoaders[x]()));\n\n    const inferredMode =\n      defaultMode ||\n      aceModules.find(x => x.startsWith('mode/'))?.replace('mode/', '');\n    const inferredTheme =\n      defaultTheme ||\n      aceModules.find(x => x.startsWith('theme/'))?.replace('theme/', '');\n\n    return forwardRef<AceEditor, AsyncAceEditorProps>(\n      function ExtendedAceEditor(\n        {\n          keywords,\n          mode = inferredMode,\n          theme = inferredTheme,\n          tabSize = defaultTabSize,\n          defaultValue = '',\n          ...props\n        },\n        ref,\n      ) {\n        const langTools = acequire('ace/ext/language_tools');\n        const setCompleters = useEffectEvent(\n          (keywords: AceCompleterKeyword[]) => {\n            const completer = {\n              getCompletions: (\n                editor: AceEditor,\n                session: IEditSession,\n                pos: Position,\n                prefix: string,\n                callback: (error: null, wordList: object[]) => void,\n              ) => {\n                // If the prefix starts with a number, don't try to autocomplete\n                if (!Number.isNaN(parseInt(prefix, 10))) {\n                  return;\n                }\n                if (\n                  (session.getMode() as TextMode).$id === `ace/mode/${mode}`\n                ) {\n                  callback(null, keywords);\n                }\n              },\n            };\n            langTools.setCompleters([completer]);\n          },\n        );\n        useEffect(() => {\n          if (keywords) {\n            setCompleters(keywords);\n          }\n        }, [keywords, setCompleters]);\n\n        return (\n          <ReactAceEditor\n            ref={ref}\n            mode={mode}\n            theme={theme}\n            tabSize={tabSize}\n            defaultValue={defaultValue}\n            setOptions={{ fontFamily }}\n            {...props}\n          />\n        );\n      },\n    );\n  }, placeholder);\n}\n\nexport const SQLEditor = AsyncAceEditor([\n  'mode/sql',\n  'theme/github',\n  'ext/language_tools',\n  'ext/searchbox',\n]);\n\nexport const FullSQLEditor = AsyncAceEditor(\n  ['mode/sql', 'theme/github', 'ext/language_tools', 'ext/searchbox'],\n  {\n    // a custom placeholder in SQL lab for less jumpy re-renders\n    placeholder: () => {\n      const gutterBackground = '#e8e8e8'; // from ace-github theme\n      return (\n        <div\n          style={{\n            height: '100%',\n          }}\n        >\n          <div\n            style={{ width: 41, height: '100%', background: gutterBackground }}\n          />\n          {/* make it possible to resize the placeholder */}\n          <div className=\"ace_content\" />\n        </div>\n      );\n    },\n  },\n);\n\nexport const MarkdownEditor = AsyncAceEditor([\n  'mode/markdown',\n  'theme/textmate',\n]);\n\nexport const TextAreaEditor = AsyncAceEditor([\n  'mode/markdown',\n  'mode/sql',\n  'mode/json',\n  'mode/html',\n  'mode/javascript',\n  'theme/textmate',\n]);\n\nexport const CssEditor = AsyncAceEditor(['mode/css', 'theme/github']);\n\nexport const JsonEditor = AsyncAceEditor(['mode/json', 'theme/github']);\n\n/**\n * JSON or Yaml config editor.\n */\nexport const ConfigEditor = AsyncAceEditor([\n  'mode/json',\n  'mode/yaml',\n  'theme/github',\n]);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}