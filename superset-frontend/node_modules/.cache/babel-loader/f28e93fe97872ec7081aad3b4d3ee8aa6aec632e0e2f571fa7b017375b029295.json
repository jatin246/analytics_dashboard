{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useContext, useEffect, useMemo } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { t, useTheme } from '@superset-ui/core';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { AddControlLabel, DndLabelsContainer, HeaderContainer } from 'src/explore/components/controls/OptionControls';\nimport Icons from 'src/components/Icons';\nimport { DraggingContext, DropzoneContext } from '../../ExploreContainer';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport default function DndSelectLabel({ displayGhostButton = true, accept, valuesRenderer, isLoading, ...props }) {\n  const theme = useTheme();\n  const canDropProp = props.canDrop;\n  const canDropValueProp = props.canDropValue;\n  const dropValidator = useCallback((item) => {var _canDropValueProp;return canDropProp(item) && ((_canDropValueProp = canDropValueProp == null ? void 0 : canDropValueProp(item.value)) != null ? _canDropValueProp : true);}, [canDropProp, canDropValueProp]);\n  const [{ isOver, canDrop }, datasourcePanelDrop] = useDrop({\n    accept: isLoading ? [] : accept,\n    drop: (item) => {\n      props.onDrop(item);\n      props.onDropValue == null ? void 0 : props.onDropValue(item.value);\n    },\n    canDrop: dropValidator,\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n      type: monitor.getItemType()\n    })\n  });\n  const dispatch = useContext(DropzoneContext)[1];\n  useEffect(() => {\n    dispatch({ key: props.name, canDrop: dropValidator });\n    return () => {\n      dispatch({ key: props.name });\n    };\n  }, [dispatch, props.name, dropValidator]);\n  const isDragging = useContext(DraggingContext);\n  const values = useMemo(() => valuesRenderer(), [valuesRenderer]);\n  function renderGhostButton() {\n    return _jsxs(AddControlLabel, { cancelHover: !props.onClickGhostButton, onClick: props.onClickGhostButton, children: [\n      _jsx(Icons.PlusSmall, { iconColor: theme.colors.grayscale.light1 }),\n      t(props.ghostButtonText)] }\n    );\n  }\n  return _jsxs(\"div\", { ref: datasourcePanelDrop, children: [\n    _jsx(HeaderContainer, { children:\n      _jsx(ControlHeader, { ...props }) }\n    ),\n    _jsxs(DndLabelsContainer, { \"data-test\": \"dnd-labels-container\", canDrop: canDrop, isOver: isOver, isDragging: isDragging, isLoading: isLoading, children: [\n      values,\n      displayGhostButton && renderGhostButton()] }\n    )] }\n  );\n}__signature__(DndSelectLabel, \"useTheme{theme}\\nuseCallback{dropValidator}\\nuseDrop{[{ isOver, canDrop }, datasourcePanelDrop]}\\nuseContext{}\\nuseEffect{}\\nuseContext{isDragging}\\nuseMemo{values}\", () => [useTheme, useDrop]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DndSelectLabel, \"DndSelectLabel\", \"/app/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndSelectLabel.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useCallback","useContext","useEffect","useMemo","useDrop","t","useTheme","ControlHeader","AddControlLabel","DndLabelsContainer","HeaderContainer","Icons","DraggingContext","DropzoneContext","jsx","_jsx","jsxs","_jsxs","DndSelectLabel","displayGhostButton","accept","valuesRenderer","isLoading","props","theme","canDropProp","canDrop","canDropValueProp","canDropValue","dropValidator","item","_canDropValueProp","value","isOver","datasourcePanelDrop","drop","onDrop","onDropValue","collect","monitor","type","getItemType","dispatch","key","name","isDragging","values","renderGhostButton","cancelHover","onClickGhostButton","onClick","children","PlusSmall","iconColor","colors","grayscale","light1","ghostButtonText","ref","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/controls/DndColumnSelectControl/DndSelectLabel.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactNode, useCallback, useContext, useEffect, useMemo } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { t, useTheme } from '@superset-ui/core';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport {\n  AddControlLabel,\n  DndLabelsContainer,\n  HeaderContainer,\n} from 'src/explore/components/controls/OptionControls';\nimport {\n  DatasourcePanelDndItem,\n  DndItemValue,\n} from 'src/explore/components/DatasourcePanel/types';\nimport Icons from 'src/components/Icons';\nimport { DndItemType } from '../../DndItemType';\nimport { DraggingContext, DropzoneContext } from '../../ExploreContainer';\n\nexport type DndSelectLabelProps = {\n  name: string;\n  accept: DndItemType | DndItemType[];\n  ghostButtonText: string;\n  onDrop: (item: DatasourcePanelDndItem) => void;\n  canDrop: (item: DatasourcePanelDndItem) => boolean;\n  canDropValue?: (value: DndItemValue) => boolean;\n  onDropValue?: (value: DndItemValue) => void;\n  valuesRenderer: () => ReactNode;\n  displayGhostButton?: boolean;\n  onClickGhostButton: () => void;\n  isLoading?: boolean;\n};\n\nexport default function DndSelectLabel({\n  displayGhostButton = true,\n  accept,\n  valuesRenderer,\n  isLoading,\n  ...props\n}: DndSelectLabelProps) {\n  const theme = useTheme();\n  const canDropProp = props.canDrop;\n  const canDropValueProp = props.canDropValue;\n\n  const dropValidator = useCallback(\n    (item: DatasourcePanelDndItem) =>\n      canDropProp(item) && (canDropValueProp?.(item.value) ?? true),\n    [canDropProp, canDropValueProp],\n  );\n\n  const [{ isOver, canDrop }, datasourcePanelDrop] = useDrop({\n    accept: isLoading ? [] : accept,\n\n    drop: (item: DatasourcePanelDndItem) => {\n      props.onDrop(item);\n      props.onDropValue?.(item.value);\n    },\n\n    canDrop: dropValidator,\n\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n      type: monitor.getItemType(),\n    }),\n  });\n\n  const dispatch = useContext(DropzoneContext)[1];\n\n  useEffect(() => {\n    dispatch({ key: props.name, canDrop: dropValidator });\n    return () => {\n      dispatch({ key: props.name });\n    };\n  }, [dispatch, props.name, dropValidator]);\n\n  const isDragging = useContext(DraggingContext);\n\n  const values = useMemo(() => valuesRenderer(), [valuesRenderer]);\n\n  function renderGhostButton() {\n    return (\n      <AddControlLabel\n        cancelHover={!props.onClickGhostButton}\n        onClick={props.onClickGhostButton}\n      >\n        <Icons.PlusSmall iconColor={theme.colors.grayscale.light1} />\n        {t(props.ghostButtonText)}\n      </AddControlLabel>\n    );\n  }\n\n  return (\n    <div ref={datasourcePanelDrop}>\n      <HeaderContainer>\n        <ControlHeader {...props} />\n      </HeaderContainer>\n      <DndLabelsContainer\n        data-test=\"dnd-labels-container\"\n        canDrop={canDrop}\n        isOver={isOver}\n        isDragging={isDragging}\n        isLoading={isLoading}\n      >\n        {values}\n        {displayGhostButton && renderGhostButton()}\n      </DndLabelsContainer>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}