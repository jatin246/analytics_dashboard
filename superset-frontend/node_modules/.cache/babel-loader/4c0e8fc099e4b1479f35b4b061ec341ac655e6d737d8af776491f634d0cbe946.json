{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport { MetricOption, ColumnOption } from '@superset-ui/chart-controls';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst OptionContainer = styled.div`\n  width: 100%;\n  > span {\n    display: flex;\n    align-items: center;\n  }\n\n  .option-label {\n    display: inline-block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    & ~ i {\n      margin-left: ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n  .type-label {\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    width: ${({ theme }) => theme.gridUnit * 7}px;\n    display: inline-block;\n    text-align: center;\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n`;\nexport const StyledMetricOption = (props) => _jsx(OptionContainer, { children:\n  _jsx(MetricOption, { ...props }) }\n);\nexport const StyledColumnOption = (props) => _jsx(OptionContainer, { children:\n  _jsx(ColumnOption, { ...props }) }\n);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(OptionContainer, \"OptionContainer\", \"/app/superset-frontend/src/explore/components/optionRenderers.tsx\");reactHotLoader.register(StyledMetricOption, \"StyledMetricOption\", \"/app/superset-frontend/src/explore/components/optionRenderers.tsx\");reactHotLoader.register(StyledColumnOption, \"StyledColumnOption\", \"/app/superset-frontend/src/explore/components/optionRenderers.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["styled","MetricOption","ColumnOption","jsx","_jsx","OptionContainer","div","theme","gridUnit","typography","weights","bold","StyledMetricOption","props","children","StyledColumnOption","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/optionRenderers.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { styled } from '@superset-ui/core';\nimport {\n  MetricOption,\n  ColumnOption,\n  MetricOptionProps,\n  ColumnOptionProps,\n} from '@superset-ui/chart-controls';\n\nconst OptionContainer = styled.div`\n  width: 100%;\n  > span {\n    display: flex;\n    align-items: center;\n  }\n\n  .option-label {\n    display: inline-block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    & ~ i {\n      margin-left: ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n  .type-label {\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    width: ${({ theme }) => theme.gridUnit * 7}px;\n    display: inline-block;\n    text-align: center;\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n  }\n`;\n\nexport const StyledMetricOption = (props: MetricOptionProps) => (\n  <OptionContainer>\n    <MetricOption {...props} />\n  </OptionContainer>\n);\n\nexport const StyledColumnOption = (props: ColumnOptionProps) => (\n  <OptionContainer>\n    <ColumnOption {...props} />\n  </OptionContainer>\n);\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAmBA,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,SACEC,YAAY,EACZC,YAAY,QAGP,6BAA6B,CAAC,SAAAC,GAAA,IAAAC,IAAA;AAErC,MAAMC,eAAe,GAAGL,MAAM,CAACM,GAAG;;;;;;;;;;;;;qBAab,CAAC,EAAEC,KAAK,EAAE,KAAKA,KAAK,CAACC,QAAQ;;;;oBAI9B,CAAC,EAAED,KAAK,EAAE,KAAKA,KAAK,CAACC,QAAQ,GAAG,CAAC;aACxC,CAAC,EAAED,KAAK,EAAE,KAAKA,KAAK,CAACC,QAAQ,GAAG,CAAC;;;mBAG3B,CAAC,EAAED,KAAK,EAAE,KAAKA,KAAK,CAACE,UAAU,CAACC,OAAO,CAACC,IAAI;;CAE9D;AAED,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,KAAwB,KACzDT,IAAA,CAACC,eAAe,IAAAS,QAAA;EACdV,IAAA,CAACH,YAAY,OAAKY,KAAK,EAAC,CAC1B;AAAiB,CAClB;AAED,OAAO,MAAME,kBAAkB,GAAGA,CAACF,KAAwB,KACzDT,IAAA,CAACC,eAAe,IAAAS,QAAA;EACdV,IAAA,CAACF,YAAY,OAAKW,KAAK,EAAC,CAC1B;AAAiB,CAClB,CAAC,mBAAAG,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAnCIf,eAAe,0FAAAW,cAAA,CAAAI,QAAA,CAyBRR,kBAAkB,6FAAAI,cAAA,CAAAI,QAAA,CAMlBL,kBAAkB,qHAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}