{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with work for additional information\n * regarding copyright ownership.  The ASF licenses file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport DndSelectLabel from 'src/explore/components/controls/DndColumnSelectControl/DndSelectLabel';\nimport ContourPopoverTrigger from './ContourPopoverTrigger';\nimport ContourOption from './ContourOption';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst DEFAULT_CONTOURS = [\n{\n  lowerThreshold: 4,\n  color: { r: 255, g: 0, b: 255, a: 100 },\n  strokeWidth: 1,\n  zIndex: 0\n},\n{\n  lowerThreshold: 5,\n  color: { r: 0, g: 255, b: 0, a: 100 },\n  strokeWidth: 2,\n  zIndex: 1\n},\n{\n  lowerThreshold: 6,\n  upperThreshold: 10,\n  color: { r: 0, g: 0, b: 255, a: 100 },\n  zIndex: 2\n}];\n\nconst NewContourFormatPlaceholder = styled('div')`\n  position: relative;\n  width: calc(100% - ${({ theme }) => theme.gridUnit}px);\n  bottom: ${({ theme }) => theme.gridUnit * 4}px;\n  left: 0;\n`;\nconst ContourControl = ({ onChange, ...props }) => {\n  const [popoverVisible, setPopoverVisible] = useState(false);\n  const [contours, setContours] = useState(props != null && props.value ? props == null ? void 0 : props.value : DEFAULT_CONTOURS);\n  useEffect(() => {\n    // add z-index to contours\n    const newContours = contours.map((contour, index) => ({\n      ...contour,\n      zIndex: (index + 1) * 10\n    }));\n    onChange == null ? void 0 : onChange(newContours);\n  }, [onChange, contours]);\n  const togglePopover = (visible) => {\n    setPopoverVisible(visible);\n  };\n  const handleClickGhostButton = () => {\n    togglePopover(true);\n  };\n  const saveContour = (contour) => {\n    setContours([...contours, contour]);\n    togglePopover(false);\n  };\n  const removeContour = (index) => {\n    const newContours = [...contours];\n    newContours.splice(index, 1);\n    setContours(newContours);\n  };\n  const onShiftContour = (hoverIndex, dragIndex) => {\n    const newContours = [...contours];\n    [newContours[hoverIndex], newContours[dragIndex]] = [\n    newContours[dragIndex],\n    newContours[hoverIndex]];\n\n    setContours(newContours);\n  };\n  const editContour = (contour, index) => {\n    const newContours = [...contours];\n    newContours[index] = contour;\n    setContours(newContours);\n  };\n  const valuesRenderer = () => contours.map((contour, index) => _jsx(ContourOption, { saveContour: (newContour) => editContour(newContour, index), contour: contour, index: index, onClose: removeContour, onShift: onShiftContour }, index));\n  const ghostButtonText = t('Click to add a contour');\n  return _jsxs(_Fragment, { children: [\n    _jsx(DndSelectLabel, { onDrop: () => {}, canDrop: () => true, valuesRenderer: valuesRenderer, accept: [], ghostButtonText: ghostButtonText, onClickGhostButton: handleClickGhostButton, ...props }),\n    _jsx(ContourPopoverTrigger, { saveContour: saveContour, isControlled: true, visible: popoverVisible, toggleVisibility: setPopoverVisible, children:\n      _jsx(NewContourFormatPlaceholder, {}) }\n    )] }\n  );\n};__signature__(ContourControl, \"useState{[popoverVisible, setPopoverVisible](false)}\\nuseState{[contours, setContours](props?.value ? props?.value : DEFAULT_CONTOURS)}\\nuseEffect{}\");const _default =\nContourControl;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_CONTOURS, \"DEFAULT_CONTOURS\", \"/app/superset-frontend/src/explore/components/controls/ContourControl/index.tsx\");reactHotLoader.register(NewContourFormatPlaceholder, \"NewContourFormatPlaceholder\", \"/app/superset-frontend/src/explore/components/controls/ContourControl/index.tsx\");reactHotLoader.register(ContourControl, \"ContourControl\", \"/app/superset-frontend/src/explore/components/controls/ContourControl/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/components/controls/ContourControl/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useState","useEffect","styled","t","DndSelectLabel","ContourPopoverTrigger","ContourOption","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DEFAULT_CONTOURS","lowerThreshold","color","r","g","b","a","strokeWidth","zIndex","upperThreshold","NewContourFormatPlaceholder","theme","gridUnit","ContourControl","onChange","props","popoverVisible","setPopoverVisible","contours","setContours","value","newContours","map","contour","index","togglePopover","visible","handleClickGhostButton","saveContour","removeContour","splice","onShiftContour","hoverIndex","dragIndex","editContour","valuesRenderer","newContour","onClose","onShift","ghostButtonText","children","onDrop","canDrop","accept","onClickGhostButton","isControlled","toggleVisibility","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/controls/ContourControl/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with work for additional information\n * regarding copyright ownership.  The ASF licenses file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useState, useEffect } from 'react';\nimport { styled, t } from '@superset-ui/core';\nimport DndSelectLabel from 'src/explore/components/controls/DndColumnSelectControl/DndSelectLabel';\nimport ContourPopoverTrigger from './ContourPopoverTrigger';\nimport ContourOption from './ContourOption';\nimport { ContourType, ContourControlProps } from './types';\n\nconst DEFAULT_CONTOURS: ContourType[] = [\n  {\n    lowerThreshold: 4,\n    color: { r: 255, g: 0, b: 255, a: 100 },\n    strokeWidth: 1,\n    zIndex: 0,\n  },\n  {\n    lowerThreshold: 5,\n    color: { r: 0, g: 255, b: 0, a: 100 },\n    strokeWidth: 2,\n    zIndex: 1,\n  },\n  {\n    lowerThreshold: 6,\n    upperThreshold: 10,\n    color: { r: 0, g: 0, b: 255, a: 100 },\n    zIndex: 2,\n  },\n];\n\nconst NewContourFormatPlaceholder = styled('div')`\n  position: relative;\n  width: calc(100% - ${({ theme }) => theme.gridUnit}px);\n  bottom: ${({ theme }) => theme.gridUnit * 4}px;\n  left: 0;\n`;\n\nconst ContourControl = ({ onChange, ...props }: ContourControlProps) => {\n  const [popoverVisible, setPopoverVisible] = useState(false);\n  const [contours, setContours] = useState<ContourType[]>(\n    props?.value ? props?.value : DEFAULT_CONTOURS,\n  );\n\n  useEffect(() => {\n    // add z-index to contours\n    const newContours = contours.map((contour, index) => ({\n      ...contour,\n      zIndex: (index + 1) * 10,\n    }));\n    onChange?.(newContours);\n  }, [onChange, contours]);\n\n  const togglePopover = (visible: boolean) => {\n    setPopoverVisible(visible);\n  };\n\n  const handleClickGhostButton = () => {\n    togglePopover(true);\n  };\n\n  const saveContour = (contour: ContourType) => {\n    setContours([...contours, contour]);\n    togglePopover(false);\n  };\n\n  const removeContour = (index: number) => {\n    const newContours = [...contours];\n    newContours.splice(index, 1);\n    setContours(newContours);\n  };\n\n  const onShiftContour = (hoverIndex: number, dragIndex: number) => {\n    const newContours = [...contours];\n    [newContours[hoverIndex], newContours[dragIndex]] = [\n      newContours[dragIndex],\n      newContours[hoverIndex],\n    ];\n    setContours(newContours);\n  };\n\n  const editContour = (contour: ContourType, index: number) => {\n    const newContours = [...contours];\n    newContours[index] = contour;\n    setContours(newContours);\n  };\n\n  const valuesRenderer = () =>\n    contours.map((contour, index) => (\n      <ContourOption\n        key={index}\n        saveContour={(newContour: ContourType) =>\n          editContour(newContour, index)\n        }\n        contour={contour}\n        index={index}\n        onClose={removeContour}\n        onShift={onShiftContour}\n      />\n    ));\n\n  const ghostButtonText = t('Click to add a contour');\n\n  return (\n    <>\n      <DndSelectLabel\n        onDrop={() => {}}\n        canDrop={() => true}\n        valuesRenderer={valuesRenderer}\n        accept={[]}\n        ghostButtonText={ghostButtonText}\n        onClickGhostButton={handleClickGhostButton}\n        {...props}\n      />\n      <ContourPopoverTrigger\n        saveContour={saveContour}\n        isControlled\n        visible={popoverVisible}\n        toggleVisibility={setPopoverVisible}\n      >\n        <NewContourFormatPlaceholder />\n      </ContourPopoverTrigger>\n    </>\n  );\n};\n\nexport default ContourControl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}