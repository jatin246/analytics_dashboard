{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getExtensionsRegistry, styled, SupersetClient, t } from '@superset-ui/core';\nimport { useState, useMemo, useEffect } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { useQueryParams, BooleanParam } from 'use-query-params';\nimport { LocalStorageKeys, setItem } from 'src/utils/localStorageHelpers';\nimport Loading from 'src/components/Loading';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport { createErrorHandler, createFetchRelated, uploadUserPerms } from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu from 'src/features/home/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport ListView, { FilterOperator } from 'src/components/ListView';\nimport handleResourceExport from 'src/utils/export';\nimport DatabaseModal from 'src/features/databases/DatabaseModal';\nimport UploadDataModal from 'src/features/databases/UploadDataModel';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst extensionsRegistry = getExtensionsRegistry();\nconst DatabaseDeleteRelatedExtension = extensionsRegistry.get('database.delete.related');\nconst dbConfigExtraExtension = extensionsRegistry.get('databaseconnection.extraOption');\nconst PAGE_SIZE = 25;\nconst IconCheck = styled(Icons.Check)`\n  color: ${({ theme }) => theme.colors.grayscale.dark1};\n`;\nconst IconCancelX = styled(Icons.CancelX)`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n`;\nconst Actions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n\n  .action-button {\n    display: inline-block;\n    height: 100%;\n  }\n`;\nfunction BooleanDisplay({ value }) {\n  return value ? _jsx(IconCheck, {}) : _jsx(IconCancelX, {});\n}\nfunction DatabaseList({ addDangerToast, addSuccessToast, user }) {\n  const { state: { loading, resourceCount: databaseCount, resourceCollection: databases }, hasPerm, fetchData, refreshData } = useListViewResource('database', t('database'), addDangerToast);\n  const fullUser = useSelector((state) => state.user);\n  const showDatabaseModal = getUrlParam(URL_PARAMS.showDatabaseModal);\n  const [query, setQuery] = useQueryParams({\n    databaseAdded: BooleanParam\n  });\n  const [databaseModalOpen, setDatabaseModalOpen] = useState(showDatabaseModal || false);\n  const [databaseCurrentlyDeleting, setDatabaseCurrentlyDeleting] = useState(null);\n  const [currentDatabase, setCurrentDatabase] = useState(null);\n  const [csvUploadDataModalOpen, setCsvUploadDataModalOpen] = useState(false);\n  const [excelUploadDataModalOpen, setExcelUploadDataModalOpen] = useState(false);\n  const [columnarUploadDataModalOpen, setColumnarUploadDataModalOpen] = useState(false);\n  const [allowUploads, setAllowUploads] = useState(false);\n  const isAdmin = isUserAdmin(fullUser);\n  const showUploads = allowUploads || isAdmin;\n  const [preparingExport, setPreparingExport] = useState(false);\n  const { roles } = fullUser;\n  const { CSV_EXTENSIONS, COLUMNAR_EXTENSIONS, EXCEL_EXTENSIONS, ALLOWED_EXTENSIONS } = useSelector((state) => state.common.conf);\n  useEffect(() => {\n    if (query != null && query.databaseAdded) {\n      setQuery({ databaseAdded: undefined });\n      refreshData();\n    }\n  }, [query, setQuery, refreshData]);\n  const openDatabaseDeleteModal = (database) => SupersetClient.get({\n    endpoint: `/api/v1/database/${database.id}/related_objects/`\n  }).\n  then(({ json = {} }) => {\n    setDatabaseCurrentlyDeleting({\n      ...database,\n      chart_count: json.charts.count,\n      dashboard_count: json.dashboards.count,\n      sqllab_tab_count: json.sqllab_tab_states.count\n    });\n  }).\n  catch(createErrorHandler((errMsg) => t('An error occurred while fetching database related data: %s', errMsg)));\n  function handleDatabaseDelete(database) {\n    const { id, database_name: dbName } = database;\n    SupersetClient.delete({\n      endpoint: `/api/v1/database/${id}`\n    }).then(() => {\n      refreshData();\n      addSuccessToast(t('Deleted: %s', dbName));\n      // Remove any extension-related data\n      if (dbConfigExtraExtension != null && dbConfigExtraExtension.onDelete) {\n        dbConfigExtraExtension.onDelete(database);\n      }\n      // Delete user-selected db from local storage\n      setItem(LocalStorageKeys.Database, null);\n      // Close delete modal\n      setDatabaseCurrentlyDeleting(null);\n    }, createErrorHandler((errMsg) => addDangerToast(t('There was an issue deleting %s: %s', dbName, errMsg))));\n  }\n  function handleDatabaseEditModal({ database = null, modalOpen = false } = {}) {\n    // Set database and modal\n    setCurrentDatabase(database);\n    setDatabaseModalOpen(modalOpen);\n  }\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n  const { canUploadCSV, canUploadColumnar, canUploadExcel } = uploadUserPerms(roles, CSV_EXTENSIONS, COLUMNAR_EXTENSIONS, EXCEL_EXTENSIONS, ALLOWED_EXTENSIONS);\n  const isDisabled = isAdmin && !allowUploads;\n  const uploadDropdownMenu = [\n  {\n    label: t('Upload file to database'),\n    childs: [\n    {\n      label: t('Upload CSV'),\n      name: 'Upload CSV file',\n      url: '#',\n      onClick: () => {\n        setCsvUploadDataModalOpen(true);\n      },\n      perm: canUploadCSV && showUploads,\n      disable: isDisabled\n    },\n    {\n      label: t('Upload Excel'),\n      name: 'Upload Excel file',\n      url: '#',\n      onClick: () => {\n        setExcelUploadDataModalOpen(true);\n      },\n      perm: canUploadExcel && showUploads,\n      disable: isDisabled\n    },\n    {\n      label: t('Upload Columnar'),\n      name: 'Upload columnar file',\n      url: '#',\n      onClick: () => {\n        setColumnarUploadDataModalOpen(true);\n      },\n      perm: canUploadColumnar && showUploads,\n      disable: isDisabled\n    }]\n\n  }];\n\n  const hasFileUploadEnabled = () => {\n    const payload = {\n      filters: [\n      { col: 'allow_file_upload', opr: 'upload_is_enabled', value: true }]\n\n    };\n    SupersetClient.get({\n      endpoint: `/api/v1/database/?q=${rison.encode(payload)}`\n    }).then(({ json }) => {var _json$result;\n      // There might be some existings Gsheets and Clickhouse DBs\n      // with allow_file_upload set as True which is not possible from now on\n      const allowedDatabasesWithFileUpload = (json == null ? void 0 : (_json$result = json.result) == null ? void 0 : _json$result.filter((database) => {var _database$engine_info;return database == null ? void 0 : (_database$engine_info = database.engine_information) == null ? void 0 : _database$engine_info.supports_file_upload;})) || [];\n      setAllowUploads((allowedDatabasesWithFileUpload == null ? void 0 : allowedDatabasesWithFileUpload.length) >= 1);\n    });\n  };\n  useEffect(() => hasFileUploadEnabled(), [databaseModalOpen]);\n  const filteredDropDown = uploadDropdownMenu.reduce((prev, cur) => {\n    // eslint-disable-next-line no-param-reassign\n    cur.childs = cur.childs.filter((item) => item.perm);\n    if (!cur.childs.length)\n    return prev;\n    prev.push(cur);\n    return prev;\n  }, []);\n  const menuData = {\n    activeChild: 'Databases',\n    dropDownLinks: filteredDropDown,\n    name: t('Databases')\n  };\n  if (canCreate) {\n    menuData.buttons = [\n    {\n      'data-test': 'btn-create-database',\n      name: _jsxs(_Fragment, { children: [\n        _jsx(\"i\", { className: \"fa fa-plus\" }), \" \", t('Database'), ' '] }\n      ),\n      buttonStyle: 'primary',\n      onClick: () => {\n        // Ensure modal will be opened in add mode\n        handleDatabaseEditModal({ modalOpen: true });\n      }\n    }];\n\n  }\n  function handleDatabaseExport(database) {\n    if (database.id === undefined) {\n      return;\n    }\n    handleResourceExport('database', [database.id], () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  }\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n  const columns = useMemo(() => [\n  {\n    accessor: 'database_name',\n    Header: t('Name')\n  },\n  {\n    accessor: 'backend',\n    Header: t('Backend'),\n    size: 'lg',\n    disableSortBy: true // TODO: api support for sorting by 'backend'\n  },\n  {\n    accessor: 'allow_run_async',\n    Header: _jsx(Tooltip, { id: \"allow-run-async-header-tooltip\", title: t('Asynchronous query execution'), placement: \"top\", children:\n      _jsx(\"span\", { children: t('AQE') }) }\n    ),\n    Cell: ({ row: { original: { allow_run_async: allowRunAsync } } }) => _jsx(BooleanDisplay, { value: allowRunAsync }),\n    size: 'sm'\n  },\n  {\n    accessor: 'allow_dml',\n    Header: _jsx(Tooltip, { id: \"allow-dml-header-tooltip\", title: t('Allow data manipulation language'), placement: \"top\", children:\n      _jsx(\"span\", { children: t('DML') }) }\n    ),\n    Cell: ({ row: { original: { allow_dml: allowDML } } }) => _jsx(BooleanDisplay, { value: allowDML }),\n    size: 'sm'\n  },\n  {\n    accessor: 'allow_file_upload',\n    Header: t('File upload'),\n    Cell: ({ row: { original: { allow_file_upload: allowFileUpload } } }) => _jsx(BooleanDisplay, { value: allowFileUpload }),\n    size: 'md'\n  },\n  {\n    accessor: 'expose_in_sqllab',\n    Header: t('Expose in SQL Lab'),\n    Cell: ({ row: { original: { expose_in_sqllab: exposeInSqllab } } }) => _jsx(BooleanDisplay, { value: exposeInSqllab }),\n    size: 'md'\n  },\n  {\n    Cell: ({ row: { original: { changed_by: changedBy, changed_on_delta_humanized: changedOn } } }) => _jsx(ModifiedInfo, { date: changedOn, user: changedBy }),\n    Header: t('Last modified'),\n    accessor: 'changed_on_delta_humanized',\n    size: 'xl'\n  },\n  {\n    Cell: ({ row: { original } }) => {\n      const handleEdit = () => handleDatabaseEditModal({ database: original, modalOpen: true });\n      const handleDelete = () => openDatabaseDeleteModal(original);\n      const handleExport = () => handleDatabaseExport(original);\n      if (!canEdit && !canDelete && !canExport) {\n        return null;\n      }\n      return _jsxs(Actions, { className: \"actions\", children: [\n        canDelete && _jsx(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", \"data-test\": \"database-delete\", onClick: handleDelete, children:\n          _jsx(Tooltip, { id: \"delete-action-tooltip\", title: t('Delete database'), placement: \"bottom\", children:\n            _jsx(Icons.Trash, {}) }\n          ) }\n        ),\n        canExport && _jsx(Tooltip, { id: \"export-action-tooltip\", title: t('Export'), placement: \"bottom\", children:\n          _jsx(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: handleExport, children:\n            _jsx(Icons.Share, {}) }\n          ) }\n        ),\n        canEdit && _jsx(Tooltip, { id: \"edit-action-tooltip\", title: t('Edit'), placement: \"bottom\", children:\n          _jsx(\"span\", { role: \"button\", \"data-test\": \"database-edit\", tabIndex: 0, className: \"action-button\", onClick: handleEdit, children:\n            _jsx(Icons.EditAlt, { \"data-test\": \"edit-alt\" }) }\n          ) }\n        )] }\n      );\n    },\n    Header: t('Actions'),\n    id: 'actions',\n    hidden: !canEdit && !canDelete,\n    disableSortBy: true\n  },\n  {\n    accessor: QueryObjectColumns.ChangedBy,\n    hidden: true\n  }],\n  [canDelete, canEdit, canExport]);\n  const filters = useMemo(() => [\n  {\n    Header: t('Name'),\n    key: 'search',\n    id: 'database_name',\n    input: 'search',\n    operator: FilterOperator.Contains\n  },\n  {\n    Header: t('Expose in SQL Lab'),\n    key: 'expose_in_sql_lab',\n    id: 'expose_in_sqllab',\n    input: 'select',\n    operator: FilterOperator.Equals,\n    unfilteredLabel: t('All'),\n    selects: [\n    { label: t('Yes'), value: true },\n    { label: t('No'), value: false }]\n\n  },\n  {\n    Header: _jsx(Tooltip, { id: \"allow-run-async-filter-header-tooltip\", title: t('Asynchronous query execution'), placement: \"top\", children:\n      _jsx(\"span\", { children: t('AQE') }) }\n    ),\n    key: 'allow_run_async',\n    id: 'allow_run_async',\n    input: 'select',\n    operator: FilterOperator.Equals,\n    unfilteredLabel: t('All'),\n    selects: [\n    { label: t('Yes'), value: true },\n    { label: t('No'), value: false }]\n\n  },\n  {\n    Header: t('Modified by'),\n    key: 'changed_by',\n    id: 'changed_by',\n    input: 'select',\n    operator: FilterOperator.RelationOneMany,\n    unfilteredLabel: t('All'),\n    fetchSelects: createFetchRelated('database', 'changed_by', createErrorHandler((errMsg) => t('An error occurred while fetching dataset datasource values: %s', errMsg)), user),\n    paginate: true\n  }],\n  []);\n  return _jsxs(_Fragment, { children: [\n    _jsx(SubMenu, { ...menuData }),\n    _jsx(DatabaseModal, { databaseId: currentDatabase == null ? void 0 : currentDatabase.id, show: databaseModalOpen, onHide: handleDatabaseEditModal, onDatabaseAdd: () => {\n        refreshData();\n      } }),\n    _jsx(UploadDataModal, { addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, onHide: () => {\n        setCsvUploadDataModalOpen(false);\n      }, show: csvUploadDataModalOpen, allowedExtensions: CSV_EXTENSIONS, type: \"csv\" }),\n    _jsx(UploadDataModal, { addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, onHide: () => {\n        setExcelUploadDataModalOpen(false);\n      }, show: excelUploadDataModalOpen, allowedExtensions: EXCEL_EXTENSIONS, type: \"excel\" }),\n    _jsx(UploadDataModal, { addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, onHide: () => {\n        setColumnarUploadDataModalOpen(false);\n      }, show: columnarUploadDataModalOpen, allowedExtensions: COLUMNAR_EXTENSIONS, type: \"columnar\" }),\n    databaseCurrentlyDeleting && _jsx(DeleteModal, { description: _jsxs(_Fragment, { children: [\n        _jsx(\"p\", { children:\n          t('The database %s is linked to %s charts that appear on %s dashboards and users have %s SQL Lab tabs using this database open. Are you sure you want to continue? Deleting the database will break those objects.', databaseCurrentlyDeleting.database_name, databaseCurrentlyDeleting.chart_count, databaseCurrentlyDeleting.dashboard_count, databaseCurrentlyDeleting.sqllab_tab_count) }\n        ),\n        DatabaseDeleteRelatedExtension && _jsx(DatabaseDeleteRelatedExtension, { database: databaseCurrentlyDeleting })] }\n      ), onConfirm: () => {\n        if (databaseCurrentlyDeleting) {\n          handleDatabaseDelete(databaseCurrentlyDeleting);\n        }\n      }, onHide: () => setDatabaseCurrentlyDeleting(null), open: true, title: t('Delete Database?') }),\n\n    _jsx(ListView, { className: \"database-list-view\", columns: columns, count: databaseCount, data: databases, fetchData: fetchData, filters: filters, initialSort: initialSort, loading: loading, addDangerToast: addDangerToast, addSuccessToast: addSuccessToast, refreshData: () => {}, pageSize: PAGE_SIZE }),\n\n    preparingExport && _jsx(Loading, {})] }\n  );\n}__signature__(DatabaseList, \"useListViewResource{{ state: { loading, resourceCount: databaseCount, resourceCollection: databases, }, hasPerm, fetchData, refreshData, }}\\nuseSelector{fullUser}\\nuseQueryParams{[query, setQuery]}\\nuseState{[databaseModalOpen, setDatabaseModalOpen](showDatabaseModal || false)}\\nuseState{[databaseCurrentlyDeleting, setDatabaseCurrentlyDeleting](null)}\\nuseState{[currentDatabase, setCurrentDatabase](null)}\\nuseState{[csvUploadDataModalOpen, setCsvUploadDataModalOpen](false)}\\nuseState{[excelUploadDataModalOpen, setExcelUploadDataModalOpen](false)}\\nuseState{[columnarUploadDataModalOpen, setColumnarUploadDataModalOpen](false)}\\nuseState{[allowUploads, setAllowUploads](false)}\\nuseState{[preparingExport, setPreparingExport](false)}\\nuseSelector{{ CSV_EXTENSIONS, COLUMNAR_EXTENSIONS, EXCEL_EXTENSIONS, ALLOWED_EXTENSIONS, }}\\nuseEffect{}\\nuseEffect{}\\nuseMemo{columns}\\nuseMemo{filters}\", () => [useListViewResource, useSelector, useQueryParams, useSelector]);const _default =\nwithToasts(DatabaseList);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(extensionsRegistry, \"extensionsRegistry\", \"/app/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(DatabaseDeleteRelatedExtension, \"DatabaseDeleteRelatedExtension\", \"/app/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(dbConfigExtraExtension, \"dbConfigExtraExtension\", \"/app/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(PAGE_SIZE, \"PAGE_SIZE\", \"/app/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(IconCheck, \"IconCheck\", \"/app/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(IconCancelX, \"IconCancelX\", \"/app/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(Actions, \"Actions\", \"/app/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(BooleanDisplay, \"BooleanDisplay\", \"/app/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(DatabaseList, \"DatabaseList\", \"/app/superset-frontend/src/pages/DatabaseList/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/pages/DatabaseList/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["getExtensionsRegistry","styled","SupersetClient","t","useState","useMemo","useEffect","rison","useSelector","useQueryParams","BooleanParam","LocalStorageKeys","setItem","Loading","useListViewResource","createErrorHandler","createFetchRelated","uploadUserPerms","withToasts","SubMenu","DeleteModal","getUrlParam","URL_PARAMS","Tooltip","Icons","isUserAdmin","ListView","FilterOperator","handleResourceExport","DatabaseModal","UploadDataModal","ModifiedInfo","QueryObjectColumns","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","extensionsRegistry","DatabaseDeleteRelatedExtension","get","dbConfigExtraExtension","PAGE_SIZE","IconCheck","Check","theme","colors","grayscale","dark1","IconCancelX","CancelX","light1","Actions","div","base","BooleanDisplay","value","DatabaseList","addDangerToast","addSuccessToast","user","state","loading","resourceCount","databaseCount","resourceCollection","databases","hasPerm","fetchData","refreshData","fullUser","showDatabaseModal","query","setQuery","databaseAdded","databaseModalOpen","setDatabaseModalOpen","databaseCurrentlyDeleting","setDatabaseCurrentlyDeleting","currentDatabase","setCurrentDatabase","csvUploadDataModalOpen","setCsvUploadDataModalOpen","excelUploadDataModalOpen","setExcelUploadDataModalOpen","columnarUploadDataModalOpen","setColumnarUploadDataModalOpen","allowUploads","setAllowUploads","isAdmin","showUploads","preparingExport","setPreparingExport","roles","CSV_EXTENSIONS","COLUMNAR_EXTENSIONS","EXCEL_EXTENSIONS","ALLOWED_EXTENSIONS","common","conf","undefined","openDatabaseDeleteModal","database","endpoint","id","then","json","chart_count","charts","count","dashboard_count","dashboards","sqllab_tab_count","sqllab_tab_states","catch","errMsg","handleDatabaseDelete","database_name","dbName","delete","onDelete","Database","handleDatabaseEditModal","modalOpen","canCreate","canEdit","canDelete","canExport","canUploadCSV","canUploadColumnar","canUploadExcel","isDisabled","uploadDropdownMenu","label","childs","name","url","onClick","perm","disable","hasFileUploadEnabled","payload","filters","col","opr","encode","_json$result","allowedDatabasesWithFileUpload","result","filter","_database$engine_info","engine_information","supports_file_upload","length","filteredDropDown","reduce","prev","cur","item","push","menuData","activeChild","dropDownLinks","buttons","children","className","buttonStyle","handleDatabaseExport","initialSort","desc","columns","accessor","Header","size","disableSortBy","title","placement","Cell","row","original","allow_run_async","allowRunAsync","allow_dml","allowDML","allow_file_upload","allowFileUpload","expose_in_sqllab","exposeInSqllab","changed_by","changedBy","changed_on_delta_humanized","changedOn","date","handleEdit","handleDelete","handleExport","role","tabIndex","Trash","Share","EditAlt","hidden","ChangedBy","key","input","operator","Contains","Equals","unfilteredLabel","selects","RelationOneMany","fetchSelects","paginate","databaseId","show","onHide","onDatabaseAdd","allowedExtensions","type","description","onConfirm","open","data","pageSize","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/src/pages/DatabaseList/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  getExtensionsRegistry,\n  styled,\n  SupersetClient,\n  t,\n} from '@superset-ui/core';\nimport { useState, useMemo, useEffect } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { useQueryParams, BooleanParam } from 'use-query-params';\nimport { LocalStorageKeys, setItem } from 'src/utils/localStorageHelpers';\n\nimport Loading from 'src/components/Loading';\nimport { useListViewResource } from 'src/views/CRUD/hooks';\nimport {\n  createErrorHandler,\n  createFetchRelated,\n  uploadUserPerms,\n} from 'src/views/CRUD/utils';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport SubMenu, { SubMenuProps } from 'src/features/home/SubMenu';\nimport DeleteModal from 'src/components/DeleteModal';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport { URL_PARAMS } from 'src/constants';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport ListView, { FilterOperator, Filters } from 'src/components/ListView';\nimport handleResourceExport from 'src/utils/export';\nimport { ExtensionConfigs } from 'src/features/home/types';\nimport { UserWithPermissionsAndRoles } from 'src/types/bootstrapTypes';\nimport type { MenuObjectProps } from 'src/types/bootstrapTypes';\nimport DatabaseModal from 'src/features/databases/DatabaseModal';\nimport UploadDataModal from 'src/features/databases/UploadDataModel';\nimport { DatabaseObject } from 'src/features/databases/types';\nimport { ModifiedInfo } from 'src/components/AuditInfo';\nimport { QueryObjectColumns } from 'src/views/CRUD/types';\n\nconst extensionsRegistry = getExtensionsRegistry();\nconst DatabaseDeleteRelatedExtension = extensionsRegistry.get(\n  'database.delete.related',\n);\nconst dbConfigExtraExtension = extensionsRegistry.get(\n  'databaseconnection.extraOption',\n);\n\nconst PAGE_SIZE = 25;\n\ninterface DatabaseDeleteObject extends DatabaseObject {\n  chart_count: number;\n  dashboard_count: number;\n  sqllab_tab_count: number;\n}\ninterface DatabaseListProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  user: {\n    userId: string | number;\n    firstName: string;\n    lastName: string;\n  };\n}\n\nconst IconCheck = styled(Icons.Check)`\n  color: ${({ theme }) => theme.colors.grayscale.dark1};\n`;\n\nconst IconCancelX = styled(Icons.CancelX)`\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n`;\n\nconst Actions = styled.div`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n\n  .action-button {\n    display: inline-block;\n    height: 100%;\n  }\n`;\n\nfunction BooleanDisplay({ value }: { value: Boolean }) {\n  return value ? <IconCheck /> : <IconCancelX />;\n}\n\nfunction DatabaseList({\n  addDangerToast,\n  addSuccessToast,\n  user,\n}: DatabaseListProps) {\n  const {\n    state: {\n      loading,\n      resourceCount: databaseCount,\n      resourceCollection: databases,\n    },\n    hasPerm,\n    fetchData,\n    refreshData,\n  } = useListViewResource<DatabaseObject>(\n    'database',\n    t('database'),\n    addDangerToast,\n  );\n  const fullUser = useSelector<any, UserWithPermissionsAndRoles>(\n    state => state.user,\n  );\n  const showDatabaseModal = getUrlParam(URL_PARAMS.showDatabaseModal);\n\n  const [query, setQuery] = useQueryParams({\n    databaseAdded: BooleanParam,\n  });\n\n  const [databaseModalOpen, setDatabaseModalOpen] = useState<boolean>(\n    showDatabaseModal || false,\n  );\n  const [databaseCurrentlyDeleting, setDatabaseCurrentlyDeleting] =\n    useState<DatabaseDeleteObject | null>(null);\n  const [currentDatabase, setCurrentDatabase] = useState<DatabaseObject | null>(\n    null,\n  );\n  const [csvUploadDataModalOpen, setCsvUploadDataModalOpen] =\n    useState<boolean>(false);\n  const [excelUploadDataModalOpen, setExcelUploadDataModalOpen] =\n    useState<boolean>(false);\n  const [columnarUploadDataModalOpen, setColumnarUploadDataModalOpen] =\n    useState<boolean>(false);\n\n  const [allowUploads, setAllowUploads] = useState<boolean>(false);\n  const isAdmin = isUserAdmin(fullUser);\n  const showUploads = allowUploads || isAdmin;\n\n  const [preparingExport, setPreparingExport] = useState<boolean>(false);\n  const { roles } = fullUser;\n  const {\n    CSV_EXTENSIONS,\n    COLUMNAR_EXTENSIONS,\n    EXCEL_EXTENSIONS,\n    ALLOWED_EXTENSIONS,\n  } = useSelector<any, ExtensionConfigs>(state => state.common.conf);\n\n  useEffect(() => {\n    if (query?.databaseAdded) {\n      setQuery({ databaseAdded: undefined });\n      refreshData();\n    }\n  }, [query, setQuery, refreshData]);\n\n  const openDatabaseDeleteModal = (database: DatabaseObject) =>\n    SupersetClient.get({\n      endpoint: `/api/v1/database/${database.id}/related_objects/`,\n    })\n      .then(({ json = {} }) => {\n        setDatabaseCurrentlyDeleting({\n          ...database,\n          chart_count: json.charts.count,\n          dashboard_count: json.dashboards.count,\n          sqllab_tab_count: json.sqllab_tab_states.count,\n        });\n      })\n      .catch(\n        createErrorHandler(errMsg =>\n          t(\n            'An error occurred while fetching database related data: %s',\n            errMsg,\n          ),\n        ),\n      );\n\n  function handleDatabaseDelete(database: DatabaseObject) {\n    const { id, database_name: dbName } = database;\n    SupersetClient.delete({\n      endpoint: `/api/v1/database/${id}`,\n    }).then(\n      () => {\n        refreshData();\n        addSuccessToast(t('Deleted: %s', dbName));\n\n        // Remove any extension-related data\n        if (dbConfigExtraExtension?.onDelete) {\n          dbConfigExtraExtension.onDelete(database);\n        }\n\n        // Delete user-selected db from local storage\n        setItem(LocalStorageKeys.Database, null);\n\n        // Close delete modal\n        setDatabaseCurrentlyDeleting(null);\n      },\n      createErrorHandler(errMsg =>\n        addDangerToast(t('There was an issue deleting %s: %s', dbName, errMsg)),\n      ),\n    );\n  }\n\n  function handleDatabaseEditModal({\n    database = null,\n    modalOpen = false,\n  }: { database?: DatabaseObject | null; modalOpen?: boolean } = {}) {\n    // Set database and modal\n    setCurrentDatabase(database);\n    setDatabaseModalOpen(modalOpen);\n  }\n\n  const canCreate = hasPerm('can_write');\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n\n  const { canUploadCSV, canUploadColumnar, canUploadExcel } = uploadUserPerms(\n    roles,\n    CSV_EXTENSIONS,\n    COLUMNAR_EXTENSIONS,\n    EXCEL_EXTENSIONS,\n    ALLOWED_EXTENSIONS,\n  );\n\n  const isDisabled = isAdmin && !allowUploads;\n\n  const uploadDropdownMenu = [\n    {\n      label: t('Upload file to database'),\n      childs: [\n        {\n          label: t('Upload CSV'),\n          name: 'Upload CSV file',\n          url: '#',\n          onClick: () => {\n            setCsvUploadDataModalOpen(true);\n          },\n          perm: canUploadCSV && showUploads,\n          disable: isDisabled,\n        },\n        {\n          label: t('Upload Excel'),\n          name: 'Upload Excel file',\n          url: '#',\n          onClick: () => {\n            setExcelUploadDataModalOpen(true);\n          },\n          perm: canUploadExcel && showUploads,\n          disable: isDisabled,\n        },\n        {\n          label: t('Upload Columnar'),\n          name: 'Upload columnar file',\n          url: '#',\n          onClick: () => {\n            setColumnarUploadDataModalOpen(true);\n          },\n          perm: canUploadColumnar && showUploads,\n          disable: isDisabled,\n        },\n      ],\n    },\n  ];\n\n  const hasFileUploadEnabled = () => {\n    const payload = {\n      filters: [\n        { col: 'allow_file_upload', opr: 'upload_is_enabled', value: true },\n      ],\n    };\n    SupersetClient.get({\n      endpoint: `/api/v1/database/?q=${rison.encode(payload)}`,\n    }).then(({ json }: Record<string, any>) => {\n      // There might be some existings Gsheets and Clickhouse DBs\n      // with allow_file_upload set as True which is not possible from now on\n      const allowedDatabasesWithFileUpload =\n        json?.result?.filter(\n          (database: any) => database?.engine_information?.supports_file_upload,\n        ) || [];\n      setAllowUploads(allowedDatabasesWithFileUpload?.length >= 1);\n    });\n  };\n\n  useEffect(() => hasFileUploadEnabled(), [databaseModalOpen]);\n\n  const filteredDropDown = uploadDropdownMenu.reduce((prev, cur) => {\n    // eslint-disable-next-line no-param-reassign\n    cur.childs = cur.childs.filter(item => item.perm);\n    if (!cur.childs.length) return prev;\n    prev.push(cur);\n    return prev;\n  }, [] as MenuObjectProps[]);\n\n  const menuData: SubMenuProps = {\n    activeChild: 'Databases',\n    dropDownLinks: filteredDropDown,\n    name: t('Databases'),\n  };\n\n  if (canCreate) {\n    menuData.buttons = [\n      {\n        'data-test': 'btn-create-database',\n        name: (\n          <>\n            <i className=\"fa fa-plus\" /> {t('Database')}{' '}\n          </>\n        ),\n        buttonStyle: 'primary',\n        onClick: () => {\n          // Ensure modal will be opened in add mode\n          handleDatabaseEditModal({ modalOpen: true });\n        },\n      },\n    ];\n  }\n\n  function handleDatabaseExport(database: DatabaseObject) {\n    if (database.id === undefined) {\n      return;\n    }\n\n    handleResourceExport('database', [database.id], () => {\n      setPreparingExport(false);\n    });\n    setPreparingExport(true);\n  }\n\n  const initialSort = [{ id: 'changed_on_delta_humanized', desc: true }];\n\n  const columns = useMemo(\n    () => [\n      {\n        accessor: 'database_name',\n        Header: t('Name'),\n      },\n      {\n        accessor: 'backend',\n        Header: t('Backend'),\n        size: 'lg',\n        disableSortBy: true, // TODO: api support for sorting by 'backend'\n      },\n      {\n        accessor: 'allow_run_async',\n        Header: (\n          <Tooltip\n            id=\"allow-run-async-header-tooltip\"\n            title={t('Asynchronous query execution')}\n            placement=\"top\"\n          >\n            <span>{t('AQE')}</span>\n          </Tooltip>\n        ),\n        Cell: ({\n          row: {\n            original: { allow_run_async: allowRunAsync },\n          },\n        }: {\n          row: { original: { allow_run_async: boolean } };\n        }) => <BooleanDisplay value={allowRunAsync} />,\n        size: 'sm',\n      },\n      {\n        accessor: 'allow_dml',\n        Header: (\n          <Tooltip\n            id=\"allow-dml-header-tooltip\"\n            title={t('Allow data manipulation language')}\n            placement=\"top\"\n          >\n            <span>{t('DML')}</span>\n          </Tooltip>\n        ),\n        Cell: ({\n          row: {\n            original: { allow_dml: allowDML },\n          },\n        }: any) => <BooleanDisplay value={allowDML} />,\n        size: 'sm',\n      },\n      {\n        accessor: 'allow_file_upload',\n        Header: t('File upload'),\n        Cell: ({\n          row: {\n            original: { allow_file_upload: allowFileUpload },\n          },\n        }: any) => <BooleanDisplay value={allowFileUpload} />,\n        size: 'md',\n      },\n      {\n        accessor: 'expose_in_sqllab',\n        Header: t('Expose in SQL Lab'),\n        Cell: ({\n          row: {\n            original: { expose_in_sqllab: exposeInSqllab },\n          },\n        }: any) => <BooleanDisplay value={exposeInSqllab} />,\n        size: 'md',\n      },\n      {\n        Cell: ({\n          row: {\n            original: {\n              changed_by: changedBy,\n              changed_on_delta_humanized: changedOn,\n            },\n          },\n        }: any) => <ModifiedInfo date={changedOn} user={changedBy} />,\n        Header: t('Last modified'),\n        accessor: 'changed_on_delta_humanized',\n        size: 'xl',\n      },\n      {\n        Cell: ({ row: { original } }: any) => {\n          const handleEdit = () =>\n            handleDatabaseEditModal({ database: original, modalOpen: true });\n          const handleDelete = () => openDatabaseDeleteModal(original);\n          const handleExport = () => handleDatabaseExport(original);\n          if (!canEdit && !canDelete && !canExport) {\n            return null;\n          }\n          return (\n            <Actions className=\"actions\">\n              {canDelete && (\n                <span\n                  role=\"button\"\n                  tabIndex={0}\n                  className=\"action-button\"\n                  data-test=\"database-delete\"\n                  onClick={handleDelete}\n                >\n                  <Tooltip\n                    id=\"delete-action-tooltip\"\n                    title={t('Delete database')}\n                    placement=\"bottom\"\n                  >\n                    <Icons.Trash />\n                  </Tooltip>\n                </span>\n              )}\n              {canExport && (\n                <Tooltip\n                  id=\"export-action-tooltip\"\n                  title={t('Export')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleExport}\n                  >\n                    <Icons.Share />\n                  </span>\n                </Tooltip>\n              )}\n              {canEdit && (\n                <Tooltip\n                  id=\"edit-action-tooltip\"\n                  title={t('Edit')}\n                  placement=\"bottom\"\n                >\n                  <span\n                    role=\"button\"\n                    data-test=\"database-edit\"\n                    tabIndex={0}\n                    className=\"action-button\"\n                    onClick={handleEdit}\n                  >\n                    <Icons.EditAlt data-test=\"edit-alt\" />\n                  </span>\n                </Tooltip>\n              )}\n            </Actions>\n          );\n        },\n        Header: t('Actions'),\n        id: 'actions',\n        hidden: !canEdit && !canDelete,\n        disableSortBy: true,\n      },\n      {\n        accessor: QueryObjectColumns.ChangedBy,\n        hidden: true,\n      },\n    ],\n    [canDelete, canEdit, canExport],\n  );\n\n  const filters: Filters = useMemo(\n    () => [\n      {\n        Header: t('Name'),\n        key: 'search',\n        id: 'database_name',\n        input: 'search',\n        operator: FilterOperator.Contains,\n      },\n      {\n        Header: t('Expose in SQL Lab'),\n        key: 'expose_in_sql_lab',\n        id: 'expose_in_sqllab',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: t('All'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: (\n          <Tooltip\n            id=\"allow-run-async-filter-header-tooltip\"\n            title={t('Asynchronous query execution')}\n            placement=\"top\"\n          >\n            <span>{t('AQE')}</span>\n          </Tooltip>\n        ),\n        key: 'allow_run_async',\n        id: 'allow_run_async',\n        input: 'select',\n        operator: FilterOperator.Equals,\n        unfilteredLabel: t('All'),\n        selects: [\n          { label: t('Yes'), value: true },\n          { label: t('No'), value: false },\n        ],\n      },\n      {\n        Header: t('Modified by'),\n        key: 'changed_by',\n        id: 'changed_by',\n        input: 'select',\n        operator: FilterOperator.RelationOneMany,\n        unfilteredLabel: t('All'),\n        fetchSelects: createFetchRelated(\n          'database',\n          'changed_by',\n          createErrorHandler(errMsg =>\n            t(\n              'An error occurred while fetching dataset datasource values: %s',\n              errMsg,\n            ),\n          ),\n          user,\n        ),\n        paginate: true,\n      },\n    ],\n    [],\n  );\n\n  return (\n    <>\n      <SubMenu {...menuData} />\n      <DatabaseModal\n        databaseId={currentDatabase?.id}\n        show={databaseModalOpen}\n        onHide={handleDatabaseEditModal}\n        onDatabaseAdd={() => {\n          refreshData();\n        }}\n      />\n      <UploadDataModal\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onHide={() => {\n          setCsvUploadDataModalOpen(false);\n        }}\n        show={csvUploadDataModalOpen}\n        allowedExtensions={CSV_EXTENSIONS}\n        type=\"csv\"\n      />\n      <UploadDataModal\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onHide={() => {\n          setExcelUploadDataModalOpen(false);\n        }}\n        show={excelUploadDataModalOpen}\n        allowedExtensions={EXCEL_EXTENSIONS}\n        type=\"excel\"\n      />\n      <UploadDataModal\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        onHide={() => {\n          setColumnarUploadDataModalOpen(false);\n        }}\n        show={columnarUploadDataModalOpen}\n        allowedExtensions={COLUMNAR_EXTENSIONS}\n        type=\"columnar\"\n      />\n      {databaseCurrentlyDeleting && (\n        <DeleteModal\n          description={\n            <>\n              <p>\n                {t(\n                  'The database %s is linked to %s charts that appear on %s dashboards and users have %s SQL Lab tabs using this database open. Are you sure you want to continue? Deleting the database will break those objects.',\n                  databaseCurrentlyDeleting.database_name,\n                  databaseCurrentlyDeleting.chart_count,\n                  databaseCurrentlyDeleting.dashboard_count,\n                  databaseCurrentlyDeleting.sqllab_tab_count,\n                )}\n              </p>\n              {DatabaseDeleteRelatedExtension && (\n                <DatabaseDeleteRelatedExtension\n                  database={databaseCurrentlyDeleting}\n                />\n              )}\n            </>\n          }\n          onConfirm={() => {\n            if (databaseCurrentlyDeleting) {\n              handleDatabaseDelete(databaseCurrentlyDeleting);\n            }\n          }}\n          onHide={() => setDatabaseCurrentlyDeleting(null)}\n          open\n          title={t('Delete Database?')}\n        />\n      )}\n\n      <ListView<DatabaseObject>\n        className=\"database-list-view\"\n        columns={columns}\n        count={databaseCount}\n        data={databases}\n        fetchData={fetchData}\n        filters={filters}\n        initialSort={initialSort}\n        loading={loading}\n        addDangerToast={addDangerToast}\n        addSuccessToast={addSuccessToast}\n        refreshData={() => {}}\n        pageSize={PAGE_SIZE}\n      />\n\n      {preparingExport && <Loading />}\n    </>\n  );\n}\n\nexport default withToasts(DatabaseList);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}