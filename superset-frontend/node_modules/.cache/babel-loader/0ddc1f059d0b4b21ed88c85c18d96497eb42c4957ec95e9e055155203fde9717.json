{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// These are control configurations that are shared ONLY within the DeckGL viz plugin repo.\n\nimport {\n  FeatureFlag,\n  isFeatureEnabled,\n  t,\n  validateNonEmpty,\n  validateMapboxStylesUrl } from\n'@superset-ui/core';\nimport { D3_FORMAT_OPTIONS, sharedControls } from '@superset-ui/chart-controls';\nimport { columnChoices, PRIMARY_COLOR } from './controls';import { jsxs as _jsxs, jsx as _jsx } from \"@emotion/react/jsx-runtime\";\n\nconst DEFAULT_VIEWPORT = {\n  longitude: 6.85236157047845,\n  latitude: 31.222656842808707,\n  zoom: 1,\n  bearing: 0,\n  pitch: 0\n};\n\nconst sandboxUrl =\n'https://github.com/apache/superset/' +\n'blob/master/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/sandbox.ts';\nconst jsFunctionInfo =\n_jsxs(\"div\", { children: [\n  t(\n    'For more information about objects are in context in the scope of this function, refer to the'\n  ),\n  _jsxs(\"a\", { href: sandboxUrl, children: [t(\" source code of Superset's sandboxed parser\"), \".\"] }), \".\"] }\n\n);\n\n\nfunction jsFunctionControl(\nlabel,\ndescription,\nextraDescr = null,\nheight = 100,\ndefaultText = '')\n{\n  return {\n    type: 'TextAreaControl',\n    language: 'javascript',\n    label,\n    description,\n    height,\n    default: defaultText,\n    aboveEditorSection:\n    _jsxs(\"div\", { children: [\n      _jsx(\"p\", { children: description }),\n      _jsx(\"p\", { children: jsFunctionInfo }),\n      extraDescr] }\n    ),\n\n    warning: !isFeatureEnabled(FeatureFlag.EnableJavascriptControls) ?\n    t(\n      'This functionality is disabled in your environment for security reasons.'\n    ) :\n    null,\n    readOnly: !isFeatureEnabled(FeatureFlag.EnableJavascriptControls)\n  };\n}\n\nexport const filterNulls = {\n  name: 'filter_nulls',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Ignore null locations'),\n    default: true,\n    description: t('Whether to ignore locations that are null')\n  }\n};\n\nexport const autozoom = {\n  name: 'autozoom',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Auto Zoom'),\n    default: true,\n    renderTrigger: true,\n    description: t(\n      'When checked, the map will zoom to your data after each query'\n    )\n  }\n};\n\nexport const dimension = {\n  name: 'dimension',\n  config: {\n    ...sharedControls.groupby,\n    label: t('Dimension'),\n    description: t('Select a dimension'),\n    multi: false,\n    default: null\n  }\n};\n\nexport const jsColumns = {\n  name: 'js_columns',\n  config: {\n    ...sharedControls.groupby,\n    label: t('Extra data for JS'),\n    default: [],\n    description: t(\n      'List of extra columns made available in JavaScript functions'\n    )\n  }\n};\n\nexport const jsDataMutator = {\n  name: 'js_data_mutator',\n  config: jsFunctionControl(\n    t('JavaScript data interceptor'),\n    t(\n      'Define a javascript function that receives the data array used in the visualization ' +\n      'and is expected to return a modified version of that array. This can be used ' +\n      'to alter properties of the data, filter, or enrich the array.'\n    )\n  )\n};\n\nexport const jsTooltip = {\n  name: 'js_tooltip',\n  config: jsFunctionControl(\n    t('JavaScript tooltip generator'),\n    t(\n      'Define a function that receives the input and outputs the content for a tooltip'\n    )\n  )\n};\n\nexport const jsOnclickHref = {\n  name: 'js_onclick_href',\n  config: jsFunctionControl(\n    t('JavaScript onClick href'),\n    t('Define a function that returns a URL to navigate to when user clicks')\n  )\n};\n\nexport const legendFormat = {\n  name: 'legend_format',\n  config: {\n    label: t('Legend Format'),\n    description: t('Choose the format for legend values'),\n    type: 'SelectControl',\n    clearable: false,\n    default: D3_FORMAT_OPTIONS[0][0],\n    choices: D3_FORMAT_OPTIONS,\n    renderTrigger: true,\n    freeForm: true\n  }\n};\n\nexport const legendPosition = {\n  name: 'legend_position',\n  config: {\n    label: t('Legend Position'),\n    description: t('Choose the position of the legend'),\n    type: 'SelectControl',\n    clearable: false,\n    default: 'tr',\n    choices: [\n    [null, t('None')],\n    ['tl', t('Top left')],\n    ['tr', t('Top right')],\n    ['bl', t('Bottom left')],\n    ['br', t('Bottom right')]],\n\n    renderTrigger: true\n  }\n};\n\nexport const lineColumn = {\n  name: 'line_column',\n  config: {\n    type: 'SelectControl',\n    label: t('Lines column'),\n    default: null,\n    description: t('The database columns that contains lines information'),\n    mapStateToProps: (state) => ({\n      choices: columnChoices(state.datasource)\n    }),\n    validators: [validateNonEmpty]\n  }\n};\n\nexport const lineWidth = {\n  name: 'line_width',\n  config: {\n    type: 'TextControl',\n    label: t('Line width'),\n    renderTrigger: true,\n    isInt: true,\n    default: 1,\n    description: t('The width of the lines')\n  }\n};\n\nexport const fillColorPicker = {\n  name: 'fill_color_picker',\n  config: {\n    label: t('Fill Color'),\n    description: t(\n      ' Set the opacity to 0 if you do not want to override the color specified in the GeoJSON'\n    ),\n    type: 'ColorPickerControl',\n    default: PRIMARY_COLOR,\n    renderTrigger: true\n  }\n};\n\nexport const strokeColorPicker = {\n  name: 'stroke_color_picker',\n  config: {\n    label: t('Stroke Color'),\n    description: t(\n      ' Set the opacity to 0 if you do not want to override the color specified in the GeoJSON'\n    ),\n    type: 'ColorPickerControl',\n    default: PRIMARY_COLOR,\n    renderTrigger: true\n  }\n};\n\nexport const filled = {\n  name: 'filled',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Filled'),\n    renderTrigger: true,\n    description: t('Whether to fill the objects'),\n    default: true\n  }\n};\n\nexport const stroked = {\n  name: 'stroked',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Stroked'),\n    renderTrigger: true,\n    description: t('Whether to display the stroke'),\n    default: false\n  }\n};\n\nexport const extruded = {\n  name: 'extruded',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Extruded'),\n    renderTrigger: true,\n    default: true,\n    description: t('Whether to make the grid 3D')\n  }\n};\n\nexport const gridSize = {\n  name: 'grid_size',\n  config: {\n    type: 'TextControl',\n    label: t('Grid Size'),\n    renderTrigger: true,\n    default: 20,\n    isInt: true,\n    description: t('Defines the grid size in pixels')\n  }\n};\n\nexport const viewport = {\n  name: 'viewport',\n  config: {\n    type: 'ViewportControl',\n    label: t('Viewport'),\n    renderTrigger: false,\n    description: t('Parameters related to the view and perspective on the map'),\n    // default is whole world mostly centered\n    default: DEFAULT_VIEWPORT,\n    // Viewport changes shouldn't prompt user to re-run query\n    dontRefreshOnChange: true\n  }\n};\n\nexport const spatial = {\n  name: 'spatial',\n  config: {\n    type: 'SpatialControl',\n    label: t('Longitude & Latitude'),\n    validators: [validateNonEmpty],\n    description: t('Point to your spatial columns'),\n    mapStateToProps: (state) => ({\n      choices: columnChoices(state.datasource)\n    })\n  }\n};\n\nexport const pointRadiusFixed = {\n  name: 'point_radius_fixed',\n  config: {\n    type: 'FixedOrMetricControl',\n    label: t('Point Size'),\n    default: { type: 'fix', value: 1000 },\n    description: t('Fixed point radius'),\n    mapStateToProps: (state) => ({\n      datasource: state.datasource\n    })\n  }\n};\n\nexport const multiplier = {\n  name: 'multiplier',\n  config: {\n    type: 'TextControl',\n    label: t('Multiplier'),\n    isFloat: true,\n    renderTrigger: true,\n    default: 1,\n    description: t('Factor to multiply the metric by')\n  }\n};\n\nexport const lineType = {\n  name: 'line_type',\n  config: {\n    type: 'SelectControl',\n    label: t('Lines encoding'),\n    clearable: false,\n    default: 'json',\n    description: t('The encoding format of the lines'),\n    choices: [\n    ['polyline', t('Polyline')],\n    ['json', t('JSON')],\n    ['geohash', t('geohash (square)')]]\n\n  }\n};\n\nexport const reverseLongLat = {\n  name: 'reverse_long_lat',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Reverse Lat & Long'),\n    default: false\n  }\n};\n\nexport const mapboxStyle = {\n  name: 'mapbox_style',\n  config: {\n    type: 'SelectControl',\n    label: t('Map Style'),\n    clearable: false,\n    renderTrigger: true,\n    freeForm: true,\n    validators: [validateMapboxStylesUrl],\n    choices: [\n    ['mapbox://styles/mapbox/streets-v9', t('Streets')],\n    ['mapbox://styles/mapbox/dark-v9', t('Dark')],\n    ['mapbox://styles/mapbox/light-v9', t('Light')],\n    ['mapbox://styles/mapbox/satellite-streets-v9', t('Satellite Streets')],\n    ['mapbox://styles/mapbox/satellite-v9', t('Satellite')],\n    ['mapbox://styles/mapbox/outdoors-v9', t('Outdoors')]],\n\n    default: 'mapbox://styles/mapbox/light-v9',\n    description: t(\n      'Base layer map style. See Mapbox documentation: %s',\n      'https://docs.mapbox.com/help/glossary/style-url/'\n    )\n  }\n};\n\nexport const geojsonColumn = {\n  name: 'geojson',\n  config: {\n    type: 'SelectControl',\n    label: t('GeoJson Column'),\n    validators: [validateNonEmpty],\n    description: t('Select the geojson column'),\n    mapStateToProps: (state) => ({\n      choices: columnChoices(state.datasource)\n    })\n  }\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_VIEWPORT, \"DEFAULT_VIEWPORT\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(sandboxUrl, \"sandboxUrl\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(jsFunctionInfo, \"jsFunctionInfo\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(jsFunctionControl, \"jsFunctionControl\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(filterNulls, \"filterNulls\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(autozoom, \"autozoom\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(dimension, \"dimension\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(jsColumns, \"jsColumns\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(jsDataMutator, \"jsDataMutator\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(jsTooltip, \"jsTooltip\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(jsOnclickHref, \"jsOnclickHref\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(legendFormat, \"legendFormat\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(legendPosition, \"legendPosition\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(lineColumn, \"lineColumn\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(lineWidth, \"lineWidth\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(fillColorPicker, \"fillColorPicker\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(strokeColorPicker, \"strokeColorPicker\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(filled, \"filled\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(stroked, \"stroked\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(extruded, \"extruded\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(gridSize, \"gridSize\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(viewport, \"viewport\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(spatial, \"spatial\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(pointRadiusFixed, \"pointRadiusFixed\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(multiplier, \"multiplier\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(lineType, \"lineType\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(reverseLongLat, \"reverseLongLat\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(mapboxStyle, \"mapboxStyle\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");reactHotLoader.register(geojsonColumn, \"geojsonColumn\", \"/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["FeatureFlag","isFeatureEnabled","t","validateNonEmpty","validateMapboxStylesUrl","D3_FORMAT_OPTIONS","sharedControls","columnChoices","PRIMARY_COLOR","jsxs","_jsxs","jsx","_jsx","DEFAULT_VIEWPORT","longitude","latitude","zoom","bearing","pitch","sandboxUrl","jsFunctionInfo","children","href","jsFunctionControl","label","description","extraDescr","height","defaultText","type","language","default","aboveEditorSection","warning","EnableJavascriptControls","readOnly","filterNulls","name","config","autozoom","renderTrigger","dimension","groupby","multi","jsColumns","jsDataMutator","jsTooltip","jsOnclickHref","legendFormat","clearable","choices","freeForm","legendPosition","lineColumn","mapStateToProps","state","datasource","validators","lineWidth","isInt","fillColorPicker","strokeColorPicker","filled","stroked","extruded","gridSize","viewport","dontRefreshOnChange","spatial","pointRadiusFixed","value","multiplier","isFloat","lineType","reverseLongLat","mapboxStyle","geojsonColumn","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utilities/Shared_DeckGL.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n// These are control configurations that are shared ONLY within the DeckGL viz plugin repo.\n\nimport {\n  FeatureFlag,\n  isFeatureEnabled,\n  t,\n  validateNonEmpty,\n  validateMapboxStylesUrl,\n} from '@superset-ui/core';\nimport { D3_FORMAT_OPTIONS, sharedControls } from '@superset-ui/chart-controls';\nimport { columnChoices, PRIMARY_COLOR } from './controls';\n\nconst DEFAULT_VIEWPORT = {\n  longitude: 6.85236157047845,\n  latitude: 31.222656842808707,\n  zoom: 1,\n  bearing: 0,\n  pitch: 0,\n};\n\nconst sandboxUrl =\n  'https://github.com/apache/superset/' +\n  'blob/master/superset-frontend/plugins/legacy-preset-chart-deckgl/src/utils/sandbox.ts';\nconst jsFunctionInfo = (\n  <div>\n    {t(\n      'For more information about objects are in context in the scope of this function, refer to the',\n    )}\n    <a href={sandboxUrl}>{t(\" source code of Superset's sandboxed parser\")}.</a>\n    .\n  </div>\n);\n\nfunction jsFunctionControl(\n  label,\n  description,\n  extraDescr = null,\n  height = 100,\n  defaultText = '',\n) {\n  return {\n    type: 'TextAreaControl',\n    language: 'javascript',\n    label,\n    description,\n    height,\n    default: defaultText,\n    aboveEditorSection: (\n      <div>\n        <p>{description}</p>\n        <p>{jsFunctionInfo}</p>\n        {extraDescr}\n      </div>\n    ),\n    warning: !isFeatureEnabled(FeatureFlag.EnableJavascriptControls)\n      ? t(\n          'This functionality is disabled in your environment for security reasons.',\n        )\n      : null,\n    readOnly: !isFeatureEnabled(FeatureFlag.EnableJavascriptControls),\n  };\n}\n\nexport const filterNulls = {\n  name: 'filter_nulls',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Ignore null locations'),\n    default: true,\n    description: t('Whether to ignore locations that are null'),\n  },\n};\n\nexport const autozoom = {\n  name: 'autozoom',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Auto Zoom'),\n    default: true,\n    renderTrigger: true,\n    description: t(\n      'When checked, the map will zoom to your data after each query',\n    ),\n  },\n};\n\nexport const dimension = {\n  name: 'dimension',\n  config: {\n    ...sharedControls.groupby,\n    label: t('Dimension'),\n    description: t('Select a dimension'),\n    multi: false,\n    default: null,\n  },\n};\n\nexport const jsColumns = {\n  name: 'js_columns',\n  config: {\n    ...sharedControls.groupby,\n    label: t('Extra data for JS'),\n    default: [],\n    description: t(\n      'List of extra columns made available in JavaScript functions',\n    ),\n  },\n};\n\nexport const jsDataMutator = {\n  name: 'js_data_mutator',\n  config: jsFunctionControl(\n    t('JavaScript data interceptor'),\n    t(\n      'Define a javascript function that receives the data array used in the visualization ' +\n        'and is expected to return a modified version of that array. This can be used ' +\n        'to alter properties of the data, filter, or enrich the array.',\n    ),\n  ),\n};\n\nexport const jsTooltip = {\n  name: 'js_tooltip',\n  config: jsFunctionControl(\n    t('JavaScript tooltip generator'),\n    t(\n      'Define a function that receives the input and outputs the content for a tooltip',\n    ),\n  ),\n};\n\nexport const jsOnclickHref = {\n  name: 'js_onclick_href',\n  config: jsFunctionControl(\n    t('JavaScript onClick href'),\n    t('Define a function that returns a URL to navigate to when user clicks'),\n  ),\n};\n\nexport const legendFormat = {\n  name: 'legend_format',\n  config: {\n    label: t('Legend Format'),\n    description: t('Choose the format for legend values'),\n    type: 'SelectControl',\n    clearable: false,\n    default: D3_FORMAT_OPTIONS[0][0],\n    choices: D3_FORMAT_OPTIONS,\n    renderTrigger: true,\n    freeForm: true,\n  },\n};\n\nexport const legendPosition = {\n  name: 'legend_position',\n  config: {\n    label: t('Legend Position'),\n    description: t('Choose the position of the legend'),\n    type: 'SelectControl',\n    clearable: false,\n    default: 'tr',\n    choices: [\n      [null, t('None')],\n      ['tl', t('Top left')],\n      ['tr', t('Top right')],\n      ['bl', t('Bottom left')],\n      ['br', t('Bottom right')],\n    ],\n    renderTrigger: true,\n  },\n};\n\nexport const lineColumn = {\n  name: 'line_column',\n  config: {\n    type: 'SelectControl',\n    label: t('Lines column'),\n    default: null,\n    description: t('The database columns that contains lines information'),\n    mapStateToProps: state => ({\n      choices: columnChoices(state.datasource),\n    }),\n    validators: [validateNonEmpty],\n  },\n};\n\nexport const lineWidth = {\n  name: 'line_width',\n  config: {\n    type: 'TextControl',\n    label: t('Line width'),\n    renderTrigger: true,\n    isInt: true,\n    default: 1,\n    description: t('The width of the lines'),\n  },\n};\n\nexport const fillColorPicker = {\n  name: 'fill_color_picker',\n  config: {\n    label: t('Fill Color'),\n    description: t(\n      ' Set the opacity to 0 if you do not want to override the color specified in the GeoJSON',\n    ),\n    type: 'ColorPickerControl',\n    default: PRIMARY_COLOR,\n    renderTrigger: true,\n  },\n};\n\nexport const strokeColorPicker = {\n  name: 'stroke_color_picker',\n  config: {\n    label: t('Stroke Color'),\n    description: t(\n      ' Set the opacity to 0 if you do not want to override the color specified in the GeoJSON',\n    ),\n    type: 'ColorPickerControl',\n    default: PRIMARY_COLOR,\n    renderTrigger: true,\n  },\n};\n\nexport const filled = {\n  name: 'filled',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Filled'),\n    renderTrigger: true,\n    description: t('Whether to fill the objects'),\n    default: true,\n  },\n};\n\nexport const stroked = {\n  name: 'stroked',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Stroked'),\n    renderTrigger: true,\n    description: t('Whether to display the stroke'),\n    default: false,\n  },\n};\n\nexport const extruded = {\n  name: 'extruded',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Extruded'),\n    renderTrigger: true,\n    default: true,\n    description: t('Whether to make the grid 3D'),\n  },\n};\n\nexport const gridSize = {\n  name: 'grid_size',\n  config: {\n    type: 'TextControl',\n    label: t('Grid Size'),\n    renderTrigger: true,\n    default: 20,\n    isInt: true,\n    description: t('Defines the grid size in pixels'),\n  },\n};\n\nexport const viewport = {\n  name: 'viewport',\n  config: {\n    type: 'ViewportControl',\n    label: t('Viewport'),\n    renderTrigger: false,\n    description: t('Parameters related to the view and perspective on the map'),\n    // default is whole world mostly centered\n    default: DEFAULT_VIEWPORT,\n    // Viewport changes shouldn't prompt user to re-run query\n    dontRefreshOnChange: true,\n  },\n};\n\nexport const spatial = {\n  name: 'spatial',\n  config: {\n    type: 'SpatialControl',\n    label: t('Longitude & Latitude'),\n    validators: [validateNonEmpty],\n    description: t('Point to your spatial columns'),\n    mapStateToProps: state => ({\n      choices: columnChoices(state.datasource),\n    }),\n  },\n};\n\nexport const pointRadiusFixed = {\n  name: 'point_radius_fixed',\n  config: {\n    type: 'FixedOrMetricControl',\n    label: t('Point Size'),\n    default: { type: 'fix', value: 1000 },\n    description: t('Fixed point radius'),\n    mapStateToProps: state => ({\n      datasource: state.datasource,\n    }),\n  },\n};\n\nexport const multiplier = {\n  name: 'multiplier',\n  config: {\n    type: 'TextControl',\n    label: t('Multiplier'),\n    isFloat: true,\n    renderTrigger: true,\n    default: 1,\n    description: t('Factor to multiply the metric by'),\n  },\n};\n\nexport const lineType = {\n  name: 'line_type',\n  config: {\n    type: 'SelectControl',\n    label: t('Lines encoding'),\n    clearable: false,\n    default: 'json',\n    description: t('The encoding format of the lines'),\n    choices: [\n      ['polyline', t('Polyline')],\n      ['json', t('JSON')],\n      ['geohash', t('geohash (square)')],\n    ],\n  },\n};\n\nexport const reverseLongLat = {\n  name: 'reverse_long_lat',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Reverse Lat & Long'),\n    default: false,\n  },\n};\n\nexport const mapboxStyle = {\n  name: 'mapbox_style',\n  config: {\n    type: 'SelectControl',\n    label: t('Map Style'),\n    clearable: false,\n    renderTrigger: true,\n    freeForm: true,\n    validators: [validateMapboxStylesUrl],\n    choices: [\n      ['mapbox://styles/mapbox/streets-v9', t('Streets')],\n      ['mapbox://styles/mapbox/dark-v9', t('Dark')],\n      ['mapbox://styles/mapbox/light-v9', t('Light')],\n      ['mapbox://styles/mapbox/satellite-streets-v9', t('Satellite Streets')],\n      ['mapbox://styles/mapbox/satellite-v9', t('Satellite')],\n      ['mapbox://styles/mapbox/outdoors-v9', t('Outdoors')],\n    ],\n    default: 'mapbox://styles/mapbox/light-v9',\n    description: t(\n      'Base layer map style. See Mapbox documentation: %s',\n      'https://docs.mapbox.com/help/glossary/style-url/',\n    ),\n  },\n};\n\nexport const geojsonColumn = {\n  name: 'geojson',\n  config: {\n    type: 'SelectControl',\n    label: t('GeoJson Column'),\n    validators: [validateNonEmpty],\n    description: t('Select the geojson column'),\n    mapStateToProps: state => ({\n      choices: columnChoices(state.datasource),\n    }),\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}