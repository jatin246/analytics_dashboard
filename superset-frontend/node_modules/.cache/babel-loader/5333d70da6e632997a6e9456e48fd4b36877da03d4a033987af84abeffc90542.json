{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { useDrag } from 'react-dnd';\nimport { css, styled } from '@superset-ui/core';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport { StyledColumnOption, StyledMetricOption } from 'src/explore/components/optionRenderers';\nimport Icons from 'src/components/Icons';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst DatasourceItemContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: ${theme.gridUnit * 6}px;\n    padding: 0 ${theme.gridUnit}px;\n\n    // hack to make the drag preview image corners rounded\n    transform: translate(0, 0);\n    background-color: inherit;\n    border-radius: 4px;\n\n    > div {\n      min-width: 0;\n      margin-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\nexport default function DatasourcePanelDragOption(props) {\n  const { labelRef, showTooltip, type, value } = props;\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      value: props.value,\n      type: props.type\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const optionProps = {\n    labelRef,\n    showTooltip: !isDragging && showTooltip,\n    showType: true\n  };\n  return _jsxs(DatasourceItemContainer, { \"data-test\": \"DatasourcePanelDragOption\", ref: drag, children: [\n    type === DndItemType.Column ? _jsx(StyledColumnOption, { column: value, ...optionProps }) : _jsx(StyledMetricOption, { metric: value, ...optionProps }),\n    _jsx(Icons.Drag, {})] }\n  );\n}__signature__(DatasourcePanelDragOption, \"useDrag{[{ isDragging }, drag]}\", () => [useDrag]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DatasourceItemContainer, \"DatasourceItemContainer\", \"/app/superset-frontend/src/explore/components/DatasourcePanel/DatasourcePanelDragOption/index.tsx\");reactHotLoader.register(DatasourcePanelDragOption, \"DatasourcePanelDragOption\", \"/app/superset-frontend/src/explore/components/DatasourcePanel/DatasourcePanelDragOption/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useDrag","css","styled","DndItemType","StyledColumnOption","StyledMetricOption","Icons","jsx","_jsx","jsxs","_jsxs","DatasourceItemContainer","div","theme","gridUnit","DatasourcePanelDragOption","props","labelRef","showTooltip","type","value","isDragging","drag","item","collect","monitor","optionProps","showType","ref","children","Column","column","metric","Drag","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/DatasourcePanel/DatasourcePanelDragOption/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { RefObject } from 'react';\nimport { useDrag } from 'react-dnd';\nimport { css, Metric, styled } from '@superset-ui/core';\nimport { ColumnMeta } from '@superset-ui/chart-controls';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport {\n  StyledColumnOption,\n  StyledMetricOption,\n} from 'src/explore/components/optionRenderers';\nimport Icons from 'src/components/Icons';\n\nimport { DatasourcePanelDndItem } from '../types';\n\nconst DatasourceItemContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: ${theme.gridUnit * 6}px;\n    padding: 0 ${theme.gridUnit}px;\n\n    // hack to make the drag preview image corners rounded\n    transform: translate(0, 0);\n    background-color: inherit;\n    border-radius: 4px;\n\n    > div {\n      min-width: 0;\n      margin-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\n\ninterface DatasourcePanelDragOptionProps extends DatasourcePanelDndItem {\n  labelRef?: RefObject<any>;\n  showTooltip?: boolean;\n}\n\ntype MetricOption = Omit<Metric, 'id'> & {\n  label?: string;\n};\n\nexport default function DatasourcePanelDragOption(\n  props: DatasourcePanelDragOptionProps,\n) {\n  const { labelRef, showTooltip, type, value } = props;\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      value: props.value,\n      type: props.type,\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const optionProps = {\n    labelRef,\n    showTooltip: !isDragging && showTooltip,\n    showType: true,\n  };\n\n  return (\n    <DatasourceItemContainer data-test=\"DatasourcePanelDragOption\" ref={drag}>\n      {type === DndItemType.Column ? (\n        <StyledColumnOption column={value as ColumnMeta} {...optionProps} />\n      ) : (\n        <StyledMetricOption metric={value as MetricOption} {...optionProps} />\n      )}\n      <Icons.Drag />\n    </DatasourceItemContainer>\n  );\n}\n"],"mappings":"uSAmBA,SAASA,OAAO,QAAQ,WAAW;AACnC,SAASC,GAAG,EAAUC,MAAM,QAAQ,mBAAmB;AAEvD,SAASC,WAAW,QAAQ,oCAAoC;AAChE,SACEC,kBAAkB,EAClBC,kBAAkB,QACb,wCAAwC;AAC/C,OAAOC,KAAK,MAAM,sBAAsB,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAIzC,MAAMC,uBAAuB,GAAGT,MAAM,CAACU,GAAG;IACtC,CAAC,EAAEC,KAAK,EAAE,KAAKZ,GAAG;;;;;cAKRY,KAAK,CAACC,QAAQ,GAAG,CAAC;iBACfD,KAAK,CAACC,QAAQ;;;;;;;;;sBASTD,KAAK,CAACC,QAAQ,GAAG,CAAC;;GAErC;CACF;AAWD,eAAc,SAAUC,yBAAyBA,CAC/CC,KAAqC;EAErC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,IAAI,EAAEC,KAAK,EAAE,GAAGJ,KAAK;EACpD,MAAM,CAAC,EAAEK,UAAU,EAAE,EAAEC,IAAI,CAAC,GAAGtB,OAAO,CAAC;IACrCuB,IAAI,EAAE;MACJH,KAAK,EAAEJ,KAAK,CAACI,KAAK;MAClBD,IAAI,EAAEH,KAAK,CAACG;KACb;IACDK,OAAO,EAAEA,CAAAC,OAAO,MAAK;MACnBJ,UAAU,EAAEI,OAAO,CAACJ,UAAU;KAC/B;GACF,CAAC;EAEF,MAAMK,WAAW,GAAG;IAClBT,QAAQ;IACRC,WAAW,EAAE,CAACG,UAAU,IAAIH,WAAW;IACvCS,QAAQ,EAAE;GACX;EAED,OACEjB,KAAA,CAACC,uBAAuB,IAAC,aAAU,2BAA2B,EAACiB,GAAG,EAAEN,IAAK,EAAAO,QAAA;IACtEV,IAAI,KAAKhB,WAAW,CAAC2B,MAAM,GAC1BtB,IAAA,CAACJ,kBAAkB,IAAC2B,MAAM,EAAEX,KAAoB,KAAKM,WAAW,EAAC,CAAG,GAEpElB,IAAA,CAACH,kBAAkB,IAAC2B,MAAM,EAAEZ,KAAsB,KAAKM,WAAW,EAAC,CACpE;IACDlB,IAAA,CAACF,KAAK,CAAC2B,IAAI,KACb;EAAyB,CAAC;AAE9B,CAACC,aAAA,CA9BuBnB,yBAAyB,4CAIhBf,OAAO,sBAAAmC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAlClC5B,uBAAuB,kIAAAwB,cAAA,CAAAI,QAAA,CA8BLxB,yBAAyB,4JAAAyB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}