{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createDurationFormatter, getNumberFormatter, getNumberFormatterRegistry, NumberFormats, getTimeFormatterRegistry, SMART_DATE_ID, SMART_DATE_DETAILED_ID, SMART_DATE_VERBOSE_ID, createSmartDateFormatter, createSmartDateVerboseFormatter, createSmartDateDetailedFormatter } from '@superset-ui/core';\nexport default function setupFormatters(d3NumberFormat, d3TimeFormat) {\n  getNumberFormatterRegistry().\n  setD3Format(d3NumberFormat)\n  // Add shims for format strings that are deprecated or common typos.\n  // Temporary solution until performing a db migration to fix this.\n  .registerValue(',0', getNumberFormatter(',.4~f')).\n  registerValue('null', getNumberFormatter(',.4~f')).\n  registerValue('%', getNumberFormatter('.0%')).\n  registerValue('.', getNumberFormatter('.4~f')).\n  registerValue(',f', getNumberFormatter(',d')).\n  registerValue(',r', getNumberFormatter(',.4f')).\n  registerValue('0f', getNumberFormatter(',d')).\n  registerValue(',#', getNumberFormatter(',.4~f')).\n  registerValue('$,f', getNumberFormatter('$,d')).\n  registerValue('0%', getNumberFormatter('.0%')).\n  registerValue('f', getNumberFormatter(',d')).\n  registerValue(',.', getNumberFormatter(',.4~f')).\n  registerValue('.1%f', getNumberFormatter('.1%')).\n  registerValue('1%', getNumberFormatter('.0%')).\n  registerValue('3%', getNumberFormatter('.0%')).\n  registerValue(',%', getNumberFormatter(',.0%')).\n  registerValue('.r', getNumberFormatter('.4~f')).\n  registerValue('$,.0', getNumberFormatter('$,d')).\n  registerValue('$,.1', getNumberFormatter('$,.1~f')).\n  registerValue(',0s', getNumberFormatter(',.4~f')).\n  registerValue('%%%', getNumberFormatter('.0%')).\n  registerValue(',0f', getNumberFormatter(',d')).\n  registerValue('+,%', getNumberFormatter('+,.0%')).\n  registerValue('$f', getNumberFormatter('$,d')).\n  registerValue('+,', getNumberFormatter(NumberFormats.INTEGER_SIGNED)).\n  registerValue(',2f', getNumberFormatter(',.4~f')).\n  registerValue(',g', getNumberFormatter(',.4~f')).\n  registerValue('int', getNumberFormatter(NumberFormats.INTEGER)).\n  registerValue('.0%f', getNumberFormatter('.1%')).\n  registerValue('$,0', getNumberFormatter('$,.4f')).\n  registerValue('$,0f', getNumberFormatter('$,.4f')).\n  registerValue('$,.f', getNumberFormatter('$,.4f')).\n  registerValue('DURATION', createDurationFormatter()).\n  registerValue('DURATION_SUB', createDurationFormatter({ formatSubMilliseconds: true }));\n  const timeFormatterRegistry = getTimeFormatterRegistry();\n  timeFormatterRegistry.\n  setD3Format(d3TimeFormat).\n  registerValue(SMART_DATE_ID, createSmartDateFormatter(timeFormatterRegistry.d3Format)).\n  registerValue(SMART_DATE_VERBOSE_ID, createSmartDateVerboseFormatter(timeFormatterRegistry.d3Format)).\n  registerValue(SMART_DATE_DETAILED_ID, createSmartDateDetailedFormatter(timeFormatterRegistry.d3Format)).\n  setDefaultKey(SMART_DATE_ID);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(setupFormatters, \"setupFormatters\", \"/app/superset-frontend/src/setup/setupFormatters.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["createDurationFormatter","getNumberFormatter","getNumberFormatterRegistry","NumberFormats","getTimeFormatterRegistry","SMART_DATE_ID","SMART_DATE_DETAILED_ID","SMART_DATE_VERBOSE_ID","createSmartDateFormatter","createSmartDateVerboseFormatter","createSmartDateDetailedFormatter","setupFormatters","d3NumberFormat","d3TimeFormat","setD3Format","registerValue","INTEGER_SIGNED","INTEGER","formatSubMilliseconds","timeFormatterRegistry","d3Format","setDefaultKey","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/setup/setupFormatters.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  createDurationFormatter,\n  getNumberFormatter,\n  getNumberFormatterRegistry,\n  NumberFormats,\n  getTimeFormatterRegistry,\n  SMART_DATE_ID,\n  SMART_DATE_DETAILED_ID,\n  SMART_DATE_VERBOSE_ID,\n  createSmartDateFormatter,\n  createSmartDateVerboseFormatter,\n  createSmartDateDetailedFormatter,\n} from '@superset-ui/core';\nimport { FormatLocaleDefinition } from 'd3-format';\nimport { TimeLocaleDefinition } from 'd3-time-format';\n\nexport default function setupFormatters(\n  d3NumberFormat: Partial<FormatLocaleDefinition>,\n  d3TimeFormat: Partial<TimeLocaleDefinition>,\n) {\n  getNumberFormatterRegistry()\n    .setD3Format(d3NumberFormat)\n    // Add shims for format strings that are deprecated or common typos.\n    // Temporary solution until performing a db migration to fix this.\n    .registerValue(',0', getNumberFormatter(',.4~f'))\n    .registerValue('null', getNumberFormatter(',.4~f'))\n    .registerValue('%', getNumberFormatter('.0%'))\n    .registerValue('.', getNumberFormatter('.4~f'))\n    .registerValue(',f', getNumberFormatter(',d'))\n    .registerValue(',r', getNumberFormatter(',.4f'))\n    .registerValue('0f', getNumberFormatter(',d'))\n    .registerValue(',#', getNumberFormatter(',.4~f'))\n    .registerValue('$,f', getNumberFormatter('$,d'))\n    .registerValue('0%', getNumberFormatter('.0%'))\n    .registerValue('f', getNumberFormatter(',d'))\n    .registerValue(',.', getNumberFormatter(',.4~f'))\n    .registerValue('.1%f', getNumberFormatter('.1%'))\n    .registerValue('1%', getNumberFormatter('.0%'))\n    .registerValue('3%', getNumberFormatter('.0%'))\n    .registerValue(',%', getNumberFormatter(',.0%'))\n    .registerValue('.r', getNumberFormatter('.4~f'))\n    .registerValue('$,.0', getNumberFormatter('$,d'))\n    .registerValue('$,.1', getNumberFormatter('$,.1~f'))\n    .registerValue(',0s', getNumberFormatter(',.4~f'))\n    .registerValue('%%%', getNumberFormatter('.0%'))\n    .registerValue(',0f', getNumberFormatter(',d'))\n    .registerValue('+,%', getNumberFormatter('+,.0%'))\n    .registerValue('$f', getNumberFormatter('$,d'))\n    .registerValue('+,', getNumberFormatter(NumberFormats.INTEGER_SIGNED))\n    .registerValue(',2f', getNumberFormatter(',.4~f'))\n    .registerValue(',g', getNumberFormatter(',.4~f'))\n    .registerValue('int', getNumberFormatter(NumberFormats.INTEGER))\n    .registerValue('.0%f', getNumberFormatter('.1%'))\n    .registerValue('$,0', getNumberFormatter('$,.4f'))\n    .registerValue('$,0f', getNumberFormatter('$,.4f'))\n    .registerValue('$,.f', getNumberFormatter('$,.4f'))\n    .registerValue('DURATION', createDurationFormatter())\n    .registerValue(\n      'DURATION_SUB',\n      createDurationFormatter({ formatSubMilliseconds: true }),\n    );\n\n  const timeFormatterRegistry = getTimeFormatterRegistry();\n\n  timeFormatterRegistry\n    .setD3Format(d3TimeFormat)\n    .registerValue(\n      SMART_DATE_ID,\n      createSmartDateFormatter(timeFormatterRegistry.d3Format),\n    )\n    .registerValue(\n      SMART_DATE_VERBOSE_ID,\n      createSmartDateVerboseFormatter(timeFormatterRegistry.d3Format),\n    )\n    .registerValue(\n      SMART_DATE_DETAILED_ID,\n      createSmartDateDetailedFormatter(timeFormatterRegistry.d3Format),\n    )\n    .setDefaultKey(SMART_DATE_ID);\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SACEA,uBAAuB,EACvBC,kBAAkB,EAClBC,0BAA0B,EAC1BC,aAAa,EACbC,wBAAwB,EACxBC,aAAa,EACbC,sBAAsB,EACtBC,qBAAqB,EACrBC,wBAAwB,EACxBC,+BAA+B,EAC/BC,gCAAgC,QAC3B,mBAAmB;AAI1B,eAAc,SAAUC,eAAeA,CACrCC,cAA+C,EAC/CC,YAA2C;EAE3CX,0BAA0B,EAAE;EACzBY,WAAW,CAACF,cAAc;EAC3B;EACA;EAAA,CACCG,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,OAAO,CAAC,CAAC;EAChDc,aAAa,CAAC,MAAM,EAAEd,kBAAkB,CAAC,OAAO,CAAC,CAAC;EAClDc,aAAa,CAAC,GAAG,EAAEd,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAC7Cc,aAAa,CAAC,GAAG,EAAEd,kBAAkB,CAAC,MAAM,CAAC,CAAC;EAC9Cc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,IAAI,CAAC,CAAC;EAC7Cc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,MAAM,CAAC,CAAC;EAC/Cc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,IAAI,CAAC,CAAC;EAC7Cc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,OAAO,CAAC,CAAC;EAChDc,aAAa,CAAC,KAAK,EAAEd,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAC/Cc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAC9Cc,aAAa,CAAC,GAAG,EAAEd,kBAAkB,CAAC,IAAI,CAAC,CAAC;EAC5Cc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,OAAO,CAAC,CAAC;EAChDc,aAAa,CAAC,MAAM,EAAEd,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAChDc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAC9Cc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAC9Cc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,MAAM,CAAC,CAAC;EAC/Cc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,MAAM,CAAC,CAAC;EAC/Cc,aAAa,CAAC,MAAM,EAAEd,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAChDc,aAAa,CAAC,MAAM,EAAEd,kBAAkB,CAAC,QAAQ,CAAC,CAAC;EACnDc,aAAa,CAAC,KAAK,EAAEd,kBAAkB,CAAC,OAAO,CAAC,CAAC;EACjDc,aAAa,CAAC,KAAK,EAAEd,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAC/Cc,aAAa,CAAC,KAAK,EAAEd,kBAAkB,CAAC,IAAI,CAAC,CAAC;EAC9Cc,aAAa,CAAC,KAAK,EAAEd,kBAAkB,CAAC,OAAO,CAAC,CAAC;EACjDc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAC9Cc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAACE,aAAa,CAACa,cAAc,CAAC,CAAC;EACrED,aAAa,CAAC,KAAK,EAAEd,kBAAkB,CAAC,OAAO,CAAC,CAAC;EACjDc,aAAa,CAAC,IAAI,EAAEd,kBAAkB,CAAC,OAAO,CAAC,CAAC;EAChDc,aAAa,CAAC,KAAK,EAAEd,kBAAkB,CAACE,aAAa,CAACc,OAAO,CAAC,CAAC;EAC/DF,aAAa,CAAC,MAAM,EAAEd,kBAAkB,CAAC,KAAK,CAAC,CAAC;EAChDc,aAAa,CAAC,KAAK,EAAEd,kBAAkB,CAAC,OAAO,CAAC,CAAC;EACjDc,aAAa,CAAC,MAAM,EAAEd,kBAAkB,CAAC,OAAO,CAAC,CAAC;EAClDc,aAAa,CAAC,MAAM,EAAEd,kBAAkB,CAAC,OAAO,CAAC,CAAC;EAClDc,aAAa,CAAC,UAAU,EAAEf,uBAAuB,EAAE,CAAC;EACpDe,aAAa,CACZ,cAAc,EACdf,uBAAuB,CAAC,EAAEkB,qBAAqB,EAAE,IAAI,EAAE,CAAC,CACzD;EAEH,MAAMC,qBAAqB,GAAGf,wBAAwB,EAAE;EAExDe,qBAAqB;EAClBL,WAAW,CAACD,YAAY,CAAC;EACzBE,aAAa,CACZV,aAAa,EACbG,wBAAwB,CAACW,qBAAqB,CAACC,QAAQ,CAAC,CACzD;EACAL,aAAa,CACZR,qBAAqB,EACrBE,+BAA+B,CAACU,qBAAqB,CAACC,QAAQ,CAAC,CAChE;EACAL,aAAa,CACZT,sBAAsB,EACtBI,gCAAgC,CAACS,qBAAqB,CAACC,QAAQ,CAAC,CACjE;EACAC,aAAa,CAAChB,aAAa,CAAC;AACjC,CAAC,mBAAAiB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CA/DuBf,eAAe,oGAAAgB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}