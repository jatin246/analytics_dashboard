{"ast":null,"code":"import _debounce from \"lodash/debounce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createRef, PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport {\n  css,\n  FAST_DEBOUNCE,\n  FeatureFlag,\n  isFeatureEnabled,\n  styled,\n  t } from\n'@superset-ui/core';\n\nimport {\n  Draggable,\n  Droppable } from\n'src/dashboard/components/dnd/DragDroppable';\nimport DragHandle from 'src/dashboard/components/dnd/DragHandle';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport Icons from 'src/components/Icons';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport BackgroundStyleDropdown from 'src/dashboard/components/menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport { BACKGROUND_TRANSPARENT } from 'src/dashboard/util/constants';\nimport { EMPTY_CONTAINER_Z_INDEX } from 'src/dashboard/constants';\nimport { isCurrentUserBot } from 'src/utils/isBot';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  occupiedColumnCount: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n  maxChildrenHeight: PropTypes.number.isRequired,\n\n  // dnd\n  handleComponentDrop: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired\n};\n\nconst GridRow = styled.div`\n  ${({ theme, editMode }) => css`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    align-items: flex-start;\n    width: 100%;\n    height: fit-content;\n\n    & > :not(:last-child):not(.hover-menu) {\n      ${!editMode && `margin-right: ${theme.gridUnit * 4}px;`}\n    }\n\n    & .empty-droptarget {\n      position: relative;\n      align-self: center;\n      &.empty-droptarget--vertical {\n        min-width: ${theme.gridUnit * 4}px;\n        &:not(:last-child) {\n          width: ${theme.gridUnit * 4}px;\n        }\n        &:first-child:not(.droptarget-side) {\n          z-index: ${EMPTY_CONTAINER_Z_INDEX};\n          position: absolute;\n          width: 100%;\n          height: 100%;\n        }\n      }\n      &.droptarget-side {\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        position: absolute;\n        width: ${theme.gridUnit * 4}px;\n        &:first-child {\n          inset-inline-start: 0;\n        }\n      }\n    }\n\n    &.grid-row--empty {\n      min-height: ${theme.gridUnit * 25}px;\n    }\n  `}\n`;\n\nconst emptyRowContentStyles = (theme) => css`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.text.label};\n`;\n\nclass Row extends PureComponent {\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    handleMenuHover = (hovered) => {\n      const { isHovered } = hovered;\n      this.setState(() => ({ hoverMenuHovered: isHovered }));\n    };this.state = { isFocused: false, isInView: false, hoverMenuHovered: false };this.handleDeleteComponent = this.handleDeleteComponent.bind(this);this.handleUpdateMeta = this.handleUpdateMeta.bind(this);this.handleChangeBackground = this.handleUpdateMeta.bind(this, 'background');this.handleChangeFocus = this.handleChangeFocus.bind(this);this.handleMenuHover = this.handleMenuHover.bind(this);this.setVerticalEmptyContainerHeight = _debounce(this.setVerticalEmptyContainerHeight.bind(this), FAST_DEBOUNCE);this.containerRef = /*#__PURE__*/createRef();this.observerEnabler = null;this.observerDisabler = null;} // if chart not rendered - render it if it's less than 1 view height away from current viewport\n  // if chart rendered - remove it if it's more than 4 view heights away from current viewport\n  componentDidMount() {if (isFeatureEnabled(FeatureFlag.DashboardVirtualization) && !isCurrentUserBot()) {this.observerEnabler = new IntersectionObserver(([entry]) => {if (entry.isIntersecting && !this.state.isInView) {this.setState({ isInView: true });}}, { rootMargin: '100% 0px' });this.observerDisabler = new IntersectionObserver(([entry]) => {if (!entry.isIntersecting && this.state.isInView) {this.setState({ isInView: false });}}, { rootMargin: '400% 0px' });const element = this.containerRef.current;if (element) {this.observerEnabler.observe(element);this.observerDisabler.observe(element);this.setVerticalEmptyContainerHeight();}}}componentDidUpdate() {this.setVerticalEmptyContainerHeight();}setVerticalEmptyContainerHeight() {var _this$containerRef$cu;const { containerHeight } = this.state;const { editMode } = this.props;const updatedHeight = (_this$containerRef$cu = this.containerRef.current) == null ? void 0 : _this$containerRef$cu.clientHeight;if (editMode && this.containerRef.current && updatedHeight !== containerHeight) {this.setState({ containerHeight: updatedHeight });}}componentWillUnmount() {var _this$observerEnabler, _this$observerDisable;(_this$observerEnabler = this.observerEnabler) == null ? void 0 : _this$observerEnabler.disconnect();(_this$observerDisable = this.observerDisabler) == null ? void 0 : _this$observerDisable.disconnect();}handleChangeFocus(nextFocus) {this.setState(() => ({ isFocused: Boolean(nextFocus) }));}handleUpdateMeta(metaKey, nextValue) {const { updateComponents, component } = this.props;if (nextValue && component.meta[metaKey] !== nextValue) {updateComponents({ [component.id]: { ...component, meta: { ...component.meta, [metaKey]: nextValue } } });}}handleDeleteComponent() {const { deleteComponent, component, parentId } = this.props;deleteComponent(component.id, parentId);}render() {\n    const {\n      component: rowComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      occupiedColumnCount,\n      depth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      onChangeTab,\n      isComponentVisible\n    } = this.props;\n    const { containerHeight, hoverMenuHovered } = this.state;\n\n    const rowItems = rowComponent.children || [];\n\n    const backgroundStyle = backgroundStyleOptions.find(\n      (opt) =>\n      opt.value === (rowComponent.meta.background || BACKGROUND_TRANSPARENT)\n    );\n    const remainColumnCount = availableColumnCount - occupiedColumnCount;\n\n    return (\n      _jsx(Draggable, {\n        component: rowComponent,\n        parentComponent: parentComponent,\n        orientation: \"row\",\n        index: index,\n        depth: depth,\n        onDrop: handleComponentDrop,\n        editMode: editMode, children:\n\n        ({ dragSourceRef }) =>\n        _jsxs(WithPopoverMenu, {\n          isFocused: this.state.isFocused,\n          onChangeFocus: this.handleChangeFocus,\n          disableClick: true,\n          menuItems: [\n          _jsx(BackgroundStyleDropdown, {\n            id: `${rowComponent.id}-background`,\n            value: backgroundStyle.value,\n            onChange: this.handleChangeBackground }\n          )],\n\n          editMode: editMode, children: [\n\n          editMode &&\n          _jsxs(HoverMenu, {\n            onHover: this.handleMenuHover,\n            innerRef: dragSourceRef,\n            position: \"left\", children: [\n\n            _jsx(DragHandle, { position: \"left\" }),\n            _jsx(DeleteComponentButton, { onDelete: this.handleDeleteComponent }),\n            _jsx(IconButton, {\n              onClick: this.handleChangeFocus,\n              icon: _jsx(Icons.Cog, { iconSize: \"xl\" }) }\n            )] }\n          ),\n\n          _jsxs(GridRow, {\n            className: cx(\n              'grid-row',\n              rowItems.length === 0 && 'grid-row--empty',\n              hoverMenuHovered && 'grid-row--hovered',\n              backgroundStyle.className\n            ),\n            \"data-test\": `grid-row-${backgroundStyle.className}`,\n            ref: this.containerRef,\n            editMode: editMode, children: [\n\n            editMode &&\n            _jsx(Droppable, { ...(\n              rowItems.length === 0 ?\n              {\n                component: rowComponent,\n                parentComponent: rowComponent,\n                dropToChild: true\n              } :\n              {\n                component: rowItems[0],\n                parentComponent: rowComponent\n              }),\n              depth: depth,\n              index: 0,\n              orientation: \"row\",\n              onDrop: handleComponentDrop,\n              className: cx(\n                'empty-droptarget',\n                'empty-droptarget--vertical',\n                rowItems.length > 0 && 'droptarget-side'\n              ),\n              editMode: true,\n              style: {\n                height: rowItems.length > 0 ? containerHeight : '100%',\n                ...(rowItems.length > 0 && { width: 16 })\n              }, children:\n\n              ({ dropIndicatorProps }) =>\n              dropIndicatorProps && _jsx(\"div\", { ...dropIndicatorProps }) }\n\n            ),\n\n            rowItems.length === 0 &&\n            _jsx(\"div\", { css: emptyRowContentStyles, children: t('Empty row') }),\n\n            rowItems.length > 0 &&\n            rowItems.map((componentId, itemIndex) =>\n            _jsxs(Fragment, { children: [\n              _jsx(DashboardComponent, {\n\n                id: componentId,\n                parentId: rowComponent.id,\n                depth: depth + 1,\n                index: itemIndex,\n                availableColumnCount: remainColumnCount,\n                columnWidth: columnWidth,\n                onResizeStart: onResizeStart,\n                onResize: onResize,\n                onResizeStop: onResizeStop,\n                isComponentVisible: isComponentVisible,\n                onChangeTab: onChangeTab,\n                isInView: this.state.isInView }, componentId\n              ),\n              editMode &&\n              _jsx(Droppable, {\n                component: rowItems,\n                parentComponent: rowComponent,\n                depth: depth,\n                index: itemIndex + 1,\n                orientation: \"row\",\n                onDrop: handleComponentDrop,\n                className: cx(\n                  'empty-droptarget',\n                  'empty-droptarget--vertical',\n                  remainColumnCount === 0 &&\n                  itemIndex === rowItems.length - 1 &&\n                  'droptarget-side'\n                ),\n                editMode: true,\n                style: {\n                  height: containerHeight,\n                  ...(remainColumnCount === 0 &&\n                  itemIndex === rowItems.length - 1 && { width: 16 })\n                }, children:\n\n                ({ dropIndicatorProps }) =>\n                dropIndicatorProps && _jsx(\"div\", { ...dropIndicatorProps }) }\n\n              )] }, componentId\n\n            )\n            )] }\n          )] }\n        ) }\n\n      ));\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nRow.propTypes = propTypes;const _default =\n\nRow;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");reactHotLoader.register(GridRow, \"GridRow\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");reactHotLoader.register(emptyRowContentStyles, \"emptyRowContentStyles\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");reactHotLoader.register(Row, \"Row\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Row.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["createRef","PureComponent","Fragment","PropTypes","cx","css","FAST_DEBOUNCE","FeatureFlag","isFeatureEnabled","styled","t","Draggable","Droppable","DragHandle","DashboardComponent","DeleteComponentButton","HoverMenu","Icons","IconButton","BackgroundStyleDropdown","WithPopoverMenu","componentShape","backgroundStyleOptions","BACKGROUND_TRANSPARENT","EMPTY_CONTAINER_Z_INDEX","isCurrentUserBot","jsx","_jsx","jsxs","_jsxs","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","editMode","bool","availableColumnCount","columnWidth","occupiedColumnCount","onResizeStart","func","onResize","onResizeStop","maxChildrenHeight","handleComponentDrop","deleteComponent","updateComponents","GridRow","div","theme","gridUnit","emptyRowContentStyles","colors","text","label","Row","constructor","props","handleMenuHover","hovered","isHovered","setState","hoverMenuHovered","state","isFocused","isInView","handleDeleteComponent","bind","handleUpdateMeta","handleChangeBackground","handleChangeFocus","setVerticalEmptyContainerHeight","_debounce","containerRef","observerEnabler","observerDisabler","componentDidMount","DashboardVirtualization","IntersectionObserver","entry","isIntersecting","rootMargin","element","current","observe","componentDidUpdate","_this$containerRef$cu","containerHeight","updatedHeight","clientHeight","componentWillUnmount","_this$observerEnabler","_this$observerDisable","disconnect","nextFocus","Boolean","metaKey","nextValue","meta","render","rowComponent","onChangeTab","isComponentVisible","rowItems","children","backgroundStyle","find","opt","value","background","remainColumnCount","orientation","onDrop","dragSourceRef","onChangeFocus","disableClick","menuItems","onChange","onHover","innerRef","position","onDelete","onClick","icon","Cog","iconSize","className","length","ref","dropToChild","style","height","width","dropIndicatorProps","map","componentId","itemIndex","__reactstandin__regenerateByEval","key","code","eval","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/dashboard/components/gridComponents/Row.jsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createRef, PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { debounce } from 'lodash';\nimport {\n  css,\n  FAST_DEBOUNCE,\n  FeatureFlag,\n  isFeatureEnabled,\n  styled,\n  t,\n} from '@superset-ui/core';\n\nimport {\n  Draggable,\n  Droppable,\n} from 'src/dashboard/components/dnd/DragDroppable';\nimport DragHandle from 'src/dashboard/components/dnd/DragHandle';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport HoverMenu from 'src/dashboard/components/menu/HoverMenu';\nimport Icons from 'src/components/Icons';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport BackgroundStyleDropdown from 'src/dashboard/components/menu/BackgroundStyleDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport { BACKGROUND_TRANSPARENT } from 'src/dashboard/util/constants';\nimport { EMPTY_CONTAINER_Z_INDEX } from 'src/dashboard/constants';\nimport { isCurrentUserBot } from 'src/utils/isBot';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  occupiedColumnCount: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n  maxChildrenHeight: PropTypes.number.isRequired,\n\n  // dnd\n  handleComponentDrop: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nconst GridRow = styled.div`\n  ${({ theme, editMode }) => css`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    align-items: flex-start;\n    width: 100%;\n    height: fit-content;\n\n    & > :not(:last-child):not(.hover-menu) {\n      ${!editMode && `margin-right: ${theme.gridUnit * 4}px;`}\n    }\n\n    & .empty-droptarget {\n      position: relative;\n      align-self: center;\n      &.empty-droptarget--vertical {\n        min-width: ${theme.gridUnit * 4}px;\n        &:not(:last-child) {\n          width: ${theme.gridUnit * 4}px;\n        }\n        &:first-child:not(.droptarget-side) {\n          z-index: ${EMPTY_CONTAINER_Z_INDEX};\n          position: absolute;\n          width: 100%;\n          height: 100%;\n        }\n      }\n      &.droptarget-side {\n        z-index: ${EMPTY_CONTAINER_Z_INDEX};\n        position: absolute;\n        width: ${theme.gridUnit * 4}px;\n        &:first-child {\n          inset-inline-start: 0;\n        }\n      }\n    }\n\n    &.grid-row--empty {\n      min-height: ${theme.gridUnit * 25}px;\n    }\n  `}\n`;\n\nconst emptyRowContentStyles = theme => css`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${theme.colors.text.label};\n`;\n\nclass Row extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false,\n      isInView: false,\n      hoverMenuHovered: false,\n    };\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleUpdateMeta = this.handleUpdateMeta.bind(this);\n    this.handleChangeBackground = this.handleUpdateMeta.bind(\n      this,\n      'background',\n    );\n    this.handleChangeFocus = this.handleChangeFocus.bind(this);\n    this.handleMenuHover = this.handleMenuHover.bind(this);\n    this.setVerticalEmptyContainerHeight = debounce(\n      this.setVerticalEmptyContainerHeight.bind(this),\n      FAST_DEBOUNCE,\n    );\n\n    this.containerRef = createRef();\n    this.observerEnabler = null;\n    this.observerDisabler = null;\n  }\n\n  // if chart not rendered - render it if it's less than 1 view height away from current viewport\n  // if chart rendered - remove it if it's more than 4 view heights away from current viewport\n  componentDidMount() {\n    if (\n      isFeatureEnabled(FeatureFlag.DashboardVirtualization) &&\n      !isCurrentUserBot()\n    ) {\n      this.observerEnabler = new IntersectionObserver(\n        ([entry]) => {\n          if (entry.isIntersecting && !this.state.isInView) {\n            this.setState({ isInView: true });\n          }\n        },\n        {\n          rootMargin: '100% 0px',\n        },\n      );\n      this.observerDisabler = new IntersectionObserver(\n        ([entry]) => {\n          if (!entry.isIntersecting && this.state.isInView) {\n            this.setState({ isInView: false });\n          }\n        },\n        {\n          rootMargin: '400% 0px',\n        },\n      );\n      const element = this.containerRef.current;\n      if (element) {\n        this.observerEnabler.observe(element);\n        this.observerDisabler.observe(element);\n        this.setVerticalEmptyContainerHeight();\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    this.setVerticalEmptyContainerHeight();\n  }\n\n  setVerticalEmptyContainerHeight() {\n    const { containerHeight } = this.state;\n    const { editMode } = this.props;\n    const updatedHeight = this.containerRef.current?.clientHeight;\n    if (\n      editMode &&\n      this.containerRef.current &&\n      updatedHeight !== containerHeight\n    ) {\n      this.setState({ containerHeight: updatedHeight });\n    }\n  }\n\n  componentWillUnmount() {\n    this.observerEnabler?.disconnect();\n    this.observerDisabler?.disconnect();\n  }\n\n  handleChangeFocus(nextFocus) {\n    this.setState(() => ({ isFocused: Boolean(nextFocus) }));\n  }\n\n  handleUpdateMeta(metaKey, nextValue) {\n    const { updateComponents, component } = this.props;\n    if (nextValue && component.meta[metaKey] !== nextValue) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            [metaKey]: nextValue,\n          },\n        },\n      });\n    }\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, component, parentId } = this.props;\n    deleteComponent(component.id, parentId);\n  }\n\n  handleMenuHover = hovered => {\n    const { isHovered } = hovered;\n    this.setState(() => ({ hoverMenuHovered: isHovered }));\n  };\n\n  render() {\n    const {\n      component: rowComponent,\n      parentComponent,\n      index,\n      availableColumnCount,\n      columnWidth,\n      occupiedColumnCount,\n      depth,\n      onResizeStart,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n      onChangeTab,\n      isComponentVisible,\n    } = this.props;\n    const { containerHeight, hoverMenuHovered } = this.state;\n\n    const rowItems = rowComponent.children || [];\n\n    const backgroundStyle = backgroundStyleOptions.find(\n      opt =>\n        opt.value === (rowComponent.meta.background || BACKGROUND_TRANSPARENT),\n    );\n    const remainColumnCount = availableColumnCount - occupiedColumnCount;\n\n    return (\n      <Draggable\n        component={rowComponent}\n        parentComponent={parentComponent}\n        orientation=\"row\"\n        index={index}\n        depth={depth}\n        onDrop={handleComponentDrop}\n        editMode={editMode}\n      >\n        {({ dragSourceRef }) => (\n          <WithPopoverMenu\n            isFocused={this.state.isFocused}\n            onChangeFocus={this.handleChangeFocus}\n            disableClick\n            menuItems={[\n              <BackgroundStyleDropdown\n                id={`${rowComponent.id}-background`}\n                value={backgroundStyle.value}\n                onChange={this.handleChangeBackground}\n              />,\n            ]}\n            editMode={editMode}\n          >\n            {editMode && (\n              <HoverMenu\n                onHover={this.handleMenuHover}\n                innerRef={dragSourceRef}\n                position=\"left\"\n              >\n                <DragHandle position=\"left\" />\n                <DeleteComponentButton onDelete={this.handleDeleteComponent} />\n                <IconButton\n                  onClick={this.handleChangeFocus}\n                  icon={<Icons.Cog iconSize=\"xl\" />}\n                />\n              </HoverMenu>\n            )}\n            <GridRow\n              className={cx(\n                'grid-row',\n                rowItems.length === 0 && 'grid-row--empty',\n                hoverMenuHovered && 'grid-row--hovered',\n                backgroundStyle.className,\n              )}\n              data-test={`grid-row-${backgroundStyle.className}`}\n              ref={this.containerRef}\n              editMode={editMode}\n            >\n              {editMode && (\n                <Droppable\n                  {...(rowItems.length === 0\n                    ? {\n                        component: rowComponent,\n                        parentComponent: rowComponent,\n                        dropToChild: true,\n                      }\n                    : {\n                        component: rowItems[0],\n                        parentComponent: rowComponent,\n                      })}\n                  depth={depth}\n                  index={0}\n                  orientation=\"row\"\n                  onDrop={handleComponentDrop}\n                  className={cx(\n                    'empty-droptarget',\n                    'empty-droptarget--vertical',\n                    rowItems.length > 0 && 'droptarget-side',\n                  )}\n                  editMode\n                  style={{\n                    height: rowItems.length > 0 ? containerHeight : '100%',\n                    ...(rowItems.length > 0 && { width: 16 }),\n                  }}\n                >\n                  {({ dropIndicatorProps }) =>\n                    dropIndicatorProps && <div {...dropIndicatorProps} />\n                  }\n                </Droppable>\n              )}\n              {rowItems.length === 0 && (\n                <div css={emptyRowContentStyles}>{t('Empty row')}</div>\n              )}\n              {rowItems.length > 0 &&\n                rowItems.map((componentId, itemIndex) => (\n                  <Fragment key={componentId}>\n                    <DashboardComponent\n                      key={componentId}\n                      id={componentId}\n                      parentId={rowComponent.id}\n                      depth={depth + 1}\n                      index={itemIndex}\n                      availableColumnCount={remainColumnCount}\n                      columnWidth={columnWidth}\n                      onResizeStart={onResizeStart}\n                      onResize={onResize}\n                      onResizeStop={onResizeStop}\n                      isComponentVisible={isComponentVisible}\n                      onChangeTab={onChangeTab}\n                      isInView={this.state.isInView}\n                    />\n                    {editMode && (\n                      <Droppable\n                        component={rowItems}\n                        parentComponent={rowComponent}\n                        depth={depth}\n                        index={itemIndex + 1}\n                        orientation=\"row\"\n                        onDrop={handleComponentDrop}\n                        className={cx(\n                          'empty-droptarget',\n                          'empty-droptarget--vertical',\n                          remainColumnCount === 0 &&\n                            itemIndex === rowItems.length - 1 &&\n                            'droptarget-side',\n                        )}\n                        editMode\n                        style={{\n                          height: containerHeight,\n                          ...(remainColumnCount === 0 &&\n                            itemIndex === rowItems.length - 1 && { width: 16 }),\n                        }}\n                      >\n                        {({ dropIndicatorProps }) =>\n                          dropIndicatorProps && <div {...dropIndicatorProps} />\n                        }\n                      </Droppable>\n                    )}\n                  </Fragment>\n                ))}\n            </GridRow>\n          </WithPopoverMenu>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nRow.propTypes = propTypes;\n\nexport default Row;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}