{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { css, isFeatureEnabled, FeatureFlag } from '@superset-ui/core';\nimport { useSqlLabInitialState } from 'src/hooks/apiResources/sqlLab';\nimport { resetState } from 'src/SqlLab/actions/sqlLab';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { SqlLabGlobalStyles } from 'src/SqlLab//SqlLabGlobalStyles';\nimport App from 'src/SqlLab/components/App';\nimport Loading from 'src/components/Loading';\nimport EditorAutoSync from 'src/SqlLab/components/EditorAutoSync';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { LocationProvider } from './LocationContext';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport default function SqlLab() {\n  const lastInitializedAt = useSelector((state) => state.sqlLab.queriesLastUpdate || 0);\n  const { data, isLoading, isError, error, fulfilledTimeStamp } = useSqlLabInitialState();\n  const shouldInitialize = lastInitializedAt <= (fulfilledTimeStamp || 0);\n  const dispatch = useDispatch();\n  const initBootstrapData = useEffectEvent((sqlLabInitialState) => {\n    if (shouldInitialize) {\n      dispatch(resetState(sqlLabInitialState));\n    }\n  });\n  useEffect(() => {\n    if (data) {\n      initBootstrapData(data);\n    }\n  }, [data, initBootstrapData]);\n  if (isLoading || shouldInitialize)\n  return _jsx(Loading, {});\n  if (isError && error != null && error.message) {\n    dispatch(addDangerToast(error == null ? void 0 : error.message));\n    return null;\n  }\n  return _jsx(LocationProvider, { children:\n    _jsxs(\"div\", { css: css`\n          flex: 1 1 auto;\n          position: relative;\n          display: flex;\n          flex-direction: column;\n        `, children: [\n      _jsx(SqlLabGlobalStyles, {}),\n      _jsx(App, {}),\n      isFeatureEnabled(FeatureFlag.SqllabBackendPersistence) && _jsx(EditorAutoSync, {})] }\n    ) }\n  );\n}__signature__(SqlLab, \"useSelector{lastInitializedAt}\\nuseSqlLabInitialState{{ data, isLoading, isError, error, fulfilledTimeStamp }}\\nuseDispatch{dispatch}\\nuseEffectEvent{initBootstrapData}\\nuseEffect{}\", () => [useSelector, useSqlLabInitialState, useDispatch, useEffectEvent]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(SqlLab, \"SqlLab\", \"/app/superset-frontend/src/pages/SqlLab/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useEffect","useDispatch","useSelector","css","isFeatureEnabled","FeatureFlag","useSqlLabInitialState","resetState","addDangerToast","SqlLabGlobalStyles","App","Loading","EditorAutoSync","useEffectEvent","LocationProvider","jsx","_jsx","jsxs","_jsxs","SqlLab","lastInitializedAt","state","sqlLab","queriesLastUpdate","data","isLoading","isError","error","fulfilledTimeStamp","shouldInitialize","dispatch","initBootstrapData","sqlLabInitialState","message","children","SqllabBackendPersistence","__signature__","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/pages/SqlLab/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { css, isFeatureEnabled, FeatureFlag } from '@superset-ui/core';\nimport { useSqlLabInitialState } from 'src/hooks/apiResources/sqlLab';\nimport type { InitialState } from 'src/hooks/apiResources/sqlLab';\nimport { resetState } from 'src/SqlLab/actions/sqlLab';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport type { SqlLabRootState } from 'src/SqlLab/types';\nimport { SqlLabGlobalStyles } from 'src/SqlLab//SqlLabGlobalStyles';\nimport App from 'src/SqlLab/components/App';\nimport Loading from 'src/components/Loading';\nimport EditorAutoSync from 'src/SqlLab/components/EditorAutoSync';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { LocationProvider } from './LocationContext';\n\nexport default function SqlLab() {\n  const lastInitializedAt = useSelector<SqlLabRootState, number>(\n    state => state.sqlLab.queriesLastUpdate || 0,\n  );\n  const { data, isLoading, isError, error, fulfilledTimeStamp } =\n    useSqlLabInitialState();\n  const shouldInitialize = lastInitializedAt <= (fulfilledTimeStamp || 0);\n  const dispatch = useDispatch();\n\n  const initBootstrapData = useEffectEvent(\n    (sqlLabInitialState: InitialState) => {\n      if (shouldInitialize) {\n        dispatch(resetState(sqlLabInitialState));\n      }\n    },\n  );\n\n  useEffect(() => {\n    if (data) {\n      initBootstrapData(data);\n    }\n  }, [data, initBootstrapData]);\n\n  if (isLoading || shouldInitialize) return <Loading />;\n\n  if (isError && error?.message) {\n    dispatch(addDangerToast(error?.message));\n    return null;\n  }\n\n  return (\n    <LocationProvider>\n      <div\n        css={css`\n          flex: 1 1 auto;\n          position: relative;\n          display: flex;\n          flex-direction: column;\n        `}\n      >\n        <SqlLabGlobalStyles />\n        <App />\n        {isFeatureEnabled(FeatureFlag.SqllabBackendPersistence) && (\n          <EditorAutoSync />\n        )}\n      </div>\n    </LocationProvider>\n  );\n}\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,GAAG,EAAEC,gBAAgB,EAAEC,WAAW,QAAQ,mBAAmB;AACtE,SAASC,qBAAqB,QAAQ,+BAA+B;AAErE,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,cAAc,QAAQ,sCAAsC;AAErE,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,OAAOC,GAAG,MAAM,2BAA2B;AAC3C,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,OAAOC,cAAc,MAAM,sCAAsC;AACjE,OAAOC,cAAc,MAAM,0BAA0B;AACrD,SAASC,gBAAgB,QAAQ,mBAAmB,CAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAErD,eAAc,SAAUC,MAAMA,CAAA;EAC5B,MAAMC,iBAAiB,GAAGlB,WAAW,CACnC,CAAAmB,KAAK,KAAIA,KAAK,CAACC,MAAM,CAACC,iBAAiB,IAAI,CAAC,CAC7C;EACD,MAAM,EAAEC,IAAI,EAAEC,SAAS,EAAEC,OAAO,EAAEC,KAAK,EAAEC,kBAAkB,EAAE,GAC3DtB,qBAAqB,EAAE;EACzB,MAAMuB,gBAAgB,GAAGT,iBAAiB,KAAKQ,kBAAkB,IAAI,CAAC,CAAC;EACvE,MAAME,QAAQ,GAAG7B,WAAW,EAAE;EAE9B,MAAM8B,iBAAiB,GAAGlB,cAAc,CACtC,CAACmB,kBAAgC,KAAI;IACnC,IAAIH,gBAAgB,EAAE;MACpBC,QAAQ,CAACvB,UAAU,CAACyB,kBAAkB,CAAC,CAAC;;EAE5C,CAAC,CACF;EAEDhC,SAAS,CAAC,MAAK;IACb,IAAIwB,IAAI,EAAE;MACRO,iBAAiB,CAACP,IAAI,CAAC;;EAE3B,CAAC,EAAE,CAACA,IAAI,EAAEO,iBAAiB,CAAC,CAAC;EAE7B,IAAIN,SAAS,IAAII,gBAAgB;EAAE,OAAOb,IAAA,CAACL,OAAO,KAAG;EAErD,IAAIe,OAAO,IAAIC,KAAK,YAALA,KAAK,CAAEM,OAAO,EAAE;IAC7BH,QAAQ,CAACtB,cAAc,CAACmB,KAAK,oBAALA,KAAK,CAAEM,OAAO,CAAC,CAAC;IACxC,OAAO,IAAI;;EAGb,OACEjB,IAAA,CAACF,gBAAgB,IAAAoB,QAAA;IACfhB,KAAA,UACEf,GAAG,EAAEA,GAAG;;;;;SAKN,EAAA+B,QAAA;MAEFlB,IAAA,CAACP,kBAAkB,KACnB;MAAAO,IAAA,CAACN,GAAG,KACJ;MAACN,gBAAgB,CAACC,WAAW,CAAC8B,wBAAwB,CAAC,IACrDnB,IAAA,CAACJ,cAAc,KAChB;IACE,CACP;EAAkB,CAAC;AAEvB,CAACwB,aAAA,CAhDuBjB,MAAM,kMACFjB,WAAW,EAInCI,qBAAqB,EAENL,WAAW,EAEFY,cAAc,sBAAAwB,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CATlBtB,MAAM,yFAAAuB,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}