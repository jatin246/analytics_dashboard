{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { AnnotationOpacity, isTimeseriesAnnotationResult } from '@superset-ui/core';\nimport { extractForecastSeriesContext } from '../utils/forecast';\nimport { EchartsTimeseriesSeriesType, ForecastSeriesEnum, LegendOrientation } from '../types';\nimport { evalFormula, extractRecordAnnotations, formatAnnotationLabel, parseAnnotationOpacity } from '../utils/annotation';\nimport { getChartPadding, getTimeCompareStackId } from '../utils/series';\nimport { OpacityEnum, StackControlsValue, TIMESERIES_CONSTANTS } from '../constants';\n// based on weighted wiggle algorithm\n// source: https://ieeexplore.ieee.org/document/4658136\nexport const getBaselineSeriesForStream = (series, seriesType) => {\n  const seriesLength = series[0].length;\n  const baselineSeriesDelta = new Array(seriesLength).fill([0, 0]);\n  const getVal = (value) => value != null ? value : 0;\n  for (let i = 0; i < seriesLength; i += 1) {\n    let seriesSum = 0;\n    let weightedSeriesSum = 0;\n    for (let j = 0; j < series.length; j += 1) {\n      const delta = i > 0 ?\n      getVal(series[j][i][1]) - getVal(series[j][i - 1][1]) :\n      getVal(series[j][i][1]);\n      let deltaPrev = 0;\n      for (let k = 1; k < j - 1; k += 1) {\n        deltaPrev +=\n        i > 0 ?\n        getVal(series[k][i][1]) - getVal(series[k][i - 1][1]) :\n        getVal(series[k][i][1]);\n      }\n      weightedSeriesSum += (0.5 * delta + deltaPrev) * getVal(series[j][i][1]);\n      seriesSum += getVal(series[j][i][1]);\n    }\n    baselineSeriesDelta[i] = [series[0][i][0], -weightedSeriesSum / seriesSum];\n  }\n  const baselineSeries = baselineSeriesDelta.reduce((acc, curr, i) => {\n    if (i === 0) {\n      acc.push(curr);\n    } else\n    {\n      acc.push([curr[0], acc[i - 1][1] + curr[1]]);\n    }\n    return acc;\n  }, []);\n  return {\n    data: baselineSeries,\n    name: 'baseline',\n    stack: 'obs',\n    stackStrategy: 'all',\n    type: 'line',\n    lineStyle: {\n      opacity: 0\n    },\n    tooltip: {\n      show: false\n    },\n    silent: true,\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0\n    },\n    step: [\n    EchartsTimeseriesSeriesType.Start,\n    EchartsTimeseriesSeriesType.Middle,\n    EchartsTimeseriesSeriesType.End].\n    includes(seriesType) ?\n    seriesType :\n    undefined,\n    smooth: seriesType === EchartsTimeseriesSeriesType.Smooth\n  };\n};\nexport function transformSeries(series, colorScale, colorScaleKey, opts) {\n  const { name } = series;\n  const { area, connectNulls, filterState, seriesContexts = {}, markerEnabled, markerSize, areaOpacity = 1, seriesType, stack, stackIdSuffix, yAxisIndex = 0, showValue, onlyTotal, formatter, legendState, totalStackedValues = [], showValueIndexes = [], thresholdValues = [], richTooltip, sliceId, isHorizontal = false, queryIndex = 0, timeCompare = [] } = opts;\n  const contexts = seriesContexts[name || ''] || [];\n  const hasForecast = contexts.includes(ForecastSeriesEnum.ForecastTrend) ||\n  contexts.includes(ForecastSeriesEnum.ForecastLower) ||\n  contexts.includes(ForecastSeriesEnum.ForecastUpper);\n  const forecastSeries = extractForecastSeriesContext(name || '');\n  const isConfidenceBand = forecastSeries.type === ForecastSeriesEnum.ForecastLower ||\n  forecastSeries.type === ForecastSeriesEnum.ForecastUpper;\n  const isFiltered = (filterState == null ? void 0 : filterState.selectedValues) && !(filterState != null && filterState.selectedValues.includes(name));\n  const opacity = isFiltered ?\n  OpacityEnum.SemiTransparent :\n  OpacityEnum.NonTransparent;\n  // don't create a series if doing a stack or area chart and the result\n  // is a confidence band\n  if ((stack || area) && isConfidenceBand)\n  return undefined;\n  const isObservation = forecastSeries.type === ForecastSeriesEnum.Observation;\n  const isTrend = forecastSeries.type === ForecastSeriesEnum.ForecastTrend;\n  let stackId;\n  if (isConfidenceBand) {\n    stackId = forecastSeries.name;\n  } else\n  if (stack && isObservation) {\n    // the suffix of the observation series is '' (falsy), which disables\n    // stacking. Therefore we need to set something that is truthy.\n    stackId = getTimeCompareStackId('obs', timeCompare, name);\n  } else\n  if (stack && isTrend) {\n    stackId = getTimeCompareStackId(forecastSeries.type, timeCompare, name);\n  }\n  if (stackId && stackIdSuffix) {\n    stackId += stackIdSuffix;\n  }\n  let plotType;\n  if (!isConfidenceBand && (\n  seriesType === 'scatter' || hasForecast && isObservation)) {\n    plotType = 'scatter';\n  } else\n  if (isConfidenceBand) {\n    plotType = 'line';\n  } else\n  {\n    plotType = seriesType === 'bar' ? 'bar' : 'line';\n  }\n  // forcing the colorScale to return a different color for same metrics across different queries\n  const itemStyle = {\n    color: colorScale(colorScaleKey, sliceId),\n    opacity\n  };\n  let emphasis = {};\n  let showSymbol = false;\n  if (!isConfidenceBand) {\n    if (plotType === 'scatter') {\n      showSymbol = true;\n    } else\n    if (hasForecast && isObservation) {\n      showSymbol = true;\n    } else\n    if (plotType === 'line' && showValue) {\n      showSymbol = true;\n    } else\n    if (plotType === 'line' && !richTooltip && !markerEnabled) {\n      // this is hack to make timeseries line chart clickable when tooltip trigger is 'item'\n      // so that the chart can emit cross-filtering\n      showSymbol = true;\n      itemStyle.opacity = 0;\n      emphasis = {\n        itemStyle: {\n          opacity: 1\n        }\n      };\n    } else\n    if (markerEnabled) {\n      showSymbol = true;\n    }\n  }\n  const lineStyle = isConfidenceBand || stack === StackControlsValue.Stream && area ?\n  { ...opts.lineStyle, opacity: OpacityEnum.Transparent } :\n  { ...opts.lineStyle, opacity };\n  return {\n    ...series,\n    connectNulls,\n    queryIndex,\n    yAxisIndex,\n    name: forecastSeries.name,\n    itemStyle,\n    // @ts-ignore\n    type: plotType,\n    smooth: seriesType === 'smooth',\n    triggerLineEvent: true,\n    // @ts-ignore\n    step: ['start', 'middle', 'end'].includes(seriesType) ?\n    seriesType :\n    undefined,\n    stack: stackId,\n    stackStrategy: isConfidenceBand || stack === StackControlsValue.Stream ?\n    'all' :\n    'samesign',\n    lineStyle,\n    areaStyle: area || forecastSeries.type === ForecastSeriesEnum.ForecastUpper ?\n    {\n      opacity: opacity * areaOpacity\n    } :\n    undefined,\n    emphasis: {\n      // bold on hover as required since 5.3.0 to retain backwards feature parity:\n      // https://apache.github.io/echarts-handbook/en/basics/release-note/5-3-0/#removing-the-default-bolding-emphasis-effect-in-the-line-chart\n      // TODO: should consider only adding emphasis to currently hovered series\n      lineStyle: {\n        width: 'bolder'\n      },\n      ...emphasis\n    },\n    showSymbol,\n    symbolSize: markerSize,\n    label: {\n      show: !!showValue,\n      position: isHorizontal ? 'right' : 'top',\n      formatter: (params) => {\n        const { value, dataIndex, seriesIndex, seriesName } = params;\n        const numericValue = isHorizontal ? value[0] : value[1];\n        const isSelectedLegend = !legendState || legendState[seriesName];\n        const isAreaExpand = stack === StackControlsValue.Expand;\n        if (!formatter) {\n          return numericValue;\n        }\n        if (!stack && isSelectedLegend) {\n          return formatter(numericValue);\n        }\n        if (!onlyTotal) {\n          if (numericValue >= (\n          thresholdValues[dataIndex] || Number.MIN_SAFE_INTEGER)) {\n            return formatter(numericValue);\n          }\n          return '';\n        }\n        if (seriesIndex === showValueIndexes[dataIndex]) {\n          return formatter(isAreaExpand ? 1 : totalStackedValues[dataIndex]);\n        }\n        return '';\n      }\n    }\n  };\n}\nexport function transformFormulaAnnotation(layer, data, xAxisCol, xAxisType, colorScale, sliceId) {\n  const { name, color, opacity, width, style } = layer;\n  return {\n    name,\n    id: name,\n    itemStyle: {\n      color: color || colorScale(name, sliceId)\n    },\n    lineStyle: {\n      opacity: parseAnnotationOpacity(opacity),\n      type: style,\n      width\n    },\n    type: 'line',\n    smooth: true,\n    data: evalFormula(layer, data, xAxisCol, xAxisType),\n    symbolSize: 0\n  };\n}\nexport function transformIntervalAnnotation(layer, data, annotationData, colorScale, theme, sliceId) {\n  const series = [];\n  const annotations = extractRecordAnnotations(layer, annotationData);\n  annotations.forEach((annotation) => {\n    const { name, color, opacity, showLabel } = layer;\n    const { descriptions, intervalEnd, time, title } = annotation;\n    const label = formatAnnotationLabel(name, title, descriptions);\n    const intervalData = [\n    [\n    {\n      name: label,\n      xAxis: time\n    },\n    {\n      xAxis: intervalEnd\n    }]];\n\n\n    const intervalLabel = showLabel ?\n    {\n      show: true,\n      color: theme.colors.grayscale.dark2,\n      position: 'insideTop',\n      verticalAlign: 'top',\n      fontWeight: 'bold',\n      // @ts-ignore\n      emphasis: {\n        position: 'insideTop',\n        verticalAlign: 'top',\n        backgroundColor: theme.colors.grayscale.light5\n      }\n    } :\n    {\n      show: false,\n      color: theme.colors.grayscale.dark2,\n      // @ts-ignore\n      emphasis: {\n        fontWeight: 'bold',\n        show: true,\n        position: 'insideTop',\n        verticalAlign: 'top',\n        backgroundColor: theme.colors.grayscale.light5\n      }\n    };\n    series.push({\n      id: `Interval - ${label}`,\n      type: 'line',\n      animation: false,\n      markArea: {\n        silent: false,\n        itemStyle: {\n          color: color || colorScale(name, sliceId),\n          opacity: parseAnnotationOpacity(opacity || AnnotationOpacity.Medium),\n          emphasis: {\n            opacity: 0.8\n          }\n        },\n        label: intervalLabel,\n        data: intervalData\n      }\n    });\n  });\n  return series;\n}\nexport function transformEventAnnotation(layer, data, annotationData, colorScale, theme, sliceId) {\n  const series = [];\n  const annotations = extractRecordAnnotations(layer, annotationData);\n  annotations.forEach((annotation) => {\n    const { name, color, opacity, style, width, showLabel } = layer;\n    const { descriptions, time, title } = annotation;\n    const label = formatAnnotationLabel(name, title, descriptions);\n    const eventData = [\n    {\n      name: label,\n      xAxis: time\n    }];\n\n    const lineStyle = {\n      width,\n      type: style,\n      color: color || colorScale(name, sliceId),\n      opacity: parseAnnotationOpacity(opacity),\n      emphasis: {\n        width: width ? width + 1 : width,\n        opacity: 1\n      }\n    };\n    const eventLabel = showLabel ?\n    {\n      show: true,\n      color: theme.colors.grayscale.dark2,\n      position: 'insideEndTop',\n      fontWeight: 'bold',\n      formatter: (params) => params.name,\n      // @ts-ignore\n      emphasis: {\n        backgroundColor: theme.colors.grayscale.light5\n      }\n    } :\n    {\n      show: false,\n      color: theme.colors.grayscale.dark2,\n      position: 'insideEndTop',\n      // @ts-ignore\n      emphasis: {\n        formatter: (params) => params.name,\n        fontWeight: 'bold',\n        show: true,\n        backgroundColor: theme.colors.grayscale.light5\n      }\n    };\n    series.push({\n      id: `Event - ${label}`,\n      type: 'line',\n      animation: false,\n      markLine: {\n        silent: false,\n        symbol: 'none',\n        lineStyle,\n        label: eventLabel,\n        data: eventData\n      }\n    });\n  });\n  return series;\n}\nexport function transformTimeseriesAnnotation(layer, markerSize, data, annotationData, colorScale, sliceId) {\n  const series = [];\n  const { hideLine, name, opacity, showMarkers, style, width, color } = layer;\n  const result = annotationData[name];\n  if (isTimeseriesAnnotationResult(result)) {\n    result.forEach((annotation) => {\n      const { key, values } = annotation;\n      series.push({\n        type: 'line',\n        id: key,\n        name: key,\n        data: values.map((row) => [row.x, row.y]),\n        symbolSize: showMarkers ? markerSize : 0,\n        lineStyle: {\n          opacity: parseAnnotationOpacity(opacity),\n          type: style,\n          width: hideLine ? 0 : width,\n          color: color || colorScale(name, sliceId)\n        }\n      });\n    });\n  }\n  return series;\n}\nexport function getPadding(showLegend, legendOrientation, addYAxisTitleOffset, zoomable, margin, addXAxisTitleOffset, yAxisTitlePosition, yAxisTitleMargin, xAxisTitleMargin, isHorizontal) {\n  const yAxisOffset = addYAxisTitleOffset ?\n  TIMESERIES_CONSTANTS.yAxisLabelTopOffset :\n  0;\n  const xAxisOffset = addXAxisTitleOffset ? Number(xAxisTitleMargin) || 0 : 0;\n  return getChartPadding(showLegend, legendOrientation, margin, {\n    top: yAxisTitlePosition && yAxisTitlePosition === 'Top' ?\n    TIMESERIES_CONSTANTS.gridOffsetTop + (Number(yAxisTitleMargin) || 0) :\n    TIMESERIES_CONSTANTS.gridOffsetTop + yAxisOffset,\n    bottom: zoomable && !isHorizontal ?\n    TIMESERIES_CONSTANTS.gridOffsetBottomZoomable + xAxisOffset :\n    TIMESERIES_CONSTANTS.gridOffsetBottom + xAxisOffset,\n    left: yAxisTitlePosition === 'Left' ?\n    TIMESERIES_CONSTANTS.gridOffsetLeft + (\n    Number(yAxisTitleMargin) || 0) :\n    TIMESERIES_CONSTANTS.gridOffsetLeft,\n    right: showLegend && legendOrientation === LegendOrientation.Right ?\n    0 :\n    TIMESERIES_CONSTANTS.gridOffsetRight\n  }, isHorizontal);\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getBaselineSeriesForStream, \"getBaselineSeriesForStream\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/transformers.ts\");reactHotLoader.register(transformSeries, \"transformSeries\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/transformers.ts\");reactHotLoader.register(transformFormulaAnnotation, \"transformFormulaAnnotation\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/transformers.ts\");reactHotLoader.register(transformIntervalAnnotation, \"transformIntervalAnnotation\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/transformers.ts\");reactHotLoader.register(transformEventAnnotation, \"transformEventAnnotation\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/transformers.ts\");reactHotLoader.register(transformTimeseriesAnnotation, \"transformTimeseriesAnnotation\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/transformers.ts\");reactHotLoader.register(getPadding, \"getPadding\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/transformers.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["AnnotationOpacity","isTimeseriesAnnotationResult","extractForecastSeriesContext","EchartsTimeseriesSeriesType","ForecastSeriesEnum","LegendOrientation","evalFormula","extractRecordAnnotations","formatAnnotationLabel","parseAnnotationOpacity","getChartPadding","getTimeCompareStackId","OpacityEnum","StackControlsValue","TIMESERIES_CONSTANTS","getBaselineSeriesForStream","series","seriesType","seriesLength","length","baselineSeriesDelta","Array","fill","getVal","value","i","seriesSum","weightedSeriesSum","j","delta","deltaPrev","k","baselineSeries","reduce","acc","curr","push","data","name","stack","stackStrategy","type","lineStyle","opacity","tooltip","show","silent","showSymbol","areaStyle","step","Start","Middle","End","includes","undefined","smooth","Smooth","transformSeries","colorScale","colorScaleKey","opts","area","connectNulls","filterState","seriesContexts","markerEnabled","markerSize","areaOpacity","stackIdSuffix","yAxisIndex","showValue","onlyTotal","formatter","legendState","totalStackedValues","showValueIndexes","thresholdValues","richTooltip","sliceId","isHorizontal","queryIndex","timeCompare","contexts","hasForecast","ForecastTrend","ForecastLower","ForecastUpper","forecastSeries","isConfidenceBand","isFiltered","selectedValues","SemiTransparent","NonTransparent","isObservation","Observation","isTrend","stackId","plotType","itemStyle","color","emphasis","Stream","Transparent","triggerLineEvent","width","symbolSize","label","position","params","dataIndex","seriesIndex","seriesName","numericValue","isSelectedLegend","isAreaExpand","Expand","Number","MIN_SAFE_INTEGER","transformFormulaAnnotation","layer","xAxisCol","xAxisType","style","id","transformIntervalAnnotation","annotationData","theme","annotations","forEach","annotation","showLabel","descriptions","intervalEnd","time","title","intervalData","xAxis","intervalLabel","colors","grayscale","dark2","verticalAlign","fontWeight","backgroundColor","light5","animation","markArea","Medium","transformEventAnnotation","eventData","eventLabel","markLine","symbol","transformTimeseriesAnnotation","hideLine","showMarkers","result","key","values","map","row","x","y","getPadding","showLegend","legendOrientation","addYAxisTitleOffset","zoomable","margin","addXAxisTitleOffset","yAxisTitlePosition","yAxisTitleMargin","xAxisTitleMargin","yAxisOffset","yAxisLabelTopOffset","xAxisOffset","top","gridOffsetTop","bottom","gridOffsetBottomZoomable","gridOffsetBottom","left","gridOffsetLeft","right","Right","gridOffsetRight","reactHotLoader","reactHotLoaderGlobal","default","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/transformers.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {\n  AnnotationData,\n  AnnotationOpacity,\n  AxisType,\n  CategoricalColorScale,\n  EventAnnotationLayer,\n  FilterState,\n  FormulaAnnotationLayer,\n  IntervalAnnotationLayer,\n  isTimeseriesAnnotationResult,\n  LegendState,\n  SupersetTheme,\n  TimeseriesAnnotationLayer,\n  TimeseriesDataRecord,\n  ValueFormatter,\n} from '@superset-ui/core';\nimport { SeriesOption } from 'echarts';\nimport {\n  CallbackDataParams,\n  DefaultStatesMixin,\n  ItemStyleOption,\n  LineStyleOption,\n  OptionName,\n  SeriesLabelOption,\n  SeriesLineLabelOption,\n  ZRLineType,\n} from 'echarts/types/src/util/types';\nimport {\n  MarkArea1DDataItemOption,\n  MarkArea2DDataItemOption,\n} from 'echarts/types/src/component/marker/MarkAreaModel';\nimport { MarkLine1DDataItemOption } from 'echarts/types/src/component/marker/MarkLineModel';\nimport { extractForecastSeriesContext } from '../utils/forecast';\nimport {\n  EchartsTimeseriesSeriesType,\n  ForecastSeriesEnum,\n  LegendOrientation,\n  StackType,\n} from '../types';\n\nimport {\n  evalFormula,\n  extractRecordAnnotations,\n  formatAnnotationLabel,\n  parseAnnotationOpacity,\n} from '../utils/annotation';\nimport { getChartPadding, getTimeCompareStackId } from '../utils/series';\nimport {\n  OpacityEnum,\n  StackControlsValue,\n  TIMESERIES_CONSTANTS,\n} from '../constants';\n\n// based on weighted wiggle algorithm\n// source: https://ieeexplore.ieee.org/document/4658136\nexport const getBaselineSeriesForStream = (\n  series: [string | number, number][][],\n  seriesType: EchartsTimeseriesSeriesType,\n) => {\n  const seriesLength = series[0].length;\n  const baselineSeriesDelta = new Array(seriesLength).fill([0, 0]);\n  const getVal = (value: number | null) => value ?? 0;\n  for (let i = 0; i < seriesLength; i += 1) {\n    let seriesSum = 0;\n    let weightedSeriesSum = 0;\n    for (let j = 0; j < series.length; j += 1) {\n      const delta =\n        i > 0\n          ? getVal(series[j][i][1]) - getVal(series[j][i - 1][1])\n          : getVal(series[j][i][1]);\n      let deltaPrev = 0;\n      for (let k = 1; k < j - 1; k += 1) {\n        deltaPrev +=\n          i > 0\n            ? getVal(series[k][i][1]) - getVal(series[k][i - 1][1])\n            : getVal(series[k][i][1]);\n      }\n      weightedSeriesSum += (0.5 * delta + deltaPrev) * getVal(series[j][i][1]);\n      seriesSum += getVal(series[j][i][1]);\n    }\n    baselineSeriesDelta[i] = [series[0][i][0], -weightedSeriesSum / seriesSum];\n  }\n  const baselineSeries = baselineSeriesDelta.reduce((acc, curr, i) => {\n    if (i === 0) {\n      acc.push(curr);\n    } else {\n      acc.push([curr[0], acc[i - 1][1] + curr[1]]);\n    }\n    return acc;\n  }, []);\n  return {\n    data: baselineSeries,\n    name: 'baseline',\n    stack: 'obs',\n    stackStrategy: 'all' as const,\n    type: 'line' as const,\n    lineStyle: {\n      opacity: 0,\n    },\n    tooltip: {\n      show: false,\n    },\n    silent: true,\n    showSymbol: false,\n    areaStyle: {\n      opacity: 0,\n    },\n    step: [\n      EchartsTimeseriesSeriesType.Start,\n      EchartsTimeseriesSeriesType.Middle,\n      EchartsTimeseriesSeriesType.End,\n    ].includes(seriesType)\n      ? (seriesType as\n          | EchartsTimeseriesSeriesType.Start\n          | EchartsTimeseriesSeriesType.Middle\n          | EchartsTimeseriesSeriesType.End)\n      : undefined,\n    smooth: seriesType === EchartsTimeseriesSeriesType.Smooth,\n  };\n};\n\nexport function transformSeries(\n  series: SeriesOption,\n  colorScale: CategoricalColorScale,\n  colorScaleKey: string,\n  opts: {\n    area?: boolean;\n    connectNulls?: boolean;\n    filterState?: FilterState;\n    seriesContexts?: { [key: string]: ForecastSeriesEnum[] };\n    markerEnabled?: boolean;\n    markerSize?: number;\n    areaOpacity?: number;\n    seriesType?: EchartsTimeseriesSeriesType;\n    stack?: StackType;\n    stackIdSuffix?: string;\n    yAxisIndex?: number;\n    showValue?: boolean;\n    onlyTotal?: boolean;\n    legendState?: LegendState;\n    formatter?: ValueFormatter;\n    totalStackedValues?: number[];\n    showValueIndexes?: number[];\n    thresholdValues?: number[];\n    richTooltip?: boolean;\n    seriesKey?: OptionName;\n    sliceId?: number;\n    isHorizontal?: boolean;\n    lineStyle?: LineStyleOption;\n    queryIndex?: number;\n    timeCompare?: string[];\n  },\n): SeriesOption | undefined {\n  const { name } = series;\n  const {\n    area,\n    connectNulls,\n    filterState,\n    seriesContexts = {},\n    markerEnabled,\n    markerSize,\n    areaOpacity = 1,\n    seriesType,\n    stack,\n    stackIdSuffix,\n    yAxisIndex = 0,\n    showValue,\n    onlyTotal,\n    formatter,\n    legendState,\n    totalStackedValues = [],\n    showValueIndexes = [],\n    thresholdValues = [],\n    richTooltip,\n    sliceId,\n    isHorizontal = false,\n    queryIndex = 0,\n    timeCompare = [],\n  } = opts;\n  const contexts = seriesContexts[name || ''] || [];\n  const hasForecast =\n    contexts.includes(ForecastSeriesEnum.ForecastTrend) ||\n    contexts.includes(ForecastSeriesEnum.ForecastLower) ||\n    contexts.includes(ForecastSeriesEnum.ForecastUpper);\n\n  const forecastSeries = extractForecastSeriesContext(name || '');\n  const isConfidenceBand =\n    forecastSeries.type === ForecastSeriesEnum.ForecastLower ||\n    forecastSeries.type === ForecastSeriesEnum.ForecastUpper;\n  const isFiltered =\n    filterState?.selectedValues && !filterState?.selectedValues.includes(name);\n  const opacity = isFiltered\n    ? OpacityEnum.SemiTransparent\n    : OpacityEnum.NonTransparent;\n\n  // don't create a series if doing a stack or area chart and the result\n  // is a confidence band\n  if ((stack || area) && isConfidenceBand) return undefined;\n\n  const isObservation = forecastSeries.type === ForecastSeriesEnum.Observation;\n  const isTrend = forecastSeries.type === ForecastSeriesEnum.ForecastTrend;\n  let stackId;\n  if (isConfidenceBand) {\n    stackId = forecastSeries.name;\n  } else if (stack && isObservation) {\n    // the suffix of the observation series is '' (falsy), which disables\n    // stacking. Therefore we need to set something that is truthy.\n    stackId = getTimeCompareStackId('obs', timeCompare, name);\n  } else if (stack && isTrend) {\n    stackId = getTimeCompareStackId(forecastSeries.type, timeCompare, name);\n  }\n  if (stackId && stackIdSuffix) {\n    stackId += stackIdSuffix;\n  }\n  let plotType;\n  if (\n    !isConfidenceBand &&\n    (seriesType === 'scatter' || (hasForecast && isObservation))\n  ) {\n    plotType = 'scatter';\n  } else if (isConfidenceBand) {\n    plotType = 'line';\n  } else {\n    plotType = seriesType === 'bar' ? 'bar' : 'line';\n  }\n  // forcing the colorScale to return a different color for same metrics across different queries\n  const itemStyle = {\n    color: colorScale(colorScaleKey, sliceId),\n    opacity,\n  };\n  let emphasis = {};\n  let showSymbol = false;\n  if (!isConfidenceBand) {\n    if (plotType === 'scatter') {\n      showSymbol = true;\n    } else if (hasForecast && isObservation) {\n      showSymbol = true;\n    } else if (plotType === 'line' && showValue) {\n      showSymbol = true;\n    } else if (plotType === 'line' && !richTooltip && !markerEnabled) {\n      // this is hack to make timeseries line chart clickable when tooltip trigger is 'item'\n      // so that the chart can emit cross-filtering\n      showSymbol = true;\n      itemStyle.opacity = 0;\n      emphasis = {\n        itemStyle: {\n          opacity: 1,\n        },\n      };\n    } else if (markerEnabled) {\n      showSymbol = true;\n    }\n  }\n  const lineStyle =\n    isConfidenceBand || (stack === StackControlsValue.Stream && area)\n      ? { ...opts.lineStyle, opacity: OpacityEnum.Transparent }\n      : { ...opts.lineStyle, opacity };\n  return {\n    ...series,\n    connectNulls,\n    queryIndex,\n    yAxisIndex,\n    name: forecastSeries.name,\n    itemStyle,\n    // @ts-ignore\n    type: plotType,\n    smooth: seriesType === 'smooth',\n    triggerLineEvent: true,\n    // @ts-ignore\n    step: ['start', 'middle', 'end'].includes(seriesType as string)\n      ? seriesType\n      : undefined,\n    stack: stackId,\n    stackStrategy:\n      isConfidenceBand || stack === StackControlsValue.Stream\n        ? 'all'\n        : 'samesign',\n    lineStyle,\n    areaStyle:\n      area || forecastSeries.type === ForecastSeriesEnum.ForecastUpper\n        ? {\n            opacity: opacity * areaOpacity,\n          }\n        : undefined,\n    emphasis: {\n      // bold on hover as required since 5.3.0 to retain backwards feature parity:\n      // https://apache.github.io/echarts-handbook/en/basics/release-note/5-3-0/#removing-the-default-bolding-emphasis-effect-in-the-line-chart\n      // TODO: should consider only adding emphasis to currently hovered series\n      lineStyle: {\n        width: 'bolder',\n      },\n      ...emphasis,\n    },\n    showSymbol,\n    symbolSize: markerSize,\n    label: {\n      show: !!showValue,\n      position: isHorizontal ? 'right' : 'top',\n      formatter: (params: any) => {\n        const { value, dataIndex, seriesIndex, seriesName } = params;\n        const numericValue = isHorizontal ? value[0] : value[1];\n        const isSelectedLegend = !legendState || legendState[seriesName];\n        const isAreaExpand = stack === StackControlsValue.Expand;\n        if (!formatter) {\n          return numericValue;\n        }\n        if (!stack && isSelectedLegend) {\n          return formatter(numericValue);\n        }\n        if (!onlyTotal) {\n          if (\n            numericValue >=\n            (thresholdValues[dataIndex] || Number.MIN_SAFE_INTEGER)\n          ) {\n            return formatter(numericValue);\n          }\n          return '';\n        }\n        if (seriesIndex === showValueIndexes[dataIndex]) {\n          return formatter(isAreaExpand ? 1 : totalStackedValues[dataIndex]);\n        }\n        return '';\n      },\n    },\n  };\n}\n\nexport function transformFormulaAnnotation(\n  layer: FormulaAnnotationLayer,\n  data: TimeseriesDataRecord[],\n  xAxisCol: string,\n  xAxisType: AxisType,\n  colorScale: CategoricalColorScale,\n  sliceId?: number,\n): SeriesOption {\n  const { name, color, opacity, width, style } = layer;\n  return {\n    name,\n    id: name,\n    itemStyle: {\n      color: color || colorScale(name, sliceId),\n    },\n    lineStyle: {\n      opacity: parseAnnotationOpacity(opacity),\n      type: style as ZRLineType,\n      width,\n    },\n    type: 'line',\n    smooth: true,\n    data: evalFormula(layer, data, xAxisCol, xAxisType),\n    symbolSize: 0,\n  };\n}\n\nexport function transformIntervalAnnotation(\n  layer: IntervalAnnotationLayer,\n  data: TimeseriesDataRecord[],\n  annotationData: AnnotationData,\n  colorScale: CategoricalColorScale,\n  theme: SupersetTheme,\n  sliceId?: number,\n): SeriesOption[] {\n  const series: SeriesOption[] = [];\n  const annotations = extractRecordAnnotations(layer, annotationData);\n  annotations.forEach(annotation => {\n    const { name, color, opacity, showLabel } = layer;\n    const { descriptions, intervalEnd, time, title } = annotation;\n    const label = formatAnnotationLabel(name, title, descriptions);\n    const intervalData: (\n      | MarkArea1DDataItemOption\n      | MarkArea2DDataItemOption\n    )[] = [\n      [\n        {\n          name: label,\n          xAxis: time,\n        },\n        {\n          xAxis: intervalEnd,\n        },\n      ],\n    ];\n    const intervalLabel: SeriesLabelOption = showLabel\n      ? {\n          show: true,\n          color: theme.colors.grayscale.dark2,\n          position: 'insideTop',\n          verticalAlign: 'top',\n          fontWeight: 'bold',\n          // @ts-ignore\n          emphasis: {\n            position: 'insideTop',\n            verticalAlign: 'top',\n            backgroundColor: theme.colors.grayscale.light5,\n          },\n        }\n      : {\n          show: false,\n          color: theme.colors.grayscale.dark2,\n          // @ts-ignore\n          emphasis: {\n            fontWeight: 'bold',\n            show: true,\n            position: 'insideTop',\n            verticalAlign: 'top',\n            backgroundColor: theme.colors.grayscale.light5,\n          },\n        };\n    series.push({\n      id: `Interval - ${label}`,\n      type: 'line',\n      animation: false,\n      markArea: {\n        silent: false,\n        itemStyle: {\n          color: color || colorScale(name, sliceId),\n          opacity: parseAnnotationOpacity(opacity || AnnotationOpacity.Medium),\n          emphasis: {\n            opacity: 0.8,\n          },\n        } as ItemStyleOption,\n        label: intervalLabel,\n        data: intervalData,\n      },\n    });\n  });\n  return series;\n}\n\nexport function transformEventAnnotation(\n  layer: EventAnnotationLayer,\n  data: TimeseriesDataRecord[],\n  annotationData: AnnotationData,\n  colorScale: CategoricalColorScale,\n  theme: SupersetTheme,\n  sliceId?: number,\n): SeriesOption[] {\n  const series: SeriesOption[] = [];\n  const annotations = extractRecordAnnotations(layer, annotationData);\n  annotations.forEach(annotation => {\n    const { name, color, opacity, style, width, showLabel } = layer;\n    const { descriptions, time, title } = annotation;\n    const label = formatAnnotationLabel(name, title, descriptions);\n    const eventData: MarkLine1DDataItemOption[] = [\n      {\n        name: label,\n        xAxis: time,\n      },\n    ];\n\n    const lineStyle: LineStyleOption & DefaultStatesMixin['emphasis'] = {\n      width,\n      type: style as ZRLineType,\n      color: color || colorScale(name, sliceId),\n      opacity: parseAnnotationOpacity(opacity),\n      emphasis: {\n        width: width ? width + 1 : width,\n        opacity: 1,\n      },\n    };\n\n    const eventLabel: SeriesLineLabelOption = showLabel\n      ? {\n          show: true,\n          color: theme.colors.grayscale.dark2,\n          position: 'insideEndTop',\n          fontWeight: 'bold',\n          formatter: (params: CallbackDataParams) => params.name,\n          // @ts-ignore\n          emphasis: {\n            backgroundColor: theme.colors.grayscale.light5,\n          },\n        }\n      : {\n          show: false,\n          color: theme.colors.grayscale.dark2,\n          position: 'insideEndTop',\n          // @ts-ignore\n          emphasis: {\n            formatter: (params: CallbackDataParams) => params.name,\n            fontWeight: 'bold',\n            show: true,\n            backgroundColor: theme.colors.grayscale.light5,\n          },\n        };\n\n    series.push({\n      id: `Event - ${label}`,\n      type: 'line',\n      animation: false,\n      markLine: {\n        silent: false,\n        symbol: 'none',\n        lineStyle,\n        label: eventLabel,\n        data: eventData,\n      },\n    });\n  });\n  return series;\n}\n\nexport function transformTimeseriesAnnotation(\n  layer: TimeseriesAnnotationLayer,\n  markerSize: number,\n  data: TimeseriesDataRecord[],\n  annotationData: AnnotationData,\n  colorScale: CategoricalColorScale,\n  sliceId?: number,\n): SeriesOption[] {\n  const series: SeriesOption[] = [];\n  const { hideLine, name, opacity, showMarkers, style, width, color } = layer;\n  const result = annotationData[name];\n  if (isTimeseriesAnnotationResult(result)) {\n    result.forEach(annotation => {\n      const { key, values } = annotation;\n      series.push({\n        type: 'line',\n        id: key,\n        name: key,\n        data: values.map(row => [row.x, row.y] as [OptionName, number]),\n        symbolSize: showMarkers ? markerSize : 0,\n        lineStyle: {\n          opacity: parseAnnotationOpacity(opacity),\n          type: style as ZRLineType,\n          width: hideLine ? 0 : width,\n          color: color || colorScale(name, sliceId),\n        },\n      });\n    });\n  }\n  return series;\n}\n\nexport function getPadding(\n  showLegend: boolean,\n  legendOrientation: LegendOrientation,\n  addYAxisTitleOffset: boolean,\n  zoomable: boolean,\n  margin?: string | number | null,\n  addXAxisTitleOffset?: boolean,\n  yAxisTitlePosition?: string,\n  yAxisTitleMargin?: number,\n  xAxisTitleMargin?: number,\n  isHorizontal?: boolean,\n): {\n  bottom: number;\n  left: number;\n  right: number;\n  top: number;\n} {\n  const yAxisOffset = addYAxisTitleOffset\n    ? TIMESERIES_CONSTANTS.yAxisLabelTopOffset\n    : 0;\n  const xAxisOffset = addXAxisTitleOffset ? Number(xAxisTitleMargin) || 0 : 0;\n\n  return getChartPadding(\n    showLegend,\n    legendOrientation,\n    margin,\n    {\n      top:\n        yAxisTitlePosition && yAxisTitlePosition === 'Top'\n          ? TIMESERIES_CONSTANTS.gridOffsetTop + (Number(yAxisTitleMargin) || 0)\n          : TIMESERIES_CONSTANTS.gridOffsetTop + yAxisOffset,\n      bottom:\n        zoomable && !isHorizontal\n          ? TIMESERIES_CONSTANTS.gridOffsetBottomZoomable + xAxisOffset\n          : TIMESERIES_CONSTANTS.gridOffsetBottom + xAxisOffset,\n      left:\n        yAxisTitlePosition === 'Left'\n          ? TIMESERIES_CONSTANTS.gridOffsetLeft +\n            (Number(yAxisTitleMargin) || 0)\n          : TIMESERIES_CONSTANTS.gridOffsetLeft,\n      right:\n        showLegend && legendOrientation === LegendOrientation.Right\n          ? 0\n          : TIMESERIES_CONSTANTS.gridOffsetRight,\n    },\n    isHorizontal,\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}