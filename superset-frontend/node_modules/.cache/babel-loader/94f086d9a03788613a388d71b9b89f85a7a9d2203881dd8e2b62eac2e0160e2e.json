{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, t, validateNonEmpty } from '@superset-ui/core';\nimport { getStandardizedControls } from '@superset-ui/chart-controls';\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['groupby'],\n    ['columns'],\n    ['metric'],\n    ['adhoc_filters'],\n    ['row_limit'],\n    ['sort_by_metric']]\n\n  },\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [['y_axis_format', null], ['color_scheme']]\n  }],\n\n  controlOverrides: {\n    y_axis_format: {\n      label: t('Number format'),\n      description: t('Choose a number format')\n    },\n    groupby: {\n      label: t('Source'),\n      multi: false,\n      validators: [validateNonEmpty],\n      description: t('Choose a source')\n    },\n    columns: {\n      label: t('Target'),\n      multi: false,\n      validators: [validateNonEmpty],\n      description: t('Choose a target')\n    }\n  },\n  formDataOverrides: (formData) => {\n    const groupby = getStandardizedControls().\n    popAllColumns().\n    filter((col) => !ensureIsArray(formData.columns).includes(col));\n    return {\n      ...formData,\n      groupby,\n      metric: getStandardizedControls().shiftMetric()\n    };\n  }\n};const _default =\nconfig;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(config, \"config\", \"/app/superset-frontend/plugins/legacy-plugin-chart-chord/src/controlPanel.ts\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/plugins/legacy-plugin-chart-chord/src/controlPanel.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["ensureIsArray","t","validateNonEmpty","getStandardizedControls","config","controlPanelSections","label","expanded","controlSetRows","controlOverrides","y_axis_format","description","groupby","multi","validators","columns","formDataOverrides","formData","popAllColumns","filter","col","includes","metric","shiftMetric","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/legacy-plugin-chart-chord/src/controlPanel.ts"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, t, validateNonEmpty } from '@superset-ui/core';\nimport {\n  ControlPanelConfig,\n  getStandardizedControls,\n} from '@superset-ui/chart-controls';\n\nconst config: ControlPanelConfig = {\n  controlPanelSections: [\n    {\n      label: t('Query'),\n      expanded: true,\n      controlSetRows: [\n        ['groupby'],\n        ['columns'],\n        ['metric'],\n        ['adhoc_filters'],\n        ['row_limit'],\n        ['sort_by_metric'],\n      ],\n    },\n    {\n      label: t('Chart Options'),\n      expanded: true,\n      controlSetRows: [['y_axis_format', null], ['color_scheme']],\n    },\n  ],\n  controlOverrides: {\n    y_axis_format: {\n      label: t('Number format'),\n      description: t('Choose a number format'),\n    },\n    groupby: {\n      label: t('Source'),\n      multi: false,\n      validators: [validateNonEmpty],\n      description: t('Choose a source'),\n    },\n    columns: {\n      label: t('Target'),\n      multi: false,\n      validators: [validateNonEmpty],\n      description: t('Choose a target'),\n    },\n  },\n  formDataOverrides: formData => {\n    const groupby = getStandardizedControls()\n      .popAllColumns()\n      .filter(col => !ensureIsArray(formData.columns).includes(col));\n    return {\n      ...formData,\n      groupby,\n      metric: getStandardizedControls().shiftMetric(),\n    };\n  },\n};\n\nexport default config;\n"],"mappings":"wSAAA;;;;;;;;;;;;;;;;;;AAkBA,SAASA,aAAa,EAAEC,CAAC,EAAEC,gBAAgB,QAAQ,mBAAmB;AACtE,SAEEC,uBAAuB,QAClB,6BAA6B;AAEpC,MAAMC,MAAM,GAAuB;EACjCC,oBAAoB,EAAE;EACpB;IACEC,KAAK,EAAEL,CAAC,CAAC,OAAO,CAAC;IACjBM,QAAQ,EAAE,IAAI;IACdC,cAAc,EAAE;IACd,CAAC,SAAS,CAAC;IACX,CAAC,SAAS,CAAC;IACX,CAAC,QAAQ,CAAC;IACV,CAAC,eAAe,CAAC;IACjB,CAAC,WAAW,CAAC;IACb,CAAC,gBAAgB,CAAC;;GAErB;EACD;IACEF,KAAK,EAAEL,CAAC,CAAC,eAAe,CAAC;IACzBM,QAAQ,EAAE,IAAI;IACdC,cAAc,EAAE,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC;GAC3D,CACF;;EACDC,gBAAgB,EAAE;IAChBC,aAAa,EAAE;MACbJ,KAAK,EAAEL,CAAC,CAAC,eAAe,CAAC;MACzBU,WAAW,EAAEV,CAAC,CAAC,wBAAwB;KACxC;IACDW,OAAO,EAAE;MACPN,KAAK,EAAEL,CAAC,CAAC,QAAQ,CAAC;MAClBY,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE,CAACZ,gBAAgB,CAAC;MAC9BS,WAAW,EAAEV,CAAC,CAAC,iBAAiB;KACjC;IACDc,OAAO,EAAE;MACPT,KAAK,EAAEL,CAAC,CAAC,QAAQ,CAAC;MAClBY,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE,CAACZ,gBAAgB,CAAC;MAC9BS,WAAW,EAAEV,CAAC,CAAC,iBAAiB;;GAEnC;EACDe,iBAAiB,EAAEA,CAAAC,QAAQ,KAAG;IAC5B,MAAML,OAAO,GAAGT,uBAAuB,EAAE;IACtCe,aAAa,EAAE;IACfC,MAAM,CAAC,CAAAC,GAAG,KAAI,CAACpB,aAAa,CAACiB,QAAQ,CAACF,OAAO,CAAC,CAACM,QAAQ,CAACD,GAAG,CAAC,CAAC;IAChE,OAAO;MACL,GAAGH,QAAQ;MACXL,OAAO;MACPU,MAAM,EAAEnB,uBAAuB,EAAE,CAACoB,WAAW;KAC9C;EACH;CACD,CAAC,MAAAC,QAAA;AAEapB,MAAM,CAArB,eAAAoB,QAAA,CAAsB,mBAAAC,cAAA,UAAAC,oBAAA,mBAAAA,oBAAA,CAAAC,OAAA,GAAAC,SAAA,MAAAH,cAAA,WAAAA,cAAA,CAAAI,QAAA,CAlDhBzB,MAAM,4FAAAqB,cAAA,CAAAI,QAAA,CAAAL,QAAA,qHAAAM,WAAA,UAAAJ,oBAAA,mBAAAA,oBAAA,CAAAI,WAAA,GAAAF,SAAA,CAAAE,WAAA,IAAAA,WAAA,CAAAC,MAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}