{"ast":null,"code":"import _pick from \"lodash/pick\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\n\nimport { EditableTabs } from 'src/components/Tabs';\nimport { connect } from 'react-redux';\nimport URI from 'urijs';\nimport { FeatureFlag, styled, t, isFeatureEnabled } from '@superset-ui/core';\nimport { Logger } from 'src/logger/LogUtils';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { detectOS } from 'src/utils/common';\nimport * as Actions from 'src/SqlLab/actions/sqlLab';\nimport { EmptyStateBig } from 'src/components/EmptyState';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { locationContext } from 'src/pages/SqlLab/LocationContext';\nimport SqlEditor from '../SqlEditor';\nimport SqlEditorTabHeader from '../SqlEditorTabHeader';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst DEFAULT_PROPS = {\n  queryEditors: [],\n  offline: false,\n  saveQueryWarning: null,\n  scheduleQueryWarning: null\n};\nconst StyledEditableTabs = styled(EditableTabs)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledTab = styled.span`\n  line-height: 24px;\n`;\nconst TabTitle = styled.span`\n  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  text-transform: none;\n`;\n// Get the user's OS\nconst userOS = detectOS();\nconst SQL_LAB_URL = '/sqllab';\nclass TabbedSqlEditors extends PureComponent {\n  constructor(props) {\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    onTabClicked = () => {var _this$props$queryEdit;\n      Logger.markTimeOrigin();\n      const noQueryEditors = ((_this$props$queryEdit = this.props.queryEditors) == null ? void 0 : _this$props$queryEdit.length) === 0;\n      if (noQueryEditors) {\n        this.newQueryEditor();\n      }\n    };this.removeQueryEditor = this.removeQueryEditor.bind(this);this.handleSelect = this.handleSelect.bind(this);this.handleEdit = this.handleEdit.bind(this);}componentDidMount() {// merge post form data with GET search params\n    // Hack: this data should be coming from getInitialState\n    // but for some reason this data isn't being passed properly through\n    // the reducer.\n    const bootstrapData = getBootstrapData();const queryParameters = URI(window.location).search(true);const { id, name, sql, savedQueryId, datasourceKey, queryId, dbid, dbname, catalog, schema, autorun, new: isNewQuery, ...urlParams } = { ...this.context.requestedQuery, ...bootstrapData.requested_query, ...queryParameters }; // Popping a new tab based on the querystring\n    if (id || sql || savedQueryId || datasourceKey || queryId) {if (id) {this.props.actions.popStoredQuery(id);} else if (savedQueryId) {this.props.actions.popSavedQuery(savedQueryId);} else if (queryId) {this.props.actions.popQuery(queryId);} else if (datasourceKey) {this.props.actions.popDatasourceQuery(datasourceKey, sql);} else if (sql) {let databaseId = dbid;if (databaseId) {databaseId = parseInt(databaseId, 10);} else {const { databases } = this.props;const databaseName = dbname;if (databaseName) {Object.keys(databases).forEach((db) => {if (databases[db].database_name === databaseName) {databaseId = databases[db].id;}});}}const newQueryEditor = { name, dbId: databaseId, catalog, schema, autorun, sql };this.props.actions.addQueryEditor(newQueryEditor);}this.popNewTab(_pick(urlParams, Object.keys(queryParameters)));} else if (isNewQuery || this.props.queryEditors.length === 0) {this.newQueryEditor();if (isNewQuery) {window.history.replaceState({}, document.title, SQL_LAB_URL);}} else {const qe = this.activeQueryEditor();const latestQuery = this.props.queries[(qe == null ? void 0 : qe.latestQueryId) || ''];if (isFeatureEnabled(FeatureFlag.SqllabBackendPersistence) && latestQuery && latestQuery.resultsKey) {// when results are not stored in localStorage they need to be\n        // fetched from the results backend (if configured)\n        this.props.actions.fetchQueryResults(latestQuery, this.props.displayLimit);}}}popNewTab(urlParams) {// Clean the url in browser history\n    const updatedUrl = `${URI(SQL_LAB_URL).query(urlParams)}`;window.history.replaceState({}, document.title, updatedUrl);}activeQueryEditor() {if (this.props.tabHistory.length === 0) {return this.props.queryEditors[0];}const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];return this.props.queryEditors.find((qe) => qe.id === qeid) || null;}newQueryEditor() {this.props.actions.addNewQueryEditor();}handleSelect(key) {const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];if (key !== qeid) {const queryEditor = this.props.queryEditors.find((qe) => qe.id === key);if (!queryEditor) {return;}this.props.actions.setActiveQueryEditor(queryEditor);}}handleEdit(key, action) {if (action === 'remove') {const qe = this.props.queryEditors.find((qe) => qe.id === key);if (qe) {this.removeQueryEditor(qe);}}if (action === 'add') {Logger.markTimeOrigin();this.newQueryEditor();}}removeQueryEditor(qe) {this.props.actions.removeQueryEditor(qe);}render() {var _this$props$queryEdit2, _this$props$queryEdit3;const noQueryEditors = ((_this$props$queryEdit2 = this.props.queryEditors) == null ? void 0 : _this$props$queryEdit2.length) === 0;const editors = (_this$props$queryEdit3 = this.props.queryEditors) == null ? void 0 : _this$props$queryEdit3.map((qe) => _jsx(EditableTabs.TabPane, { tab: _jsx(SqlEditorTabHeader, { queryEditor: qe }) // for tests - key prop isn't handled by enzyme well bcs it's a react keyword\n        , \"data-key\": qe.id, children: _jsx(SqlEditor, { queryEditor: qe, defaultQueryLimit: this.props.defaultQueryLimit, maxRow: this.props.maxRow, displayLimit: this.props.displayLimit, saveQueryWarning: this.props.saveQueryWarning, scheduleQueryWarning: this.props.scheduleQueryWarning }) }, qe.id));const emptyTab = _jsxs(StyledTab, { children: [_jsx(TabTitle, { children: t('Add a new tab') }),\n        _jsx(Tooltip, { id: \"add-tab\", placement: \"bottom\", title: userOS === 'Windows' ?\n          t('New tab (Ctrl + q)') :\n          t('New tab (Ctrl + t)'), children:\n          _jsx(\"i\", { \"data-test\": \"add-tab-icon\", className: \"fa fa-plus-circle\" }) }\n        )] }\n    );\n    const emptyTabState = _jsx(EditableTabs.TabPane, { \"data-key\": 0, tab: emptyTab, closable: false, children:\n      _jsx(EmptyStateBig, { image: \"empty_sql_chart.svg\", description: t('Add a new tab to create SQL Query') }) }, 0\n    );\n    return _jsxs(StyledEditableTabs, { activeKey: this.props.tabHistory[this.props.tabHistory.length - 1], id: \"a11y-query-editor-tabs\", className: \"SqlEditorTabs\", \"data-test\": \"sql-editor-tabs\", onChange: this.handleSelect, fullWidth: false, hideAdd: this.props.offline, onTabClick: this.onTabClicked, onEdit: this.handleEdit, type: noQueryEditors ? 'card' : 'editable-card', addIcon: _jsx(Tooltip, { id: \"add-tab\", placement: \"bottom\", title: userOS === 'Windows' ?\n        t('New tab (Ctrl + q)') :\n        t('New tab (Ctrl + t)'), children:\n        _jsx(\"i\", { \"data-test\": \"add-tab-icon\", className: \"fa fa-plus-circle\" }) }\n      ), children: [\n      editors,\n      noQueryEditors && emptyTabState] }\n    );\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}TabbedSqlEditors.contextType = locationContext;\nexport function mapStateToProps({ sqlLab, common }) {var _sqlLab$queryEditors, _sqlLab$offline, _common$conf$SQLLAB_S, _common$conf$SQLLAB_S2;\n  return {\n    databases: sqlLab.databases,\n    queryEditors: (_sqlLab$queryEditors = sqlLab.queryEditors) != null ? _sqlLab$queryEditors : DEFAULT_PROPS.queryEditors,\n    queries: sqlLab.queries,\n    tabHistory: sqlLab.tabHistory,\n    defaultDbId: common.conf.SQLLAB_DEFAULT_DBID,\n    displayLimit: common.conf.DISPLAY_MAX_ROW,\n    offline: (_sqlLab$offline = sqlLab.offline) != null ? _sqlLab$offline : DEFAULT_PROPS.offline,\n    defaultQueryLimit: common.conf.DEFAULT_SQLLAB_LIMIT,\n    maxRow: common.conf.SQL_MAX_ROW,\n    saveQueryWarning: (_common$conf$SQLLAB_S = common.conf.SQLLAB_SAVE_WARNING_MESSAGE) != null ? _common$conf$SQLLAB_S : DEFAULT_PROPS.saveQueryWarning,\n    scheduleQueryWarning: (_common$conf$SQLLAB_S2 = common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE) != null ? _common$conf$SQLLAB_S2 :\n    DEFAULT_PROPS.scheduleQueryWarning\n  };\n}\nconst mapDispatchToProps = {\n  ...Actions\n};\nfunction mergeProps(stateProps, dispatchProps) {\n  return {\n    ...stateProps,\n    actions: dispatchProps\n  };\n}const _default =\nconnect(mapStateToProps, mapDispatchToProps, mergeProps)(TabbedSqlEditors);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(DEFAULT_PROPS, \"DEFAULT_PROPS\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(StyledEditableTabs, \"StyledEditableTabs\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(StyledTab, \"StyledTab\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(TabTitle, \"TabTitle\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(userOS, \"userOS\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(SQL_LAB_URL, \"SQL_LAB_URL\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(TabbedSqlEditors, \"TabbedSqlEditors\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(mergeProps, \"mergeProps\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["PureComponent","EditableTabs","connect","URI","FeatureFlag","styled","t","isFeatureEnabled","Logger","Tooltip","detectOS","Actions","EmptyStateBig","getBootstrapData","locationContext","SqlEditor","SqlEditorTabHeader","jsx","_jsx","jsxs","_jsxs","DEFAULT_PROPS","queryEditors","offline","saveQueryWarning","scheduleQueryWarning","StyledEditableTabs","StyledTab","span","TabTitle","theme","gridUnit","userOS","SQL_LAB_URL","TabbedSqlEditors","constructor","props","onTabClicked","_this$props$queryEdit","markTimeOrigin","noQueryEditors","length","newQueryEditor","removeQueryEditor","bind","handleSelect","handleEdit","componentDidMount","bootstrapData","queryParameters","window","location","search","id","name","sql","savedQueryId","datasourceKey","queryId","dbid","dbname","catalog","schema","autorun","new","isNewQuery","urlParams","context","requestedQuery","requested_query","actions","popStoredQuery","popSavedQuery","popQuery","popDatasourceQuery","databaseId","parseInt","databases","databaseName","Object","keys","forEach","db","database_name","dbId","addQueryEditor","popNewTab","_pick","history","replaceState","document","title","qe","activeQueryEditor","latestQuery","queries","latestQueryId","SqllabBackendPersistence","resultsKey","fetchQueryResults","displayLimit","updatedUrl","query","tabHistory","qeid","find","addNewQueryEditor","key","queryEditor","setActiveQueryEditor","action","render","_this$props$queryEdit2","_this$props$queryEdit3","editors","map","TabPane","tab","children","defaultQueryLimit","maxRow","emptyTab","placement","className","emptyTabState","closable","image","description","activeKey","onChange","fullWidth","hideAdd","onTabClick","onEdit","type","addIcon","__reactstandin__regenerateByEval","code","eval","contextType","mapStateToProps","sqlLab","common","_sqlLab$queryEditors","_sqlLab$offline","_common$conf$SQLLAB_S","_common$conf$SQLLAB_S2","defaultDbId","conf","SQLLAB_DEFAULT_DBID","DISPLAY_MAX_ROW","DEFAULT_SQLLAB_LIMIT","SQL_MAX_ROW","SQLLAB_SAVE_WARNING_MESSAGE","SQLLAB_SCHEDULE_WARNING_MESSAGE","mapDispatchToProps","mergeProps","stateProps","dispatchProps","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport { pick } from 'lodash';\nimport { EditableTabs } from 'src/components/Tabs';\nimport { connect } from 'react-redux';\nimport URI from 'urijs';\nimport type { QueryEditor, SqlLabRootState } from 'src/SqlLab/types';\nimport { FeatureFlag, styled, t, isFeatureEnabled } from '@superset-ui/core';\nimport { Logger } from 'src/logger/LogUtils';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { detectOS } from 'src/utils/common';\nimport * as Actions from 'src/SqlLab/actions/sqlLab';\nimport { EmptyStateBig } from 'src/components/EmptyState';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { locationContext } from 'src/pages/SqlLab/LocationContext';\nimport SqlEditor from '../SqlEditor';\nimport SqlEditorTabHeader from '../SqlEditorTabHeader';\n\nconst DEFAULT_PROPS = {\n  queryEditors: [],\n  offline: false,\n  saveQueryWarning: null,\n  scheduleQueryWarning: null,\n};\n\nconst StyledEditableTabs = styled(EditableTabs)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledTab = styled.span`\n  line-height: 24px;\n`;\n\nconst TabTitle = styled.span`\n  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n  text-transform: none;\n`;\n\n// Get the user's OS\nconst userOS = detectOS();\n\ntype TabbedSqlEditorsProps = ReturnType<typeof mergeProps>;\n\nconst SQL_LAB_URL = '/sqllab';\n\nclass TabbedSqlEditors extends PureComponent<TabbedSqlEditorsProps> {\n  constructor(props: TabbedSqlEditorsProps) {\n    super(props);\n    this.removeQueryEditor = this.removeQueryEditor.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n  }\n\n  componentDidMount() {\n    // merge post form data with GET search params\n    // Hack: this data should be coming from getInitialState\n    // but for some reason this data isn't being passed properly through\n    // the reducer.\n    const bootstrapData = getBootstrapData();\n    const queryParameters = URI(window.location).search(true);\n    const {\n      id,\n      name,\n      sql,\n      savedQueryId,\n      datasourceKey,\n      queryId,\n      dbid,\n      dbname,\n      catalog,\n      schema,\n      autorun,\n      new: isNewQuery,\n      ...urlParams\n    } = {\n      ...this.context.requestedQuery,\n      ...bootstrapData.requested_query,\n      ...queryParameters,\n    } as Record<string, string>;\n\n    // Popping a new tab based on the querystring\n    if (id || sql || savedQueryId || datasourceKey || queryId) {\n      if (id) {\n        this.props.actions.popStoredQuery(id);\n      } else if (savedQueryId) {\n        this.props.actions.popSavedQuery(savedQueryId);\n      } else if (queryId) {\n        this.props.actions.popQuery(queryId);\n      } else if (datasourceKey) {\n        this.props.actions.popDatasourceQuery(datasourceKey, sql);\n      } else if (sql) {\n        let databaseId: string | number = dbid;\n        if (databaseId) {\n          databaseId = parseInt(databaseId, 10);\n        } else {\n          const { databases } = this.props;\n          const databaseName = dbname;\n          if (databaseName) {\n            Object.keys(databases).forEach(db => {\n              if (databases[db].database_name === databaseName) {\n                databaseId = databases[db].id;\n              }\n            });\n          }\n        }\n        const newQueryEditor = {\n          name,\n          dbId: databaseId,\n          catalog,\n          schema,\n          autorun,\n          sql,\n        };\n        this.props.actions.addQueryEditor(newQueryEditor);\n      }\n      this.popNewTab(pick(urlParams, Object.keys(queryParameters)));\n    } else if (isNewQuery || this.props.queryEditors.length === 0) {\n      this.newQueryEditor();\n\n      if (isNewQuery) {\n        window.history.replaceState({}, document.title, SQL_LAB_URL);\n      }\n    } else {\n      const qe = this.activeQueryEditor();\n      const latestQuery = this.props.queries[qe?.latestQueryId || ''];\n      if (\n        isFeatureEnabled(FeatureFlag.SqllabBackendPersistence) &&\n        latestQuery &&\n        latestQuery.resultsKey\n      ) {\n        // when results are not stored in localStorage they need to be\n        // fetched from the results backend (if configured)\n        this.props.actions.fetchQueryResults(\n          latestQuery,\n          this.props.displayLimit,\n        );\n      }\n    }\n  }\n\n  popNewTab(urlParams: Record<string, string>) {\n    // Clean the url in browser history\n    const updatedUrl = `${URI(SQL_LAB_URL).query(urlParams)}`;\n    window.history.replaceState({}, document.title, updatedUrl);\n  }\n\n  activeQueryEditor() {\n    if (this.props.tabHistory.length === 0) {\n      return this.props.queryEditors[0];\n    }\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    return this.props.queryEditors.find(qe => qe.id === qeid) || null;\n  }\n\n  newQueryEditor() {\n    this.props.actions.addNewQueryEditor();\n  }\n\n  handleSelect(key: string) {\n    const qeid = this.props.tabHistory[this.props.tabHistory.length - 1];\n    if (key !== qeid) {\n      const queryEditor = this.props.queryEditors.find(qe => qe.id === key);\n      if (!queryEditor) {\n        return;\n      }\n      this.props.actions.setActiveQueryEditor(queryEditor);\n    }\n  }\n\n  handleEdit(key: string, action: string) {\n    if (action === 'remove') {\n      const qe = this.props.queryEditors.find(qe => qe.id === key);\n      if (qe) {\n        this.removeQueryEditor(qe);\n      }\n    }\n    if (action === 'add') {\n      Logger.markTimeOrigin();\n      this.newQueryEditor();\n    }\n  }\n\n  removeQueryEditor(qe: QueryEditor) {\n    this.props.actions.removeQueryEditor(qe);\n  }\n\n  onTabClicked = () => {\n    Logger.markTimeOrigin();\n    const noQueryEditors = this.props.queryEditors?.length === 0;\n    if (noQueryEditors) {\n      this.newQueryEditor();\n    }\n  };\n\n  render() {\n    const noQueryEditors = this.props.queryEditors?.length === 0;\n    const editors = this.props.queryEditors?.map(qe => (\n      <EditableTabs.TabPane\n        key={qe.id}\n        tab={<SqlEditorTabHeader queryEditor={qe} />}\n        // for tests - key prop isn't handled by enzyme well bcs it's a react keyword\n        data-key={qe.id}\n      >\n        <SqlEditor\n          queryEditor={qe}\n          defaultQueryLimit={this.props.defaultQueryLimit}\n          maxRow={this.props.maxRow}\n          displayLimit={this.props.displayLimit}\n          saveQueryWarning={this.props.saveQueryWarning}\n          scheduleQueryWarning={this.props.scheduleQueryWarning}\n        />\n      </EditableTabs.TabPane>\n    ));\n\n    const emptyTab = (\n      <StyledTab>\n        <TabTitle>{t('Add a new tab')}</TabTitle>\n        <Tooltip\n          id=\"add-tab\"\n          placement=\"bottom\"\n          title={\n            userOS === 'Windows'\n              ? t('New tab (Ctrl + q)')\n              : t('New tab (Ctrl + t)')\n          }\n        >\n          <i data-test=\"add-tab-icon\" className=\"fa fa-plus-circle\" />\n        </Tooltip>\n      </StyledTab>\n    );\n\n    const emptyTabState = (\n      <EditableTabs.TabPane\n        key={0}\n        data-key={0}\n        tab={emptyTab}\n        closable={false}\n      >\n        <EmptyStateBig\n          image=\"empty_sql_chart.svg\"\n          description={t('Add a new tab to create SQL Query')}\n        />\n      </EditableTabs.TabPane>\n    );\n\n    return (\n      <StyledEditableTabs\n        activeKey={this.props.tabHistory[this.props.tabHistory.length - 1]}\n        id=\"a11y-query-editor-tabs\"\n        className=\"SqlEditorTabs\"\n        data-test=\"sql-editor-tabs\"\n        onChange={this.handleSelect}\n        fullWidth={false}\n        hideAdd={this.props.offline}\n        onTabClick={this.onTabClicked}\n        onEdit={this.handleEdit}\n        type={noQueryEditors ? 'card' : 'editable-card'}\n        addIcon={\n          <Tooltip\n            id=\"add-tab\"\n            placement=\"bottom\"\n            title={\n              userOS === 'Windows'\n                ? t('New tab (Ctrl + q)')\n                : t('New tab (Ctrl + t)')\n            }\n          >\n            <i data-test=\"add-tab-icon\" className=\"fa fa-plus-circle\" />\n          </Tooltip>\n        }\n      >\n        {editors}\n        {noQueryEditors && emptyTabState}\n      </StyledEditableTabs>\n    );\n  }\n}\n\nTabbedSqlEditors.contextType = locationContext;\n\nexport function mapStateToProps({ sqlLab, common }: SqlLabRootState) {\n  return {\n    databases: sqlLab.databases,\n    queryEditors: sqlLab.queryEditors ?? DEFAULT_PROPS.queryEditors,\n    queries: sqlLab.queries,\n    tabHistory: sqlLab.tabHistory,\n    defaultDbId: common.conf.SQLLAB_DEFAULT_DBID,\n    displayLimit: common.conf.DISPLAY_MAX_ROW,\n    offline: sqlLab.offline ?? DEFAULT_PROPS.offline,\n    defaultQueryLimit: common.conf.DEFAULT_SQLLAB_LIMIT,\n    maxRow: common.conf.SQL_MAX_ROW,\n    saveQueryWarning:\n      common.conf.SQLLAB_SAVE_WARNING_MESSAGE ?? DEFAULT_PROPS.saveQueryWarning,\n    scheduleQueryWarning:\n      common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE ??\n      DEFAULT_PROPS.scheduleQueryWarning,\n  };\n}\n\nconst mapDispatchToProps = {\n  ...Actions,\n};\n\nfunction mergeProps(\n  stateProps: ReturnType<typeof mapStateToProps>,\n  dispatchProps: typeof mapDispatchToProps,\n) {\n  return {\n    ...stateProps,\n    actions: dispatchProps,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(TabbedSqlEditors);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}