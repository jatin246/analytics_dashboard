{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;};import { css, styled, t } from '@superset-ui/core';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst TooltipSectionWrapper = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: column;\n    font-size: ${theme.typography.sizes.s}px;\n    line-height: 1.2;\n\n    &:not(:last-of-type) {\n      margin-bottom: ${theme.gridUnit * 2}px;\n    }\n    &:last-of-type {\n      display: -webkit-box;\n      -webkit-line-clamp: 40;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  `}\n`;\nconst TooltipSectionLabel = styled.span`\n  ${({ theme }) => css`\n    font-weight: ${theme.typography.weights.bold};\n  `}\n`;\nconst TooltipSection = ({ label, text }) => _jsxs(TooltipSectionWrapper, { children: [\n  _jsx(TooltipSectionLabel, { children: label }),\n  _jsx(\"span\", { children: text })] }\n);\nexport const isLabelTruncated = (labelRef) => {var _labelRef$current, _labelRef$current2;return !!((labelRef == null ? void 0 : (_labelRef$current = labelRef.current) == null ? void 0 : _labelRef$current.scrollWidth) > (labelRef == null ? void 0 : (_labelRef$current2 = labelRef.current) == null ? void 0 : _labelRef$current2.clientWidth));};\nexport const getColumnLabelText = (column) => column.verbose_name || column.column_name;\nexport const getColumnTypeTooltipNode = (column) => {\n  if (!column.type) {\n    return null;\n  }\n  return _jsx(TooltipSection, { label: t('Column datatype'), text: column.type.toLowerCase() });\n};\nexport const getColumnTooltipNode = (column, labelRef) => {\n  if ((!column.column_name || !column.verbose_name) &&\n  !column.description &&\n  !isLabelTruncated(labelRef)) {\n    return null;\n  }\n  return _jsxs(_Fragment, { children: [\n    column.column_name && _jsx(TooltipSection, { label: t('Column name'), text: column.column_name }),\n    column.verbose_name && _jsx(TooltipSection, { label: t('Label'), text: column.verbose_name }),\n    column.description && _jsx(TooltipSection, { label: t('Description'), text: column.description })] }\n  );\n};\nexport const getMetricTooltipNode = (metric, labelRef) => {\n  if (!metric.verbose_name &&\n  !metric.description &&\n  !metric.label &&\n  !isLabelTruncated(labelRef)) {\n    return null;\n  }\n  return _jsxs(_Fragment, { children: [\n    _jsx(TooltipSection, { label: t('Metric name'), text: metric.metric_name }),\n    (metric.label || metric.verbose_name) && _jsx(TooltipSection, { label: t('Label'), text: metric.label || metric.verbose_name }),\n    metric.description && _jsx(TooltipSection, { label: t('Description'), text: metric.description })] }\n  );\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TooltipSectionWrapper, \"TooltipSectionWrapper\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/components/labelUtils.tsx\");reactHotLoader.register(TooltipSectionLabel, \"TooltipSectionLabel\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/components/labelUtils.tsx\");reactHotLoader.register(TooltipSection, \"TooltipSection\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/components/labelUtils.tsx\");reactHotLoader.register(isLabelTruncated, \"isLabelTruncated\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/components/labelUtils.tsx\");reactHotLoader.register(getColumnLabelText, \"getColumnLabelText\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/components/labelUtils.tsx\");reactHotLoader.register(getColumnTypeTooltipNode, \"getColumnTypeTooltipNode\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/components/labelUtils.tsx\");reactHotLoader.register(getColumnTooltipNode, \"getColumnTooltipNode\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/components/labelUtils.tsx\");reactHotLoader.register(getMetricTooltipNode, \"getMetricTooltipNode\", \"/app/superset-frontend/packages/superset-ui-chart-controls/src/components/labelUtils.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["css","styled","t","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TooltipSectionWrapper","div","theme","typography","sizes","s","gridUnit","TooltipSectionLabel","span","weights","bold","TooltipSection","label","text","children","isLabelTruncated","labelRef","_labelRef$current","_labelRef$current2","current","scrollWidth","clientWidth","getColumnLabelText","column","verbose_name","column_name","getColumnTypeTooltipNode","type","toLowerCase","getColumnTooltipNode","description","getMetricTooltipNode","metric","metric_name","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/packages/superset-ui-chart-controls/src/components/labelUtils.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ReactNode, RefObject } from 'react';\n\nimport { css, styled, t } from '@superset-ui/core';\nimport { ColumnMeta, Metric } from '@superset-ui/chart-controls';\n\nconst TooltipSectionWrapper = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-direction: column;\n    font-size: ${theme.typography.sizes.s}px;\n    line-height: 1.2;\n\n    &:not(:last-of-type) {\n      margin-bottom: ${theme.gridUnit * 2}px;\n    }\n    &:last-of-type {\n      display: -webkit-box;\n      -webkit-line-clamp: 40;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  `}\n`;\n\nconst TooltipSectionLabel = styled.span`\n  ${({ theme }) => css`\n    font-weight: ${theme.typography.weights.bold};\n  `}\n`;\n\nconst TooltipSection = ({\n  label,\n  text,\n}: {\n  label: ReactNode;\n  text: ReactNode;\n}) => (\n  <TooltipSectionWrapper>\n    <TooltipSectionLabel>{label}</TooltipSectionLabel>\n    <span>{text}</span>\n  </TooltipSectionWrapper>\n);\n\nexport const isLabelTruncated = (labelRef?: RefObject<any>): boolean =>\n  !!(labelRef?.current?.scrollWidth > labelRef?.current?.clientWidth);\n\nexport const getColumnLabelText = (column: ColumnMeta): string =>\n  column.verbose_name || column.column_name;\n\nexport const getColumnTypeTooltipNode = (column: ColumnMeta): ReactNode => {\n  if (!column.type) {\n    return null;\n  }\n\n  return (\n    <TooltipSection\n      label={t('Column datatype')}\n      text={column.type.toLowerCase()}\n    />\n  );\n};\n\nexport const getColumnTooltipNode = (\n  column: ColumnMeta,\n  labelRef?: RefObject<any>,\n): ReactNode => {\n  if (\n    (!column.column_name || !column.verbose_name) &&\n    !column.description &&\n    !isLabelTruncated(labelRef)\n  ) {\n    return null;\n  }\n\n  return (\n    <>\n      {column.column_name && (\n        <TooltipSection label={t('Column name')} text={column.column_name} />\n      )}\n      {column.verbose_name && (\n        <TooltipSection label={t('Label')} text={column.verbose_name} />\n      )}\n      {column.description && (\n        <TooltipSection label={t('Description')} text={column.description} />\n      )}\n    </>\n  );\n};\n\ntype MetricType = Omit<Metric, 'id'> & { label?: string };\n\nexport const getMetricTooltipNode = (\n  metric: MetricType,\n  labelRef?: RefObject<any>,\n): ReactNode => {\n  if (\n    !metric.verbose_name &&\n    !metric.description &&\n    !metric.label &&\n    !isLabelTruncated(labelRef)\n  ) {\n    return null;\n  }\n\n  return (\n    <>\n      <TooltipSection label={t('Metric name')} text={metric.metric_name} />\n      {(metric.label || metric.verbose_name) && (\n        <TooltipSection\n          label={t('Label')}\n          text={metric.label || metric.verbose_name}\n        />\n      )}\n      {metric.description && (\n        <TooltipSection label={t('Description')} text={metric.description} />\n      )}\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}