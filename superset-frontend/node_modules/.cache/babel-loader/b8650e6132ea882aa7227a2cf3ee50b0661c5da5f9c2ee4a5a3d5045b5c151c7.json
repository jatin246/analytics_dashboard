{"ast":null,"code":"import _sortBy from \"lodash/sortBy\";import _isFunction from \"lodash/isFunction\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { css, ColorSchemeGroup, styled, t, useTheme } from '@superset-ui/core';\nimport AntdSelect from 'antd/lib/select';\n\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { StyledSelect } from 'src/components/Select/styles';\nimport { handleFilterOptionHelper } from 'src/components/Select/utils';\nimport ColorSchemeLabel from './ColorSchemeLabel';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst { Option, OptGroup } = AntdSelect;\nconst StyledAlert = styled(Icons.AlertSolid)`\n  color: ${({ theme }) => theme.colors.alert.base};\n`;\nconst CUSTOM_LABEL_ALERT = t(`This color scheme is being overridden by custom label colors.\n    Check the JSON metadata in the Advanced settings`);\nconst DASHBOARD_ALERT = t(`The color scheme is determined by the related dashboard.\n        Edit the color scheme in the dashboard properties.`);\nconst Label = ({ label, hasCustomLabelsColor, dashboardId }) => {\n  if (hasCustomLabelsColor || dashboardId) {\n    const alertTitle = hasCustomLabelsColor ?\n    CUSTOM_LABEL_ALERT :\n    DASHBOARD_ALERT;\n    return _jsxs(_Fragment, { children: [\n      label, ' ',\n      _jsx(Tooltip, { title: alertTitle, children:\n        _jsx(StyledAlert, { iconSize: \"s\" }) }\n      )] }\n    );\n  }\n  return _jsx(_Fragment, { children: label });\n};\nconst ColorSchemeControl = ({ hasCustomLabelsColor = false, dashboardId, label = t('Color scheme'), onChange = () => {}, value, clearable = false, defaultScheme, choices = [], schemes = {}, isLinear, ...rest }) => {\n  const theme = useTheme();\n  const currentScheme = useMemo(() => {\n    if (dashboardId) {\n      return 'dashboard';\n    }\n    let result = value || defaultScheme;\n    if (result === 'SUPERSET_DEFAULT') {var _schemesObject$SUPERS;\n      const schemesObject = _isFunction(schemes) ? schemes() : schemes;\n      result = schemesObject == null ? void 0 : (_schemesObject$SUPERS = schemesObject.SUPERSET_DEFAULT) == null ? void 0 : _schemesObject$SUPERS.id;\n    }\n    return result;\n  }, [dashboardId, defaultScheme, schemes, value]);\n  const options = useMemo(() => {\n    if (dashboardId) {\n      return [\n      _jsx(Option, { value: \"dashboard\", label: t('dashboard'), children:\n        _jsx(Tooltip, { title: DASHBOARD_ALERT, children: t('Dashboard scheme') }) }, \"dashboard\"\n      )];\n\n    }\n    const schemesObject = _isFunction(schemes) ? schemes() : schemes;\n    const controlChoices = _isFunction(choices) ? choices() : choices;\n    const allColorOptions = [];\n    const filteredColorOptions = controlChoices.filter((o) => {\n      const option = o[0];\n      const isValidColorOption = option !== 'SUPERSET_DEFAULT' && !allColorOptions.includes(option);\n      allColorOptions.push(option);\n      return isValidColorOption;\n    });\n    const groups = filteredColorOptions.reduce((acc, [value]) => {var _schemesObject$value, _currentScheme$group;\n      const currentScheme = schemesObject[value];\n      // For categorical scheme, display all the colors\n      // For sequential scheme, show 10 or interpolate to 10.\n      // Sequential schemes usually have at most 10 colors.\n      let colors = [];\n      if (currentScheme) {\n        colors = isLinear ?\n        currentScheme.getColors(10) :\n        currentScheme.colors;\n      }\n      const option = {\n        customLabel: _jsx(ColorSchemeLabel, { id: currentScheme.id, label: currentScheme.label, colors: colors }),\n        label: (schemesObject == null ? void 0 : (_schemesObject$value = schemesObject[value]) == null ? void 0 : _schemesObject$value.label) || value,\n        value\n      };\n      acc[(_currentScheme$group = currentScheme.group) != null ? _currentScheme$group : ColorSchemeGroup.Other].options.push(option);\n      return acc;\n    }, {\n      [ColorSchemeGroup.Custom]: {\n        title: ColorSchemeGroup.Custom,\n        label: t('Custom color palettes'),\n        options: []\n      },\n      [ColorSchemeGroup.Featured]: {\n        title: ColorSchemeGroup.Featured,\n        label: t('Featured color palettes'),\n        options: []\n      },\n      [ColorSchemeGroup.Other]: {\n        title: ColorSchemeGroup.Other,\n        label: t('Other color palettes'),\n        options: []\n      }\n    });\n    const nonEmptyGroups = Object.values(groups).\n    filter((group) => group.options.length > 0).\n    map((group) => ({\n      ...group,\n      options: _sortBy(group.options, (opt) => opt.label)\n    }));\n    // if there are no featured or custom color schemes, return the ungrouped options\n    if (nonEmptyGroups.length === 1 &&\n    nonEmptyGroups[0].title === ColorSchemeGroup.Other) {\n      return nonEmptyGroups[0].options.map((opt, index) => _jsx(Option, { value: opt.value, label: opt.label, children:\n        opt.customLabel }, index\n      ));\n    }\n    return nonEmptyGroups.map((group, groupIndex) => _jsx(OptGroup, { label: group.label, children:\n      group.options.map((opt, optIndex) => _jsx(Option, { value: opt.value, label: opt.label, children:\n        opt.customLabel }, `${groupIndex}-${optIndex}`\n      )) }, groupIndex\n    ));\n  }, [choices, dashboardId, isLinear, schemes]);\n  // We can't pass on change directly because it receives a second\n  // parameter and it would be interpreted as the error parameter\n  const handleOnChange = (value) => onChange(value);\n  return _jsxs(_Fragment, { children: [\n    _jsx(ControlHeader, { ...rest, label: _jsx(Label, { label: label, hasCustomLabelsColor: hasCustomLabelsColor, dashboardId: dashboardId }) }),\n    _jsx(StyledSelect, { css: css`\n          width: 100%;\n          & .ant-select-item.ant-select-item-group {\n            padding-left: ${theme.gridUnit}px;\n            font-size: ${theme.typography.sizes.m}px;\n          }\n          & .ant-select-item-option-grouped {\n            padding-left: ${theme.gridUnit * 3}px;\n          }\n        `, \"aria-label\": t('Select color scheme'), allowClear: clearable, disabled: !!dashboardId, onChange: handleOnChange, placeholder: t('Select scheme'), value: currentScheme, getPopupContainer: (triggerNode) => triggerNode.parentNode, showSearch: true, filterOption: (search, option) => handleFilterOptionHelper(search, option, ['label', 'value'], true), children:\n      options }\n    )] }\n  );\n};__signature__(ColorSchemeControl, \"useTheme{theme}\\nuseMemo{currentScheme}\\nuseMemo{options}\", () => [useTheme]);const _default =\nColorSchemeControl;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Option, \"Option\", \"/app/superset-frontend/src/explore/components/controls/ColorSchemeControl/index.tsx\");reactHotLoader.register(OptGroup, \"OptGroup\", \"/app/superset-frontend/src/explore/components/controls/ColorSchemeControl/index.tsx\");reactHotLoader.register(StyledAlert, \"StyledAlert\", \"/app/superset-frontend/src/explore/components/controls/ColorSchemeControl/index.tsx\");reactHotLoader.register(CUSTOM_LABEL_ALERT, \"CUSTOM_LABEL_ALERT\", \"/app/superset-frontend/src/explore/components/controls/ColorSchemeControl/index.tsx\");reactHotLoader.register(DASHBOARD_ALERT, \"DASHBOARD_ALERT\", \"/app/superset-frontend/src/explore/components/controls/ColorSchemeControl/index.tsx\");reactHotLoader.register(Label, \"Label\", \"/app/superset-frontend/src/explore/components/controls/ColorSchemeControl/index.tsx\");reactHotLoader.register(ColorSchemeControl, \"ColorSchemeControl\", \"/app/superset-frontend/src/explore/components/controls/ColorSchemeControl/index.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/components/controls/ColorSchemeControl/index.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["useMemo","css","ColorSchemeGroup","styled","t","useTheme","AntdSelect","ControlHeader","Tooltip","Icons","StyledSelect","handleFilterOptionHelper","ColorSchemeLabel","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Option","OptGroup","StyledAlert","AlertSolid","theme","colors","alert","base","CUSTOM_LABEL_ALERT","DASHBOARD_ALERT","Label","label","hasCustomLabelsColor","dashboardId","alertTitle","children","title","iconSize","ColorSchemeControl","onChange","value","clearable","defaultScheme","choices","schemes","isLinear","rest","currentScheme","result","_schemesObject$SUPERS","schemesObject","_isFunction","SUPERSET_DEFAULT","id","options","controlChoices","allColorOptions","filteredColorOptions","filter","o","option","isValidColorOption","includes","push","groups","reduce","acc","_schemesObject$value","_currentScheme$group","getColors","customLabel","group","Other","Custom","Featured","nonEmptyGroups","Object","values","length","map","_sortBy","opt","index","groupIndex","optIndex","handleOnChange","gridUnit","typography","sizes","m","allowClear","disabled","placeholder","getPopupContainer","triggerNode","parentNode","showSearch","filterOption","search","__signature__","_default","reactHotLoader","reactHotLoaderGlobal","default","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/src/explore/components/controls/ColorSchemeControl/index.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, ReactNode } from 'react';\n\nimport {\n  css,\n  ColorScheme,\n  ColorSchemeGroup,\n  SequentialScheme,\n  styled,\n  t,\n  useTheme,\n} from '@superset-ui/core';\nimport AntdSelect from 'antd/lib/select';\nimport { isFunction, sortBy } from 'lodash';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { SelectOptionsType } from 'src/components/Select/types';\nimport { StyledSelect } from 'src/components/Select/styles';\nimport { handleFilterOptionHelper } from 'src/components/Select/utils';\nimport ColorSchemeLabel from './ColorSchemeLabel';\n\nconst { Option, OptGroup } = AntdSelect;\n\nexport type OptionData = SelectOptionsType[number]['options'][number];\n\nexport interface ColorSchemes {\n  [key: string]: ColorScheme;\n}\n\nexport interface ColorSchemeControlProps {\n  hasCustomLabelsColor: boolean;\n  dashboardId?: number;\n  label: string;\n  name: string;\n  onChange?: (value: string) => void;\n  value: string;\n  clearable: boolean;\n  defaultScheme?: string;\n  choices: string[][] | (() => string[][]);\n  schemes: ColorSchemes | (() => ColorSchemes);\n  isLinear: boolean;\n}\n\nconst StyledAlert = styled(Icons.AlertSolid)`\n  color: ${({ theme }) => theme.colors.alert.base};\n`;\n\nconst CUSTOM_LABEL_ALERT = t(\n  `This color scheme is being overridden by custom label colors.\n    Check the JSON metadata in the Advanced settings`,\n);\n\nconst DASHBOARD_ALERT = t(\n  `The color scheme is determined by the related dashboard.\n        Edit the color scheme in the dashboard properties.`,\n);\n\nconst Label = ({\n  label,\n  hasCustomLabelsColor,\n  dashboardId,\n}: Pick<\n  ColorSchemeControlProps,\n  'label' | 'hasCustomLabelsColor' | 'dashboardId'\n>) => {\n  if (hasCustomLabelsColor || dashboardId) {\n    const alertTitle = hasCustomLabelsColor\n      ? CUSTOM_LABEL_ALERT\n      : DASHBOARD_ALERT;\n    return (\n      <>\n        {label}{' '}\n        <Tooltip title={alertTitle}>\n          <StyledAlert iconSize=\"s\" />\n        </Tooltip>\n      </>\n    );\n  }\n  return <>{label}</>;\n};\n\nconst ColorSchemeControl = ({\n  hasCustomLabelsColor = false,\n  dashboardId,\n  label = t('Color scheme'),\n  onChange = () => {},\n  value,\n  clearable = false,\n  defaultScheme,\n  choices = [],\n  schemes = {},\n  isLinear,\n  ...rest\n}: ColorSchemeControlProps) => {\n  const theme = useTheme();\n  const currentScheme = useMemo(() => {\n    if (dashboardId) {\n      return 'dashboard';\n    }\n    let result = value || defaultScheme;\n    if (result === 'SUPERSET_DEFAULT') {\n      const schemesObject = isFunction(schemes) ? schemes() : schemes;\n      result = schemesObject?.SUPERSET_DEFAULT?.id;\n    }\n    return result;\n  }, [dashboardId, defaultScheme, schemes, value]);\n\n  const options = useMemo(() => {\n    if (dashboardId) {\n      return [\n        <Option value=\"dashboard\" label={t('dashboard')} key=\"dashboard\">\n          <Tooltip title={DASHBOARD_ALERT}>{t('Dashboard scheme')}</Tooltip>\n        </Option>,\n      ];\n    }\n    const schemesObject = isFunction(schemes) ? schemes() : schemes;\n    const controlChoices = isFunction(choices) ? choices() : choices;\n    const allColorOptions: string[] = [];\n    const filteredColorOptions = controlChoices.filter(o => {\n      const option = o[0];\n      const isValidColorOption =\n        option !== 'SUPERSET_DEFAULT' && !allColorOptions.includes(option);\n      allColorOptions.push(option);\n      return isValidColorOption;\n    });\n\n    const groups = filteredColorOptions.reduce(\n      (acc, [value]) => {\n        const currentScheme = schemesObject[value];\n\n        // For categorical scheme, display all the colors\n        // For sequential scheme, show 10 or interpolate to 10.\n        // Sequential schemes usually have at most 10 colors.\n        let colors: string[] = [];\n        if (currentScheme) {\n          colors = isLinear\n            ? (currentScheme as SequentialScheme).getColors(10)\n            : currentScheme.colors;\n        }\n        const option = {\n          customLabel: (\n            <ColorSchemeLabel\n              id={currentScheme.id}\n              label={currentScheme.label}\n              colors={colors}\n            />\n          ) as ReactNode,\n          label: schemesObject?.[value]?.label || value,\n          value,\n        };\n        acc[currentScheme.group ?? ColorSchemeGroup.Other].options.push(option);\n        return acc;\n      },\n      {\n        [ColorSchemeGroup.Custom]: {\n          title: ColorSchemeGroup.Custom,\n          label: t('Custom color palettes'),\n          options: [] as OptionData,\n        },\n        [ColorSchemeGroup.Featured]: {\n          title: ColorSchemeGroup.Featured,\n          label: t('Featured color palettes'),\n          options: [] as OptionData,\n        },\n        [ColorSchemeGroup.Other]: {\n          title: ColorSchemeGroup.Other,\n          label: t('Other color palettes'),\n          options: [] as OptionData,\n        },\n      },\n    );\n    const nonEmptyGroups = Object.values(groups)\n      .filter(group => group.options.length > 0)\n      .map(group => ({\n        ...group,\n        options: sortBy(group.options, opt => opt.label),\n      }));\n\n    // if there are no featured or custom color schemes, return the ungrouped options\n    if (\n      nonEmptyGroups.length === 1 &&\n      nonEmptyGroups[0].title === ColorSchemeGroup.Other\n    ) {\n      return nonEmptyGroups[0].options.map((opt, index) => (\n        <Option value={opt.value} label={opt.label} key={index}>\n          {opt.customLabel}\n        </Option>\n      ));\n    }\n    return nonEmptyGroups.map((group, groupIndex) => (\n      <OptGroup label={group.label} key={groupIndex}>\n        {group.options.map((opt, optIndex) => (\n          <Option\n            value={opt.value}\n            label={opt.label}\n            key={`${groupIndex}-${optIndex}`}\n          >\n            {opt.customLabel}\n          </Option>\n        ))}\n      </OptGroup>\n    ));\n  }, [choices, dashboardId, isLinear, schemes]);\n\n  // We can't pass on change directly because it receives a second\n  // parameter and it would be interpreted as the error parameter\n  const handleOnChange = (value: string) => onChange(value);\n\n  return (\n    <>\n      <ControlHeader\n        {...rest}\n        label={\n          <Label\n            label={label}\n            hasCustomLabelsColor={hasCustomLabelsColor}\n            dashboardId={dashboardId}\n          />\n        }\n      />\n      <StyledSelect\n        css={css`\n          width: 100%;\n          & .ant-select-item.ant-select-item-group {\n            padding-left: ${theme.gridUnit}px;\n            font-size: ${theme.typography.sizes.m}px;\n          }\n          & .ant-select-item-option-grouped {\n            padding-left: ${theme.gridUnit * 3}px;\n          }\n        `}\n        aria-label={t('Select color scheme')}\n        allowClear={clearable}\n        disabled={!!dashboardId}\n        onChange={handleOnChange}\n        placeholder={t('Select scheme')}\n        value={currentScheme}\n        getPopupContainer={triggerNode => triggerNode.parentNode}\n        showSearch\n        filterOption={(search, option) =>\n          handleFilterOptionHelper(\n            search,\n            option as OptionData,\n            ['label', 'value'],\n            true,\n          )\n        }\n      >\n        {options}\n      </StyledSelect>\n    </>\n  );\n};\n\nexport default ColorSchemeControl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}