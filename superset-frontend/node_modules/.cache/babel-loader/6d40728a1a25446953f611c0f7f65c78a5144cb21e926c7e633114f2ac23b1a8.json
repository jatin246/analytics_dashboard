{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { ControlSubSectionHeader, DEFAULT_SORT_SERIES_DATA, SORT_SERIES_CHOICES, sharedControls } from '@superset-ui/chart-controls';\nimport { DEFAULT_LEGEND_FORM_DATA, StackControlOptions } from './constants';\nimport { DEFAULT_FORM_DATA } from './Timeseries/constants';\nimport { defaultXAxis } from './defaults';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst { legendMargin, legendOrientation, legendType, showLegend } = DEFAULT_LEGEND_FORM_DATA;\nexport const showLegendControl = {\n  name: 'show_legend',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Show legend'),\n    renderTrigger: true,\n    default: showLegend,\n    description: t('Whether to display a legend for the chart')\n  }\n};\nconst legendMarginControl = {\n  name: 'legendMargin',\n  config: {\n    type: 'TextControl',\n    label: t('Margin'),\n    renderTrigger: true,\n    isInt: true,\n    default: legendMargin,\n    description: t('Additional padding for legend.'),\n    visibility: ({ controls }) => {var _controls$show_legend;return Boolean(controls == null ? void 0 : (_controls$show_legend = controls.show_legend) == null ? void 0 : _controls$show_legend.value);}\n  }\n};\nconst legendTypeControl = {\n  name: 'legendType',\n  config: {\n    type: 'SelectControl',\n    freeForm: false,\n    label: t('Type'),\n    choices: [\n    ['scroll', t('Scroll')],\n    ['plain', t('Plain')]],\n\n    default: legendType,\n    renderTrigger: true,\n    description: t('Legend type'),\n    visibility: ({ controls }) => {var _controls$show_legend2;return Boolean(controls == null ? void 0 : (_controls$show_legend2 = controls.show_legend) == null ? void 0 : _controls$show_legend2.value);}\n  }\n};\nconst legendOrientationControl = {\n  name: 'legendOrientation',\n  config: {\n    type: 'SelectControl',\n    freeForm: false,\n    label: t('Orientation'),\n    choices: [\n    ['top', t('Top')],\n    ['bottom', t('Bottom')],\n    ['left', t('Left')],\n    ['right', t('Right')]],\n\n    default: legendOrientation,\n    renderTrigger: true,\n    description: t('Legend Orientation'),\n    visibility: ({ controls }) => {var _controls$show_legend3;return Boolean(controls == null ? void 0 : (_controls$show_legend3 = controls.show_legend) == null ? void 0 : _controls$show_legend3.value);}\n  }\n};\nexport const legendSection = [\n[_jsx(ControlSubSectionHeader, { children: t('Legend') })],\n[showLegendControl],\n[legendTypeControl],\n[legendOrientationControl],\n[legendMarginControl]];\n\nexport const showValueControl = {\n  name: 'show_value',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Show Value'),\n    default: false,\n    renderTrigger: true,\n    description: t('Show series values on the chart')\n  }\n};\nexport const stackControl = {\n  name: 'stack',\n  config: {\n    type: 'SelectControl',\n    label: t('Stacked Style'),\n    renderTrigger: true,\n    choices: StackControlOptions,\n    default: null,\n    description: t('Stack series on top of each other')\n  }\n};\nexport const onlyTotalControl = {\n  name: 'only_total',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Only Total'),\n    default: true,\n    renderTrigger: true,\n    description: t('Only show the total value on the stacked chart, and not show on the selected category'),\n    visibility: ({ controls }) => {var _controls$show_value, _controls$stack;return Boolean(controls == null ? void 0 : (_controls$show_value = controls.show_value) == null ? void 0 : _controls$show_value.value) && Boolean(controls == null ? void 0 : (_controls$stack = controls.stack) == null ? void 0 : _controls$stack.value);}\n  }\n};\nexport const percentageThresholdControl = {\n  name: 'percentage_threshold',\n  config: {\n    type: 'TextControl',\n    label: t('Percentage threshold'),\n    renderTrigger: true,\n    isFloat: true,\n    default: DEFAULT_FORM_DATA.percentageThreshold,\n    description: t('Minimum threshold in percentage points for showing labels.'),\n    visibility: ({ controls }) => {var _controls$show_value2, _controls$stack2, _controls$only_total;return Boolean(controls == null ? void 0 : (_controls$show_value2 = controls.show_value) == null ? void 0 : _controls$show_value2.value) &&\n      Boolean(controls == null ? void 0 : (_controls$stack2 = controls.stack) == null ? void 0 : _controls$stack2.value) &&\n      Boolean(!(controls != null && (_controls$only_total = controls.only_total) != null && _controls$only_total.value));}\n  }\n};\nexport const showValueSection = [\n[showValueControl],\n[stackControl],\n[onlyTotalControl],\n[percentageThresholdControl]];\n\nexport const showValueSectionWithoutStack = [\n[showValueControl],\n[onlyTotalControl]];\n\nconst richTooltipControl = {\n  name: 'rich_tooltip',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Rich tooltip'),\n    renderTrigger: true,\n    default: true,\n    description: t('Shows a list of all series available at that point in time')\n  }\n};\nconst tooltipTimeFormatControl = {\n  name: 'tooltipTimeFormat',\n  config: {\n    ...sharedControls.x_axis_time_format,\n    label: t('Tooltip time format'),\n    default: 'smart_date',\n    clearable: false\n  }\n};\nconst tooltipSortByMetricControl = {\n  name: 'tooltipSortByMetric',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Tooltip sort by metric'),\n    renderTrigger: true,\n    default: false,\n    description: t('Whether to sort tooltip by the selected metric in descending order.'),\n    visibility: ({ controls }) => {var _controls$rich_toolti;return Boolean(controls == null ? void 0 : (_controls$rich_toolti = controls.rich_tooltip) == null ? void 0 : _controls$rich_toolti.value);}\n  }\n};\nexport const richTooltipSection = [\n[_jsx(ControlSubSectionHeader, { children: t('Tooltip') })],\n[richTooltipControl],\n[tooltipSortByMetricControl],\n[tooltipTimeFormatControl]];\n\nconst sortSeriesType = {\n  name: 'sort_series_type',\n  config: {\n    type: 'SelectControl',\n    freeForm: false,\n    label: t('Sort Series By'),\n    choices: SORT_SERIES_CHOICES,\n    default: DEFAULT_SORT_SERIES_DATA.sort_series_type,\n    renderTrigger: true,\n    description: t('Based on what should series be ordered on the chart and legend')\n  }\n};\nconst sortSeriesAscending = {\n  name: 'sort_series_ascending',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Sort Series Ascending'),\n    default: DEFAULT_SORT_SERIES_DATA.sort_series_ascending,\n    renderTrigger: true,\n    description: t('Sort series in ascending order')\n  }\n};\nexport const xAxisLabelRotation = {\n  name: 'xAxisLabelRotation',\n  config: {\n    type: 'SelectControl',\n    freeForm: true,\n    clearable: false,\n    label: t('Rotate x axis label'),\n    choices: [\n    [0, '0째'],\n    [45, '45째'],\n    [90, '90째']],\n\n    default: defaultXAxis.xAxisLabelRotation,\n    renderTrigger: true,\n    description: t('Input field supports custom rotation. e.g. 30 for 30째')\n  }\n};\nexport const seriesOrderSection = [\n[_jsx(ControlSubSectionHeader, { children: t('Series Order') })],\n[sortSeriesType],\n[sortSeriesAscending]];\n\nexport const truncateXAxis = {\n  name: 'truncateXAxis',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Truncate X Axis'),\n    default: DEFAULT_FORM_DATA.truncateXAxis,\n    renderTrigger: true,\n    description: t('Truncate X Axis. Can be overridden by specifying a min or max bound. Only applicable for numercal X axis.')\n  }\n};\nexport const xAxisBounds = {\n  name: 'xAxisBounds',\n  config: {\n    type: 'BoundsControl',\n    label: t('X Axis Bounds'),\n    renderTrigger: true,\n    default: DEFAULT_FORM_DATA.xAxisBounds,\n    description: t('Bounds for numerical X axis. Not applicable for temporal or categorical axes. ' +\n    'When left empty, the bounds are dynamically defined based on the min/max of the data. ' +\n    \"Note that this feature will only expand the axis range. It won't \" +\n    \"narrow the data's extent.\"),\n    visibility: ({ controls }) => {var _controls$truncateXAx;return Boolean(controls == null ? void 0 : (_controls$truncateXAx = controls.truncateXAxis) == null ? void 0 : _controls$truncateXAx.value);}\n  }\n};\nexport const minorTicks = {\n  name: 'minorTicks',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Minor ticks'),\n    default: false,\n    renderTrigger: true,\n    description: t('Show minor ticks on axes.')\n  }\n};\nexport const forceCategorical = {\n  name: 'forceCategorical',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Force categorical'),\n    default: false,\n    renderTrigger: true,\n    description: t('Make the x-axis categorical')\n  }\n};;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(legendMargin, \"legendMargin\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(legendOrientation, \"legendOrientation\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(legendType, \"legendType\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(showLegend, \"showLegend\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(showLegendControl, \"showLegendControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(legendMarginControl, \"legendMarginControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(legendTypeControl, \"legendTypeControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(legendOrientationControl, \"legendOrientationControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(legendSection, \"legendSection\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(showValueControl, \"showValueControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(stackControl, \"stackControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(onlyTotalControl, \"onlyTotalControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(percentageThresholdControl, \"percentageThresholdControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(showValueSection, \"showValueSection\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(showValueSectionWithoutStack, \"showValueSectionWithoutStack\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(richTooltipControl, \"richTooltipControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(tooltipTimeFormatControl, \"tooltipTimeFormatControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(tooltipSortByMetricControl, \"tooltipSortByMetricControl\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(richTooltipSection, \"richTooltipSection\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(sortSeriesType, \"sortSeriesType\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(sortSeriesAscending, \"sortSeriesAscending\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(xAxisLabelRotation, \"xAxisLabelRotation\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(seriesOrderSection, \"seriesOrderSection\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(truncateXAxis, \"truncateXAxis\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(xAxisBounds, \"xAxisBounds\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(minorTicks, \"minorTicks\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");reactHotLoader.register(forceCategorical, \"forceCategorical\", \"/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"names":["t","ControlSubSectionHeader","DEFAULT_SORT_SERIES_DATA","SORT_SERIES_CHOICES","sharedControls","DEFAULT_LEGEND_FORM_DATA","StackControlOptions","DEFAULT_FORM_DATA","defaultXAxis","jsx","_jsx","legendMargin","legendOrientation","legendType","showLegend","showLegendControl","name","config","type","label","renderTrigger","default","description","legendMarginControl","isInt","visibility","controls","_controls$show_legend","Boolean","show_legend","value","legendTypeControl","freeForm","choices","_controls$show_legend2","legendOrientationControl","_controls$show_legend3","legendSection","children","showValueControl","stackControl","onlyTotalControl","_controls$show_value","_controls$stack","show_value","stack","percentageThresholdControl","isFloat","percentageThreshold","_controls$show_value2","_controls$stack2","_controls$only_total","only_total","showValueSection","showValueSectionWithoutStack","richTooltipControl","tooltipTimeFormatControl","x_axis_time_format","clearable","tooltipSortByMetricControl","_controls$rich_toolti","rich_tooltip","richTooltipSection","sortSeriesType","sort_series_type","sortSeriesAscending","sort_series_ascending","xAxisLabelRotation","seriesOrderSection","truncateXAxis","xAxisBounds","_controls$truncateXAx","minorTicks","forceCategorical","reactHotLoader","reactHotLoaderGlobal","undefined","register","leaveModule","module"],"sources":["/app/superset-frontend/plugins/plugin-chart-echarts/src/controls.tsx"],"sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport {\n  ControlPanelsContainerProps,\n  ControlSetItem,\n  ControlSetRow,\n  ControlSubSectionHeader,\n  DEFAULT_SORT_SERIES_DATA,\n  SORT_SERIES_CHOICES,\n  sharedControls,\n} from '@superset-ui/chart-controls';\nimport { DEFAULT_LEGEND_FORM_DATA, StackControlOptions } from './constants';\nimport { DEFAULT_FORM_DATA } from './Timeseries/constants';\nimport { defaultXAxis } from './defaults';\n\nconst { legendMargin, legendOrientation, legendType, showLegend } =\n  DEFAULT_LEGEND_FORM_DATA;\n\nexport const showLegendControl: ControlSetItem = {\n  name: 'show_legend',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Show legend'),\n    renderTrigger: true,\n    default: showLegend,\n    description: t('Whether to display a legend for the chart'),\n  },\n};\n\nconst legendMarginControl: ControlSetItem = {\n  name: 'legendMargin',\n  config: {\n    type: 'TextControl',\n    label: t('Margin'),\n    renderTrigger: true,\n    isInt: true,\n    default: legendMargin,\n    description: t('Additional padding for legend.'),\n    visibility: ({ controls }: ControlPanelsContainerProps) =>\n      Boolean(controls?.show_legend?.value),\n  },\n};\n\nconst legendTypeControl: ControlSetItem = {\n  name: 'legendType',\n  config: {\n    type: 'SelectControl',\n    freeForm: false,\n    label: t('Type'),\n    choices: [\n      ['scroll', t('Scroll')],\n      ['plain', t('Plain')],\n    ],\n    default: legendType,\n    renderTrigger: true,\n    description: t('Legend type'),\n    visibility: ({ controls }: ControlPanelsContainerProps) =>\n      Boolean(controls?.show_legend?.value),\n  },\n};\n\nconst legendOrientationControl: ControlSetItem = {\n  name: 'legendOrientation',\n  config: {\n    type: 'SelectControl',\n    freeForm: false,\n    label: t('Orientation'),\n    choices: [\n      ['top', t('Top')],\n      ['bottom', t('Bottom')],\n      ['left', t('Left')],\n      ['right', t('Right')],\n    ],\n    default: legendOrientation,\n    renderTrigger: true,\n    description: t('Legend Orientation'),\n    visibility: ({ controls }: ControlPanelsContainerProps) =>\n      Boolean(controls?.show_legend?.value),\n  },\n};\n\nexport const legendSection: ControlSetRow[] = [\n  [<ControlSubSectionHeader>{t('Legend')}</ControlSubSectionHeader>],\n  [showLegendControl],\n  [legendTypeControl],\n  [legendOrientationControl],\n  [legendMarginControl],\n];\n\nexport const showValueControl: ControlSetItem = {\n  name: 'show_value',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Show Value'),\n    default: false,\n    renderTrigger: true,\n    description: t('Show series values on the chart'),\n  },\n};\n\nexport const stackControl: ControlSetItem = {\n  name: 'stack',\n  config: {\n    type: 'SelectControl',\n    label: t('Stacked Style'),\n    renderTrigger: true,\n    choices: StackControlOptions,\n    default: null,\n    description: t('Stack series on top of each other'),\n  },\n};\n\nexport const onlyTotalControl: ControlSetItem = {\n  name: 'only_total',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Only Total'),\n    default: true,\n    renderTrigger: true,\n    description: t(\n      'Only show the total value on the stacked chart, and not show on the selected category',\n    ),\n    visibility: ({ controls }: ControlPanelsContainerProps) =>\n      Boolean(controls?.show_value?.value) && Boolean(controls?.stack?.value),\n  },\n};\n\nexport const percentageThresholdControl: ControlSetItem = {\n  name: 'percentage_threshold',\n  config: {\n    type: 'TextControl',\n    label: t('Percentage threshold'),\n    renderTrigger: true,\n    isFloat: true,\n    default: DEFAULT_FORM_DATA.percentageThreshold,\n    description: t(\n      'Minimum threshold in percentage points for showing labels.',\n    ),\n    visibility: ({ controls }: ControlPanelsContainerProps) =>\n      Boolean(controls?.show_value?.value) &&\n      Boolean(controls?.stack?.value) &&\n      Boolean(!controls?.only_total?.value),\n  },\n};\n\nexport const showValueSection: ControlSetRow[] = [\n  [showValueControl],\n  [stackControl],\n  [onlyTotalControl],\n  [percentageThresholdControl],\n];\n\nexport const showValueSectionWithoutStack: ControlSetRow[] = [\n  [showValueControl],\n  [onlyTotalControl],\n];\n\nconst richTooltipControl: ControlSetItem = {\n  name: 'rich_tooltip',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Rich tooltip'),\n    renderTrigger: true,\n    default: true,\n    description: t(\n      'Shows a list of all series available at that point in time',\n    ),\n  },\n};\n\nconst tooltipTimeFormatControl: ControlSetItem = {\n  name: 'tooltipTimeFormat',\n  config: {\n    ...sharedControls.x_axis_time_format,\n    label: t('Tooltip time format'),\n    default: 'smart_date',\n    clearable: false,\n  },\n};\n\nconst tooltipSortByMetricControl: ControlSetItem = {\n  name: 'tooltipSortByMetric',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Tooltip sort by metric'),\n    renderTrigger: true,\n    default: false,\n    description: t(\n      'Whether to sort tooltip by the selected metric in descending order.',\n    ),\n    visibility: ({ controls }: ControlPanelsContainerProps) =>\n      Boolean(controls?.rich_tooltip?.value),\n  },\n};\n\nexport const richTooltipSection: ControlSetRow[] = [\n  [<ControlSubSectionHeader>{t('Tooltip')}</ControlSubSectionHeader>],\n  [richTooltipControl],\n  [tooltipSortByMetricControl],\n  [tooltipTimeFormatControl],\n];\n\nconst sortSeriesType: ControlSetItem = {\n  name: 'sort_series_type',\n  config: {\n    type: 'SelectControl',\n    freeForm: false,\n    label: t('Sort Series By'),\n    choices: SORT_SERIES_CHOICES,\n    default: DEFAULT_SORT_SERIES_DATA.sort_series_type,\n    renderTrigger: true,\n    description: t(\n      'Based on what should series be ordered on the chart and legend',\n    ),\n  },\n};\n\nconst sortSeriesAscending: ControlSetItem = {\n  name: 'sort_series_ascending',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Sort Series Ascending'),\n    default: DEFAULT_SORT_SERIES_DATA.sort_series_ascending,\n    renderTrigger: true,\n    description: t('Sort series in ascending order'),\n  },\n};\n\nexport const xAxisLabelRotation = {\n  name: 'xAxisLabelRotation',\n  config: {\n    type: 'SelectControl',\n    freeForm: true,\n    clearable: false,\n    label: t('Rotate x axis label'),\n    choices: [\n      [0, '0째'],\n      [45, '45째'],\n      [90, '90째'],\n    ],\n    default: defaultXAxis.xAxisLabelRotation,\n    renderTrigger: true,\n    description: t('Input field supports custom rotation. e.g. 30 for 30째'),\n  },\n};\n\nexport const seriesOrderSection: ControlSetRow[] = [\n  [<ControlSubSectionHeader>{t('Series Order')}</ControlSubSectionHeader>],\n  [sortSeriesType],\n  [sortSeriesAscending],\n];\n\nexport const truncateXAxis: ControlSetItem = {\n  name: 'truncateXAxis',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Truncate X Axis'),\n    default: DEFAULT_FORM_DATA.truncateXAxis,\n    renderTrigger: true,\n    description: t(\n      'Truncate X Axis. Can be overridden by specifying a min or max bound. Only applicable for numercal X axis.',\n    ),\n  },\n};\n\nexport const xAxisBounds: ControlSetItem = {\n  name: 'xAxisBounds',\n  config: {\n    type: 'BoundsControl',\n    label: t('X Axis Bounds'),\n    renderTrigger: true,\n    default: DEFAULT_FORM_DATA.xAxisBounds,\n    description: t(\n      'Bounds for numerical X axis. Not applicable for temporal or categorical axes. ' +\n        'When left empty, the bounds are dynamically defined based on the min/max of the data. ' +\n        \"Note that this feature will only expand the axis range. It won't \" +\n        \"narrow the data's extent.\",\n    ),\n    visibility: ({ controls }: ControlPanelsContainerProps) =>\n      Boolean(controls?.truncateXAxis?.value),\n  },\n};\n\nexport const minorTicks: ControlSetItem = {\n  name: 'minorTicks',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Minor ticks'),\n    default: false,\n    renderTrigger: true,\n    description: t('Show minor ticks on axes.'),\n  },\n};\n\nexport const forceCategorical: ControlSetItem = {\n  name: 'forceCategorical',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Force categorical'),\n    default: false,\n    renderTrigger: true,\n    description: t('Make the x-axis categorical'),\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}